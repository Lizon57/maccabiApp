{"version":3,"file":"static/js/714.3fa6ec13.chunk.js","mappings":"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","sources":["components/common/dropdown/dropdown.tsx","components/common/error-message/error-message.tsx","constans/days.ts","constans/months.ts","hooks/pages/use-page-data-cmp.ts","hooks/pages/use-page-type.ts","components/entities/portal/filterby-builder/dynamic-filterby/date-filter/date-filter.tsx","components/entities/portal/options-list/dynamic-filter-constructor/filter-section-toggler.tsx","components/entities/portal/options-list/sort-dropdown/sort-dropdown.tsx","components/entities/portal/options-list/options-list.tsx","components/entities/portal/active-filter/active-filter-preview.tsx","components/entities/portal/active-filter/active-filter-list.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby-preview.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby-list.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby.tsx","components/entities/portal/filterby-builder/dynamic-filterby/checkbox-filter/checkbox-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/thumb.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/track.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/slider.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/number-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/text-filter/text-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/dynamic-filterby.tsx","components/entities/portal/filterby-builder/filterby-builder.tsx","services/util/get-relative-past-time.ts","components/common/branch-icon/display-branches-icon-by-ids.tsx","components/entities/portal/image-slider/image-slider.tsx","components/entities/portal/dynamic-entity-preview/square-entity-preview.tsx","components/entities/portal/dynamic-entity-preview/dynamic-entity-preview.tsx","components/entities/portal/entity-list/entity-list.tsx","pages/entities/entity-portal.tsx","services/app/branch-service.ts","services/local-storage-service.ts","services/entities/entity-item-service.ts","services/event-bus-service.ts","services/util/get-month-name.ts","services/util/get-formatted-date.ts","services/util/get-formatted-number.ts","store/action/display-entity-action.ts"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nimport { useOnClickOutside } from \"../../../hooks/use-on-click-outside\"\r\n\r\nimport { eventBus } from \"../../../services/event-bus-service\"\r\n\r\n\r\nexport const Dropdown = ({ controllerText, controllerIcon: Icon, title, children }: Props) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen)\r\n\r\n    const elDropdown = useRef<HTMLDivElement>(null)\r\n    useOnClickOutside(elDropdown, () => setIsDropdownOpen(false))\r\n\r\n    useEffect(() => {\r\n        const unsubscribeCloseDropdown = eventBus.on('closeDropdown', () => {\r\n            setIsDropdownOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeCloseDropdown()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"common-cmp--dropdown__container\" ref={elDropdown}>\r\n            <div className=\"toggler\" title={title} onClick={toggleDropdown}>\r\n                {controllerText && <span>{controllerText}</span>}\r\n                {Icon && <Icon />}\r\n            </div>\r\n\r\n            {isDropdownOpen && <div className=\"dropdown-container\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"children-container\">{children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    controllerText?: string\r\n    controllerIcon?: IconType\r\n    title?: string\r\n    children: JSX.Element\r\n}","import { RiEmotionSadFill } from \"react-icons/ri\"\r\n\r\n\r\nexport const ErrorMessage = ({ message = 'שגיאה בטעינת נתונים' }) => {\r\n    return (\r\n        <div className=\"common-cmp--error-message\">\r\n            <div className=\"error-emoji-container\"><RiEmotionSadFill /></div>\r\n\r\n            <div className=\"text\">{message}</div>\r\n        </div>\r\n    )\r\n}","export const DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\nexport const NON_ZERO_DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]","export const MONTHS = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\nexport const NON_ZERO_MONTHS = [undefined, 'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']","import { useEffect } from 'react'\r\nimport { setPageDataCmpType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageDataCmp = (type: string) => {\r\n    useEffect(() => {\r\n        setPageDataCmpType(type)\r\n\r\n        return () => {\r\n            setPageDataCmpType('join-us')\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useEffect } from 'react'\r\nimport { setPageType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageType = (type: string) => {\r\n    useEffect(() => {\r\n        setPageType(type)\r\n\r\n        return () => {\r\n            setPageType(null)\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport classNames from \"classnames\"\r\nimport { GoChevronDown } from \"react-icons/go\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { NON_ZERO_DAYS } from \"../../../../../../constans/days\"\r\nimport { NON_ZERO_MONTHS } from \"../../../../../../constans/months\"\r\n\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst YEARS: (number | undefined)[] = [undefined]\r\nfor (let i = 1850; i <= new Date().getFullYear(); i++) {\r\n    YEARS.push(i)\r\n}\r\nconst TYPE_NAMES = ['אחרי', 'לפני', 'בדיוק ב']\r\nconst INITIAL_VALUE = { day: undefined, month: undefined, year: undefined }\r\n\r\n\r\nexport const DateFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const [type, setType] = useState(2)\r\n    const [date, setDate] = useState<PossibleValue>(INITIAL_VALUE)\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const navigateNewPick = (activeDate: string) => {\r\n        params.set(filter.param, activeDate)\r\n        params.set(filter.param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateToNewPick = useDebouncedCallback(navigateNewPick, 1000)\r\n\r\n\r\n    const onSelectDate = (part: string, value: number | undefined) => {\r\n        setDate(prevDate => ({ ...prevDate, [part]: value }))\r\n\r\n        if (!date.year && !(part === 'year')) return\r\n        let activeDate: string | (number | string | undefined)[] = [date.day, date.month, date.year]\r\n        if (part === 'day') activeDate[0] = value\r\n        else if (part === 'month') activeDate[1] = value\r\n        else if (part === 'year') activeDate[2] = value\r\n\r\n        activeDate = activeDate.map(part => {\r\n            if (!part) return 'undefined'\r\n            return part\r\n        })\r\n        activeDate = activeDate.join('-')\r\n\r\n        debouncedNavigateToNewPick(activeDate)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param !== filter.param) return\r\n            setDate(INITIAL_VALUE)\r\n            setType(2)\r\n        })\r\n\r\n\r\n        if (!params.get(filter.param)) return\r\n\r\n        let typeFromParam: string | number | null = params.get(filter.param + 'Type') || 2\r\n        typeFromParam = +typeFromParam\r\n        setType(typeFromParam)\r\n\r\n        let newValue = params.get(filter.param)?.split('-').map(value => +value || undefined)\r\n        if (!newValue || newValue.length !== 3) return\r\n        const valueFromParam = {\r\n            day: newValue[0],\r\n            month: newValue[1],\r\n            year: newValue[2],\r\n        }\r\n        setDate(valueFromParam)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--date-filter__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n            <div className=\"content-container\">\r\n                <div className=\"date-picker\">\r\n                    <select\r\n                        value={date.day ? date.day : undefined}\r\n                        onChange={(ev) => onSelectDate('day', +ev.target.value || undefined)}\r\n                    >\r\n                        {NON_ZERO_DAYS.map(day => <option\r\n                            key={day ? day : 'unknown'}\r\n                            value={day ? day : undefined}\r\n                        >\r\n                            {day ? day : 'יום'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <select\r\n                        className=\"month\"\r\n                        value={date.month ? date.month : undefined}\r\n                        onChange={(ev) => onSelectDate('month', +ev.target.value || undefined)}\r\n                    >\r\n                        {NON_ZERO_MONTHS.map((month, idx) => <option\r\n                            key={month ? month : 'unknown'}\r\n                            value={idx ? idx : undefined}\r\n                        >\r\n                            {month ? month : 'חודש'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <select\r\n                        className={classNames('year', { error: (!date.year && (date.day || date.month)) })}\r\n                        value={date.year}\r\n                        onChange={(ev) => onSelectDate('year', +ev.target.value || undefined)}\r\n                    >\r\n                        {YEARS.map(year => <option\r\n                            key={year ? year : 'unknown'}\r\n                            value={year ? year : undefined}\r\n                        >\r\n                            {year ? year : 'שנה'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"additional-content-container\">\r\n                    <div className=\"indicator\">אינדיקציה</div>\r\n                    <div className=\"type-toggler\">\r\n                        <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={GoChevronDown} title=\"שיטת סינון\">\r\n                            <div className=\"options-container\">\r\n                                {TYPE_NAMES.map((typeName, idx) => <div\r\n                                    key={typeName}\r\n                                    className=\"type-option\"\r\n                                    onClick={() => setType(idx)}\r\n                                >{typeName}</div>)}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\ntype PossibleValue = {\r\n    day: number | undefined\r\n    month: number | undefined\r\n    year: number | undefined\r\n}","import { BsFilter } from \"react-icons/bs\"\r\n\r\n\r\nexport const FilterSectionToggler = ({ toggleIsFilterSectionOpen, isFilterSectionOpen }: Props) => {\r\n    const onToggleFillter = () => {\r\n        !isFilterSectionOpen && window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        toggleIsFilterSectionOpen()\r\n    }\r\n\r\n    return (\r\n        <div className=\"entities-portal--dynamic-filter__icon-wrapper\" title=\"סנן פריטים\" onClick={onToggleFillter}>\r\n            <BsFilter />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    isFilterSectionOpen: boolean\r\n    toggleIsFilterSectionOpen: () => void\r\n}","import { useNavigate } from \"react-router-dom\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { BiSort } from \"react-icons/bi\"\r\nimport { FiXCircle } from \"react-icons/fi\"\r\n\r\nimport { EntitySortOption } from \"../../../../../types/entity/sort/entity-sort-option\"\r\n\r\nimport { Dropdown } from \"../../../../common/dropdown/dropdown\"\r\n\r\n\r\nexport const SortDropdown = ({ sorts, setIsLoading }: Props) => {\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSort = () => {\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        setIsLoading(true)\r\n    }\r\n\r\n\r\n    const onSelectSort = ({ key, order }: EntitySortOption) => {\r\n        params.set('sKey', key)\r\n        params.set('sOrder', order)\r\n        navigateNewSort()\r\n    }\r\n\r\n\r\n    const onClearSort = () => {\r\n        params.delete('sKey')\r\n        params.delete('sOrder')\r\n        navigateNewSort()\r\n    }\r\n\r\n\r\n    const getIsSortOptionActive = ({ key, order }: EntitySortOption) => {\r\n        return ((key === params.get('sKey')) && (order === params.get('sOrder')))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"options-list--sort-dropdown__container\">\r\n            <Dropdown controllerIcon={BiSort} title=\"מיין תצוגה\">\r\n                <>\r\n                    <div className=\"sorts-container\">\r\n                        {sorts.map(sort => (\r\n                            <div\r\n                                key={sort.id}\r\n                                className={classNames('sort-option', { active: getIsSortOptionActive(sort) })}\r\n                                title={'מיין לפי ' + sort.title}\r\n                                onClick={() => onSelectSort(sort)}>\r\n                                {sort.title}\r\n                            </div>))}\r\n                    </div>\r\n\r\n                    <div className=\"clear-sort\" onClick={onClearSort} title=\"נקה מיון\">\r\n                        <span className=\"icon\"><FiXCircle /></span>\r\n                        <span className=\"text\">נקה מיון</span>\r\n                    </div>\r\n                </>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n    sorts: EntitySortOption[]\r\n}","import { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\nimport { EntitySortOption } from \"../../../../types/entity/sort/entity-sort-option\"\r\n\r\nimport { SearchInput } from \"../../../common/search-input/search-input\"\r\nimport { FilterSectionToggler } from \"./dynamic-filter-constructor/filter-section-toggler\"\r\nimport { SortDropdown } from \"./sort-dropdown/sort-dropdown\"\r\n\r\n\r\nexport const OptionsList = ({ sorts, filters, isFilterSectionOpen, setIsLoading, toggleIsFilterSectionOpen }: Props) => {\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const primaryTextSearch = filters.find(filter => filter.type === 'primary_text')\r\n    const shouldRenderFiltersToggle = !!filters.filter(filter => filter.type !== 'primary_text').length\r\n\r\n\r\n    const primarySearchCallback = (str: string) => {\r\n        if (!primaryTextSearch) return\r\n\r\n        if (!str) params.delete(primaryTextSearch?.param)\r\n        else params.set(primaryTextSearch?.param, str)\r\n\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n        setIsLoading(true)\r\n    }\r\n    const debouncedPrimarySearchCallback = useDebouncedCallback(primarySearchCallback, 700)\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal-cmp--list-options__container\">\r\n            {primaryTextSearch &&\r\n                <SearchInput\r\n                    placeholder={primaryTextSearch?.title || 'חיפוש'}\r\n                    title={primaryTextSearch?.title || 'חיפוש'}\r\n                    initialValue={params.get(primaryTextSearch?.param) || ''}\r\n                    searchCallback={debouncedPrimarySearchCallback} />}\r\n\r\n            {shouldRenderFiltersToggle &&\r\n                <div className={classNames('filterby-icon', { active: isFilterSectionOpen })}>\r\n                    <FilterSectionToggler\r\n                        isFilterSectionOpen={isFilterSectionOpen}\r\n                        toggleIsFilterSectionOpen={toggleIsFilterSectionOpen}\r\n                    />\r\n                </div>}\r\n\r\n            <SortDropdown sorts={sorts} setIsLoading={setIsLoading} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    sorts: EntitySortOption[]\r\n    filters: EntityFilterOption[]\r\n    isFilterSectionOpen: boolean\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n    toggleIsFilterSectionOpen: () => void\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { FiXCircle } from \"react-icons/fi\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { getFormattedDate } from \"../../../../services/util/get-formatted-date\"\r\nimport { activeClearFilter } from \"../../../../services/event-bus-service\"\r\n\r\n\r\nexport const ActiveFilterPreview = ({ filter, searchParams, setIsLoading }: Props) => {\r\n    const [text, setText] = useState('')\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(() => {\r\n        let filterType = searchParams.get(filter.param + 'Type') || 0\r\n        let text = filter.activeFilterChipTexts[+filterType] || ''\r\n        const plainValue = searchParams.get(filter.param)\r\n        const valueLength = plainValue?.split(',').length + ''\r\n        const range = plainValue?.split('|')\r\n        const minRange = range?.[0] + ''\r\n        const maxRange = range?.[1] + ''\r\n        const booleanValue = (plainValue === 'true') ? 'רק' : 'ללא'\r\n\r\n        let dateValue: string | string[] | (number | undefined)[] = plainValue || ''\r\n        dateValue = dateValue.split('-').map(part => (part === 'undefined' || !part) ? undefined : +part)\r\n        dateValue = getFormattedDate({ day: dateValue[0], month: dateValue[1], year: dateValue[2] }, false, false) + ''\r\n\r\n\r\n        text = text.replace('PLAIN_VALUE', plainValue || '')\r\n        text = text.replace('VALUE_LENGTH', valueLength || '')\r\n        text = text.replace('MIN_RANGE', minRange || '')\r\n        text = text.replace('MAX_RANGE', maxRange || '')\r\n        text = text.replace('BOOLEAN_VALUE', booleanValue || '')\r\n        text = text.replace('DATE_VALUE', dateValue || '')\r\n\r\n        setText(text)\r\n    }, [searchParams]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const onRemoveFilter = () => {\r\n        searchParams.delete(filter.param)\r\n        searchParams.delete(filter.param + 'Type')\r\n\r\n        navigate({ search: searchParams.toString().replaceAll('%2C', ',') })\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        setIsLoading(true)\r\n        activeClearFilter(filter.param)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--active-filter-preview__container\">\r\n            <span className=\"icon-wrapper\" title=\"בטל סנן\" onClick={onRemoveFilter}><FiXCircle /></span>\r\n            <span className=\"text\">{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    searchParams: URLSearchParams\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { ActiveFilterPreview } from \"./active-filter-preview\"\r\n\r\n\r\nexport const ActiveFilterList = ({ possibleFilters, searchParams, setIsLoading }: Props) => {\r\n    const [activeFilters, setActiveFilters] = useState<EntityFilterOption[]>()\r\n\r\n    useEffect(() => {\r\n        const activeFilters = possibleFilters.filter(filter => searchParams.get(filter.param))\r\n        setActiveFilters(activeFilters)\r\n    }, [possibleFilters, searchParams])\r\n\r\n\r\n\r\n    if (!activeFilters?.length) return <></>\r\n\r\n    return (\r\n        <div className=\"entities-portal--active-filter-list__container\">\r\n        <span className=\"title\">סננים פעילים</span>\r\n        <div className=\"list-container\">\r\n            {activeFilters.map(activeFilter => <ActiveFilterPreview\r\n                key={activeFilter.id}\r\n                filter={activeFilter}\r\n                searchParams={searchParams}\r\n                setIsLoading={setIsLoading}\r\n            />)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    possibleFilters: EntityFilterOption[]\r\n    searchParams: URLSearchParams\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import classNames from \"classnames\"\r\nimport { BranchType } from \"../../../../../../types/branch\"\r\n\r\nexport const BranchMultiSelectFilterbyPreview = ({ branch, isActive, toggleActiveBranch }: Props) => {\r\n    const { _id, asset: { symbol }, name: { display: displayName } } = branch\r\n\r\n    return (\r\n        <div\r\n            className={classNames('entities-portal--branch-multi-select-filterby-preview__container', (isActive ? 'active' : 'inactive'))}\r\n            onClick={() => toggleActiveBranch(_id)}>\r\n            <img\r\n                className=\"symbol\"\r\n                src={require(`../../../../../../assets/images/branch-symbol/${symbol}`)}\r\n                alt=\"\" />\r\n            <span>{displayName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    branch: BranchType\r\n    isActive: boolean\r\n    toggleActiveBranch: (id: string) => void\r\n}","import { useEffect, useState, useMemo } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { BRANCHES } from \"../../../../../../data/app/supports-branches\"\r\n\r\nimport { BranchMultiSelectFilterbyPreview } from \"./branch-multi-select-filterby-preview\"\r\n\r\n\r\nexport const BranchMultiSelectFilterbyList = ({ filterParam, debouncedSetIsLoading }: Props) => {\r\n    const { browseableBranchesIds } = useSelector((state: RootState) => state.userStateModule.user)\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const branchesFromParams = useMemo(() => (params.get(filterParam)?.split(',') || []), [filterParam, params])\r\n    const initialBranchesIdsState = (branchesFromParams.length) ? branchesFromParams : browseableBranchesIds\r\n    const [activeBranchesIds, setActiveBranchesIds] = useState<string[]>(initialBranchesIdsState)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateToNewActiveBranches = (newActiveBranches: string[]) => {\r\n        const newActiveBranchesForParam = newActiveBranches.join()\r\n        params.set(filterParam, newActiveBranchesForParam)\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n    }\r\n    const debouncedNavigateToNewActiveBranches = useDebouncedCallback(navigateToNewActiveBranches, 1000)\r\n\r\n\r\n    useEffect(() => {\r\n        setActiveBranchesIds(browseableBranchesIds)\r\n    }, [browseableBranchesIds])\r\n\r\n    useEffect(() => {\r\n        if ((browseableBranchesIds.join('') !== branchesFromParams.join('')) && branchesFromParams.length) {\r\n            setActiveBranchesIds(branchesFromParams)\r\n        }\r\n\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filterParam) setActiveBranchesIds(initialBranchesIdsState)\r\n        })\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const activeNewBranchesIds = (branchesIds: string[]) => {\r\n        setActiveBranchesIds(branchesIds)\r\n        debouncedNavigateToNewActiveBranches(branchesIds)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    const onBranchClick = (branchId: string) => {\r\n        const getIsActiveBranch = !!activeBranchesIds.find(activeBranchId => activeBranchId === branchId)\r\n        let newActiveBranchesIds = activeBranchesIds.slice()\r\n\r\n        if (getIsActiveBranch) newActiveBranchesIds = newActiveBranchesIds.filter(activeBranchId => activeBranchId !== branchId)\r\n        else newActiveBranchesIds.push(branchId)\r\n\r\n        activeNewBranchesIds(newActiveBranchesIds)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--branch-multi-select-list__container\">\r\n            {BRANCHES.map(branch => <BranchMultiSelectFilterbyPreview\r\n                key={branch._id}\r\n                branch={branch}\r\n                isActive={activeBranchesIds.includes(branch._id)}\r\n                toggleActiveBranch={() => onBranchClick(branch._id)}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filterParam: string\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { BranchMultiSelectFilterbyList } from \"./branch-multi-select-filterby-list\"\r\n\r\n\r\nexport const BranchMultiSelectFilterby = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    return (\r\n        <div className=\"entities-portal--branch-multi-select-filterby__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n            <BranchMultiSelectFilterbyList filterParam={filter.param} debouncedSetIsLoading={debouncedSetIsLoading} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\n\r\nexport const CheckboxFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const [value, setValue] = useState<boolean | undefined>()\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSearch = (newValue: boolean | undefined) => {\r\n        if (typeof newValue === 'boolean') params.set(filter.param, newValue.toString())\r\n        else params.delete(filter.param)\r\n\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateNewSearch = useDebouncedCallback(navigateNewSearch, 1000)\r\n\r\n\r\n    const onSetValue = (newValue: boolean | undefined) => {\r\n        setValue(newValue)\r\n        debouncedNavigateNewSearch(newValue)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filter.param) setValue(undefined)\r\n        })\r\n\r\n\r\n        const newValue = params.get(filter.param)\r\n        if (!newValue) return\r\n        setValue(JSON.parse(newValue))\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const getIsActive = (option: string) => {\r\n        switch (option) {\r\n            case 'true':\r\n                if (typeof value === 'boolean' && value) return true\r\n                break\r\n\r\n            case 'false':\r\n                if (typeof value === 'boolean' && !value) return true\r\n                break\r\n\r\n            case 'undefined':\r\n                if (typeof value !== 'boolean') return true\r\n                break\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--checkbox-filter__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n\r\n            <div className=\"content-container\">\r\n                <span className=\"options-container\">\r\n                    <span\r\n                        className={classNames('option', { active: getIsActive('true') })}\r\n                        onClick={() => onSetValue(true)}\r\n                    >רק</span>\r\n\r\n                    <span\r\n                        className={classNames('option', { active: getIsActive('false') })}\r\n                        onClick={() => onSetValue(false)}\r\n                    >ללא</span>\r\n\r\n                    <span className={classNames('param', { active: (typeof value === 'boolean') })}>{filter.title}</span>\r\n                </span>\r\n\r\n                <span\r\n                    className={classNames('clear', ((typeof value === 'boolean') ? 'clickable' : 'active'))}\r\n                    onClick={() => onSetValue(undefined)}\r\n                >לא משנה לי</span>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","export const Thumb = ({ props }: Props) => {\r\n    return (\r\n        <div\r\n            {...props}\r\n            className=\"entities-portal--number-picker__thumb-container\"\r\n            style={{ ...props.style }}\r\n        >\r\n            <span className=\"indicator\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    props: any\r\n}","import { getTrackBackground } from \"react-range\"\r\n\r\n\r\nexport const Track = ({ props, children, values, min, max, type }: Props) => {\r\n    const getColors = () => {\r\n        switch (type) {\r\n            case 0:\r\n                return ['#d4d4d4', '#195da6']\r\n\r\n            case 1:\r\n                return ['#195da6', '#d4d4d4']\r\n\r\n            case 2:\r\n                return ['#d4d4d4', '#195da6','#d4d4d4']\r\n\r\n            default: return []\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"entities-portal--number-picker__track-container\"\r\n            style={{ ...props.style }}\r\n        >\r\n            <div\r\n                ref={props.ref}\r\n                className=\"track\"\r\n                style={{\r\n                    background: getTrackBackground({\r\n                        values,\r\n                        colors: getColors(),\r\n                        min,\r\n                        max,\r\n                        rtl: true\r\n                    }),\r\n                }}\r\n            >{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    props: any\r\n    values: number[]\r\n    min: number\r\n    max: number\r\n    type: number\r\n    children: React.ReactNode\r\n}","import { Range } from \"react-range\"\r\n\r\nimport { Thumb } from \"./thumb\"\r\nimport { Track } from \"./track\"\r\n\r\nexport const Slider = ({ min, max, values, type, setValue }: Props) => {\r\n    const manipulatedValues = (values.length === 2) ? values : [values[0]]\r\n\r\n    const rangeProps = { min, max }\r\n\r\n    return (\r\n        <div>\r\n            <Range\r\n                values={manipulatedValues}\r\n                step={1}\r\n                rtl\r\n                {...rangeProps}\r\n                onChange={setValue}\r\n                renderTrack={({ props, children }) => <Track\r\n                    props={props}\r\n                    values={manipulatedValues}\r\n                    {...rangeProps}\r\n                    type={type}\r\n                    children={children}\r\n                />}\r\n                renderThumb={({ index, props, isDragged }) => <Thumb\r\n                    key={index}\r\n                    props={props}\r\n                />}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    min: number\r\n    max: number\r\n    values: number[]\r\n    type: number\r\n    setValue: (values: number[]) => void\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport { AiFillCaretDown } from \"react-icons/ai\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { Slider } from \"./slider\"\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst TYPE_NAMES = ['החל מ', 'עד ל', 'החל מ עד ל']\r\n\r\n\r\nexport const NumberFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const { param, option, title } = filter\r\n    const [type, setType] = useState(2)\r\n\r\n    const min = option?.min || 0\r\n    const max = option?.max || 100\r\n    const [values, setValues] = useState([min, max])\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const navigateNewPick = (values: number[]) => {\r\n        let activeValues: number[] | string = values\r\n        if (type === 0) activeValues = [values[0], max]\r\n        else if (type === 1) activeValues = [min, values[0]]\r\n        activeValues = activeValues.join('|')\r\n        params.set(param, activeValues)\r\n        params.set(param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateToNewActiveRange = useDebouncedCallback(navigateNewPick, 1000)\r\n\r\n\r\n    const onSetType = (type: number) => {\r\n        switch (type) {\r\n            case 0:\r\n                setValues([values[0]])\r\n                break\r\n\r\n            case 1:\r\n                setValues([values[1] || values[0]])\r\n                break\r\n\r\n            case 2:\r\n                setValues([min, max])\r\n                break\r\n\r\n        }\r\n        setType(type)\r\n    }\r\n\r\n\r\n    const onSetValues = (values: number[]) => {\r\n        setValues(values)\r\n        debouncedNavigateToNewActiveRange(values)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param !== filter.param) return\r\n            const min = option?.min || 0\r\n            const max = option?.max || 100\r\n            setValues([min, max])\r\n            setType(2)\r\n        })\r\n\r\n\r\n        if (!params.get(param)) return\r\n\r\n        let type: string | number | null = params.get(param + 'Type') || 2\r\n        type = +type\r\n        setType(type)\r\n\r\n        let newValues = params.get(param)?.split('|').map(value => +value) || []\r\n        if (type === 0) newValues = [newValues[0]]\r\n        else if (type === 1) newValues = [newValues[1]]\r\n        setValues(newValues)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--number-picker__container\">\r\n            <span className=\"title\">{title}</span>\r\n            <div className=\"content-container\">\r\n                <>\r\n                    <Slider\r\n                        min={min}\r\n                        max={max}\r\n                        values={values}\r\n                        type={type}\r\n                        setValue={onSetValues}\r\n                    />\r\n\r\n                    <div className=\"additional-content-container\">\r\n                        <span className=\"indicator\">\r\n                            {(type === 1) ? '' : `החל מ-${values[0]}`}\r\n                            {type === 2 && ' ו'}\r\n                            {type === 1 && `עד ל-${values[0]}`}\r\n                            {type === 2 && `עד ל-${values[1]}`}\r\n                        </span>\r\n\r\n                        <div className=\"type-toggler\">\r\n                            <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={AiFillCaretDown} title=\"שיטת סינון\">\r\n                                <div className=\"options-container\">\r\n                                    {TYPE_NAMES.map((typeName, idx) => <div\r\n                                        key={typeName}\r\n                                        className=\"type-option\"\r\n                                        onClick={() => onSetType(idx)}\r\n                                    >{typeName}</div>)}\r\n                                </div>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport { AiFillCaretDown } from \"react-icons/ai\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst TYPE_NAMES = ['מתחיל ב', 'נגמר ב', 'כולל את']\r\n\r\nexport const TextFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const { param, title } = filter\r\n    const [type, setType] = useState(2)\r\n    const [value, setValue] = useState('')\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSearch = (value: string) => {\r\n        params.set(param, value)\r\n        params.set(param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateNewSearch = useDebouncedCallback(navigateNewSearch, 1000)\r\n\r\n\r\n    const onSetValue = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value: newValue } = target\r\n        setValue(newValue)\r\n        debouncedNavigateNewSearch(newValue)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filter.param) {\r\n                setValue('')\r\n                setType(2)\r\n            }\r\n        })\r\n\r\n\r\n        const newValue = params.get(param)\r\n        if (!newValue) return\r\n\r\n        setValue(newValue)\r\n\r\n        let type: string | number | null = params.get(param + 'Type') || 2\r\n        if (type === '0') type = 0\r\n        else if (type === '1') type = 1\r\n        else type = 2\r\n        setType(type)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--text-filter__container\">\r\n            <span className=\"title\">{title}</span>\r\n\r\n            <div className=\"content-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={\"חיפוש\" + ((type === 2) ? '  (ניתן להפריד בפסיק)' : '')}\r\n                    value={value}\r\n                    onChange={(ev) => onSetValue(ev)}\r\n                />\r\n\r\n                <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={AiFillCaretDown} title=\"שיטת סינון\">\r\n                    <div className=\"options-container\">\r\n                        {TYPE_NAMES.map((typeName, idx) => <div\r\n                            key={typeName}\r\n                            className=\"type-option\"\r\n                            onClick={() => setType(idx)}\r\n                        >{typeName}</div>)}\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n","import { EntityFilterOption } from \"../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { BranchMultiSelectFilterby } from \"./branch-multi-select/branch-multi-select-filterby\"\r\nimport { CheckboxFilter } from \"./checkbox-filter/checkbox-filter\"\r\nimport { DateFilter } from \"./date-filter/date-filter\"\r\nimport { NumberFilter } from \"./number-filter/number-filter\"\r\nimport { TextFilter } from \"./text-filter/text-filter\"\r\n\r\n\r\nexport const DynamicFilterby = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const basicProps = { filter, debouncedSetIsLoading }\r\n\r\n    switch (filter.type) {\r\n        case 'branch_multi_select':\r\n            return <BranchMultiSelectFilterby {...basicProps} />\r\n\r\n        case 'multi_number_filter':\r\n            return <NumberFilter {...basicProps} />\r\n\r\n        case 'text_filter':\r\n            return <TextFilter {...basicProps} />\r\n\r\n        case 'checkbox_filter':\r\n            return <CheckboxFilter {...basicProps} />\r\n\r\n        case 'date_filter':\r\n            return <DateFilter {...basicProps} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n\r\n}","import classNames from \"classnames\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { DynamicFilterby } from \"./dynamic-filterby/dynamic-filterby\"\r\n\r\n\r\nexport const FilterbyBuilder = ({ filters, debouncedSetIsLoading }: Props) => {\r\n    filters = filters.filter(filter => filter.type !== 'primary_text')\r\n\r\n    return (\r\n        <div className={classNames('entity-portal--filterby-builder__container', { 'short-list': (filters.length < 4) })}>\r\n            {filters.map(filter => <DynamicFilterby\r\n                key={filter.id}\r\n                filter={filter}\r\n                debouncedSetIsLoading={debouncedSetIsLoading}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filters: EntityFilterOption[]\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","const UNITS: Units = {\r\n    year: 24 * 60 * 60 * 1000 * 365,\r\n    month: 24 * 60 * 60 * 1000 * 365 / 12,\r\n    day: 24 * 60 * 60 * 1000,\r\n    hour: 60 * 60 * 1000,\r\n    minute: 60 * 1000,\r\n    second: 1000\r\n}\r\n\r\nconst FORMATTER = new Intl.RelativeTimeFormat('he', { numeric: 'auto' })\r\n\r\nexport const getRelativePastTime = (fromDate: Date, toDate = new Date()) => {\r\n    if (!fromDate) return\r\n\r\n    fromDate = new Date(fromDate)\r\n    const elapsedTime = fromDate.getTime() - toDate.getTime()\r\n\r\n    for (const unit in UNITS) {\r\n        if (Math.abs(elapsedTime) > UNITS[unit] || unit === 'second') {\r\n            return FORMATTER.format(Math.round(elapsedTime / UNITS[unit]), unit as Unit)\r\n        }\r\n    }\r\n}\r\n\r\ntype Units = { [key: string]: number }\r\ntype Unit = \"year\" | \"years\" | \"quarter\" | \"quarters\" | \"month\" | \"months\" | \"week\" | \"weeks\" | \"day\" | \"days\" | \"hour\" | \"hours\" | \"minute\" | \"minutes\" | \"second\" | \"seconds\"","import classNames from \"classnames\"\r\nimport { branchService } from \"../../../services/app/branch-service\"\r\n\r\n\r\nexport const DisplayBranchesIconByIds = ({ ids, className }: Props) => {\r\n    const branches = branchService.getByIds(ids)\r\n    const { asset: { symbol: primaryBranchSymbol }, name: { display: primaryBranchDisplayName } } = branches[0]\r\n    const shouldRenderAdditionalBranchList = (branches.length >= 2)\r\n\r\n    const formatter = new Intl.ListFormat('he', { style: 'long', type: 'conjunction' })\r\n    const branchesNameList = formatter.format(branches.map(branch => branch.name.display))\r\n\r\n\r\n    return (\r\n        <div\r\n            className={classNames('branch-icon--display-branch-icon-by-id', className)}\r\n            title={`מתוך ${branchesNameList}`}\r\n        >\r\n            <img\r\n                src={require(`../../../assets/images/branch-symbol/${primaryBranchSymbol}`)}\r\n                alt={primaryBranchDisplayName}\r\n            />\r\n\r\n            {shouldRenderAdditionalBranchList && <span className=\"additional-branch\">{branches.length - 1}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    ids: string[]\r\n    className?: string\r\n}","import Slider from \"react-slick\"\r\n\r\n\r\nconst CustomDots = () => {\r\n    return (\r\n        <span className=\"entities-portal-cmp--image-carousel-dots__container\"></span>\r\n    )\r\n}\r\n\r\nconst SETTING = { dots: true, speed: 300, customPaging: CustomDots }\r\n\r\nexport const ImageSlider = ({ images, fallbackImgUrl }: Props) => {\r\n    if (!images.length && !fallbackImgUrl) return <></>\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal-cmp--image-carousel__container\">\r\n            <Slider {...SETTING}>\r\n                {images.length\r\n                    ? images.map(image => <img\r\n                        key={image.id}\r\n                        src={image.imageUrl}\r\n                        alt={image.name}\r\n                        title={image.name + ((images.length > 1) ? ` (מתוך ${images.length} תמונות)` : '')}\r\n                    />)\r\n                    : <img\r\n                        src={fallbackImgUrl}\r\n                        className=\"fallback\"\r\n                        alt=\"לא נמצאה תמונת תצוגה\"\r\n                        title=\"לא נמצאה תמונת תצוגה\"\r\n                    />}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    images: {\r\n        id: string\r\n        name: string\r\n        imageUrl: string\r\n    }[]\r\n    fallbackImgUrl?: string\r\n}","import { useState } from \"react\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../store/store\"\r\nimport { insertAppMessage } from \"../../../../store/action/app-state-action\"\r\nimport { setLikedPageMap } from \"../../../../store/action/user-action\"\r\n\r\nimport { getFormattedNumber } from \"../../../../services/util/get-formatted-number\"\r\nimport { getRelativePastTime } from \"../../../../services/util/get-relative-past-time\"\r\nimport { entityItemService } from \"../../../../services/entities/entity-item-service\"\r\n\r\nimport { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { ICON_TYPE_MAP } from \"../../../../constans/icon-type-map\"\r\n\r\nimport { DisplayBranchesIconByIds } from \"../../../common/branch-icon/display-branches-icon-by-ids\"\r\nimport { ImageSlider } from \"../image-slider/image-slider\"\r\n\r\n\r\nconst GET_LITERAL_EDIT_AMOUNT = (amount: number) => {\r\n    if (amount === 1) return 'פעם אחת'\r\n    else if (amount === 2) return 'פעמיים'\r\n    else return `${amount} פעמים`\r\n}\r\n\r\n\r\nexport const SquareEntityPreview = ({ item, fallbackImgUrl }: Props) => {\r\n    const { user } = useSelector((state: RootState) => state.userStateModule)\r\n    const { entity } = useSelector((state: RootState) => state.displayEntityModule)\r\n    const location = useLocation()\r\n    const entityName = location.pathname.slice(1)\r\n\r\n    const getIsLikedItem = () => {\r\n        const likedPages = user.likedPageMap[entityName]\r\n\r\n        if (!likedPages.length) return false\r\n        const itemInLikedPages = likedPages.find((page: string) => page === item._id)\r\n        if (itemInLikedPages) return true\r\n        return false\r\n    }\r\n    const [isLike, setIsLike] = useState((user._id && getIsLikedItem()) || false)\r\n\r\n    const toggleIsLike = async (ev: React.MouseEvent<HTMLButtonElement>) => {\r\n        ev.preventDefault()\r\n\r\n        insertAppMessage({ text: isLike ? `הסרת הדף \"${item?.entityInfo.name.display}\" מרשימת המועדפים` : `הוספת הדף \"${item?.entityInfo.name.display}\" לרשימת המועדפים`, title: 'פעולה הצליחה', type: 'success' })\r\n        const messageText = isLike ? `הסרת הדף \"${item?.entityInfo.name.display}\" מרשימת המועדפים נכשלה` : `הוספת הדף \"${item?.entityInfo.name.display}\" לרשימת המועדפים נכשלה`\r\n        setLikedPageMap(entityName, !isLike, item._id)\r\n        setIsLike(!isLike)\r\n        try {\r\n            await entityItemService.setEntityItemLikeState(entity.name, item._id, !isLike)\r\n        } catch (err) {\r\n            insertAppMessage({ text: messageText, title: 'פעולה נכשלה', type: 'fail' })\r\n            setLikedPageMap(entityName, isLike, item._id)\r\n        }\r\n    }\r\n\r\n\r\n    const totalImageCount = item.miniImages?.length || 0\r\n    const { fillHeart: FillHeartIcon, outlineHeart: OutlineHeartIcon, view: ViewIcon,\r\n        rate: RateIcon, edit: EditIcon } = ICON_TYPE_MAP.entityItemPreview\r\n    const { relatedInfo, entityInfo, itemInfo: { view, rate, history } } = item\r\n\r\n    const relativePastTime = getRelativePastTime(history.lastEditDate)\r\n\r\n    return (\r\n        <Link to={item._id} className=\"dynamic-entity-preview--square-entity-preview__container\">\r\n            <div className=\"image-container\">\r\n                <ImageSlider images={item.miniImages || []} fallbackImgUrl={fallbackImgUrl} />\r\n\r\n                {user._id &&\r\n                    <button\r\n                        className={classNames('like-state', { active: isLike })}\r\n                        title={isLike ? 'הסר מרשימת המועדפים' : 'הוסף לרשימת המועדפים'}\r\n                        onClick={toggleIsLike}>\r\n                        {isLike ? <FillHeartIcon /> : <OutlineHeartIcon />}\r\n                    </button>\r\n                }\r\n\r\n                {totalImageCount > 1 && <span className=\"image-counter\" title={`${totalImageCount} תמונות תצוגה`}>{totalImageCount}</span>}\r\n            </div>\r\n\r\n            <div className=\"title\">\r\n                {relatedInfo?.branchIds && <span className=\"branch-icon\"><DisplayBranchesIconByIds ids={relatedInfo.branchIds} /></span>}\r\n                <span className=\"title\">{entityInfo.name.display}</span>\r\n            </div>\r\n\r\n\r\n            <div className=\"item-additional-info\">\r\n                <div className=\"views-and-rate\">\r\n                    <div className=\"views\" title={`${getFormattedNumber(view)} צפיות`}>\r\n                        <span className=\"icon\"><ViewIcon size={11} /></span>\r\n                        <span className=\"text\">{view ? getFormattedNumber(view) : 'לא נצפה'}</span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"rate\"\r\n                        title={rate.avg\r\n                            ? `${rate.avg} כוכבי דירוג (בידי ${getFormattedNumber(rate.raterCount)} מדרגים)`\r\n                            : 'טרם דורג'}>\r\n                        <span className=\"icon\"><RateIcon size={11} /></span>\r\n                        <span className=\"text\">{rate.avg ? rate.avg : 'ללא דירוג'}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"last-edit-date\"\r\n                    title={(history.totalEditCount)\r\n                        ? `נערך לאחרונה ${relativePastTime}. סה\"כ נערך ${GET_LITERAL_EDIT_AMOUNT(history.totalEditCount)}`\r\n                        : 'טרם נערך'}\r\n                >\r\n                    <span className=\"icon\"><EditIcon size={11} /></span>\r\n                    <span className=\"text\">{relativePastTime ? relativePastTime : 'טרם נערך'}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    item: EntityItem\r\n    fallbackImgUrl: string\r\n}\r\n\r\n","import { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { SquareEntityPreview } from \"./square-entity-preview\"\r\n\r\n\r\nexport const DynamicEntityPreview = ({ item, type, fallbackImgUrl }: Props) => {\r\n    switch (type) {\r\n        case 'square':\r\n            return <SquareEntityPreview item={item} fallbackImgUrl={fallbackImgUrl} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    item: EntityItem\r\n    type: string\r\n    fallbackImgUrl: string\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { Entity } from \"../../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { ICON_TYPE_MAP } from \"../../../../constans/icon-type-map\"\r\n\r\nimport { DynamicEntityPreview } from \"../dynamic-entity-preview/dynamic-entity-preview\"\r\n\r\n\r\nconst PlusIcon = ICON_TYPE_MAP.entityItemPreview.plus\r\n\r\nexport const EntityList = ({ entity, items }: Props) => {\r\n    return (\r\n        <div className=\"entity-portal--entity-list__container\">\r\n            <div className=\"add-entity-container\" title=\"הוסף פריט\">\r\n                <Link to=\"save\">\r\n                    <span className=\"icon-wrapper\"><PlusIcon size={40} /></span>\r\n                    <span className=\"text\">הוסף פריט</span>\r\n                </Link>\r\n            </div>\r\n\r\n            {items.map(item => <DynamicEntityPreview\r\n                key={item._id}\r\n                item={item}\r\n                type={entity.listPageInfo.previewType}\r\n                fallbackImgUrl={entity.entityInfo.image.thumbnail.path}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n    items: EntityItem[]\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { entityItemService } from \"../../services/entities/entity-item-service\"\r\n\r\nimport { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store/store\"\r\nimport { clearDisplayEntity, updateDisplayEntity } from \"../../store/action/display-entity-action\"\r\n\r\nimport { ENTITIES_LIST } from \"../../constans/entities-list\"\r\n\r\nimport { useOnWindowResize } from \"../../hooks/use-on-window-resize\"\r\nimport { usePageDataCmp } from \"../../hooks/pages/use-page-data-cmp\"\r\nimport { usePageType } from \"../../hooks/pages/use-page-type\"\r\n\r\nimport { Loader } from \"../../components/common/loader/loader\"\r\nimport { ErrorMessage } from \"../../components/common/error-message/error-message\"\r\nimport { MainTitle } from \"../../components/common/main-title/main-title\"\r\nimport { OptionsList } from \"../../components/entities/portal/options-list/options-list\"\r\nimport { ActiveFilterList } from \"../../components/entities/portal/active-filter/active-filter-list\"\r\nimport { FilterbyBuilder } from \"../../components/entities/portal/filterby-builder/filterby-builder\"\r\nimport { SeoImplement } from \"../../components/common/seo-implement/seo-implement\"\r\nimport { EntityList } from \"../../components/entities/portal/entity-list/entity-list\"\r\nimport { errorHandler } from \"../../services/util/error-handler\"\r\n\r\n\r\nconst EntityPortalWrapper = () => {\r\n    let { pathname } = useLocation()\r\n    pathname = pathname.split('/')[1]\r\n    const entity = ENTITIES_LIST[pathname]\r\n    return (\r\n        <EntityPortal entity={entity} />\r\n    )\r\n}\r\n\r\n\r\nconst EntityPortal = ({ entity }: Props) => {\r\n    const { browseableBranchesIds: userPrefBranchesFilter } = useSelector((state: RootState) => state.userStateModule.user)\r\n    const [items, setItems] = useState<EntityItem[]>()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n    const [isFilterSectionOpen, setIsFilterSectionOpen] = useState(window.innerWidth > 700)\r\n\r\n    const { searchParams } = new URL(window.location.href)\r\n\r\n    usePageDataCmp('join-us')\r\n    usePageType('entity-item-portal')\r\n\r\n    const toggleIsFilterSectionOpen = () => setIsFilterSectionOpen(!isFilterSectionOpen)\r\n    const debouncedSetIsLoading = useDebouncedCallback(setIsLoading, 1000)\r\n\r\n\r\n    const fetchItems = async () => {\r\n        try {\r\n            if (!searchParams.get('fBranchIds')) searchParams.set('fBranchIds', userPrefBranchesFilter)\r\n            const items = await entityItemService.query(entity.name, searchParams)\r\n            setItems(items)\r\n        } catch ({ message }) {\r\n            const errorMessage = errorHandler(message, false)\r\n            setErrorMessage(errorMessage)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [entity])\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return\r\n        fetchItems()\r\n    }, [searchParams, userPrefBranchesFilter]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    useEffect(() => {\r\n        updateDisplayEntity(entity)\r\n\r\n        return () => {\r\n            clearDisplayEntity()\r\n        }\r\n    }, [entity])\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [userPrefBranchesFilter])\r\n\r\n\r\n    const changeFilterSectionOpenOnWindowResize = () => {\r\n        const { innerWidth } = window\r\n        if (innerWidth < 700 && isFilterSectionOpen) setIsFilterSectionOpen(false)\r\n        else if (innerWidth > 700 && !isFilterSectionOpen) setIsFilterSectionOpen(true)\r\n    }\r\n    useOnWindowResize(changeFilterSectionOpenOnWindowResize)\r\n\r\n\r\n    const {\r\n        entityInfo: { image: { icon: Icon }, name: { listTitle } },\r\n        listPageInfo: { filters, sorts }\r\n    } = entity\r\n\r\n    const titleAdditionalCmp = <OptionsList\r\n        sorts={sorts}\r\n        filters={filters}\r\n        isFilterSectionOpen={isFilterSectionOpen}\r\n        setIsLoading={setIsLoading}\r\n        toggleIsFilterSectionOpen={toggleIsFilterSectionOpen}\r\n    />\r\n\r\n    const FilterbyBuilderProps = { filters, debouncedSetIsLoading }\r\n    const { display: entityDisplayName, openGraph } = entity.entityInfo.name\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--entity-portal__container\">\r\n                <MainTitle text={listTitle} Icon={Icon} isSticky additionalCmp={titleAdditionalCmp} />\r\n\r\n                <ActiveFilterList possibleFilters={filters} searchParams={searchParams} setIsLoading={setIsLoading} />\r\n                {isFilterSectionOpen && <FilterbyBuilder {...FilterbyBuilderProps} />}\r\n\r\n                {isLoading && <Loader />}\r\n                {errorMessage && <ErrorMessage message={errorMessage} />}\r\n\r\n                {(!isLoading && !errorMessage && !items?.length) && <ErrorMessage message=\"לא נמצאו פריטים להצגה\" />}\r\n                {(!isLoading && !errorMessage && !!items?.length) && <EntityList entity={entity} items={items} />}\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={entityDisplayName}\r\n                openGraphTitle={openGraph}\r\n                pageDescription={entity.entityInfo.description.short}\r\n                openGraphDescription={entity.entityInfo.description.short}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntityPortalWrapper\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { BRANCHES } from \"../../data/app/supports-branches\"\r\nimport { BranchType } from \"../../types/branch\"\r\n\r\n\r\nconst getById = (id: string) => {\r\n    return BRANCHES.find(({ _id }) => _id === id)\r\n}\r\n\r\n\r\nconst getByIds = (ids: string[]) => {\r\n    const mappedBranches: BranchType[] = []\r\n    ids.forEach(branchId => {\r\n        const branch = BRANCHES.find(({ _id }) => _id === branchId)\r\n        if (branch) mappedBranches.push(branch)\r\n    })\r\n\r\n    return mappedBranches\r\n}\r\n\r\n\r\nexport const branchService = {\r\n    getById,\r\n    getByIds\r\n}","const readFromStorage = (key: string) => {\r\n    const value = localStorage.getItem(key)\r\n    if (!value) return\r\n    return JSON.parse(value)\r\n}\r\n\r\nconst saveToStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\n\r\nexport const localStorageService = {\r\n    readFromStorage,\r\n    saveToStorage,\r\n}","import { httpService } from \"../http-service\"\r\nimport { localStorageService } from \"../local-storage-service\"\r\n\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { EntityItemViewDetails } from \"../../models/types/entities/entity-item-view-details\"\r\n\r\n\r\nconst STORAGE_KEY = 'ViewedPages'\r\n\r\n\r\nconst query = async (dbName: string, params: URLSearchParams, archiveState?: string) => {\r\n    if (archiveState) params.set('fArchived', archiveState + '')\r\n\r\n    try {\r\n        return await httpService.get(dbName, params) as EntityItem[]\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst getById = async (dbName: string, id: string, isPageAction = false) => {\r\n    try {\r\n        const res = await httpService.get(`${dbName}/${id}`) as EntityItem\r\n\r\n        if (!isPageAction) _handleEntityItemView(dbName, id)\r\n        return res\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst remove = async (dbName: string, id: string) => {\r\n    try {\r\n        await httpService.delete(`${dbName}/${id}`)\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst save = async (dbName: string, item: EntityItem) => {\r\n    try {\r\n        const savedItem = item._id ? await httpService.put(`${dbName}/${item._id}`, item) : await httpService.post(`${dbName}`, item)\r\n        return savedItem\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst getMiniProfilesByPharse = async (pharse: string = '') => {\r\n    try {\r\n        return await httpService.get('profile/getMiniProfilesByPharse', { pharse })\r\n    } catch (err) {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst setEntityItemRate = async (entityName: string, id: string, rate: number) => {\r\n    try {\r\n        const ratePayload = { id, entityName, rate }\r\n        return await httpService.put('entity-item-info-update/rate', { ratePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst setEntityItemLikeState = async (entityName: string, id: string, isLike: boolean) => {\r\n    try {\r\n        const likeStatePayload = { id, entityName, isLike }\r\n        return await httpService.put('entity-item-info-update/like', { likeStatePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst _handleEntityItemView = async (entityName: string, id: string) => {\r\n    let viewList = localStorageService.readFromStorage(STORAGE_KEY) as EntityItemViewDetails[]\r\n    if (!Array.isArray(viewList)) {\r\n        localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        viewList = []\r\n    }\r\n\r\n    viewList.push({ entityName, entityItemId: id })\r\n\r\n    if (viewList.length >= 3) {\r\n        try {\r\n            await httpService.put('entity-item-info-update/view', viewList)\r\n            localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        } catch {\r\n            localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n        }\r\n    }\r\n    else localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n}\r\n\r\n\r\nexport const entityItemService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getMiniProfilesByPharse,\r\n    setEntityItemRate,\r\n    setEntityItemLikeState\r\n}","const createEventEmitter = () => {\r\n    const listenersMap: ListenersMap = {}\r\n\r\n    return {\r\n        on(evName: string, listener: Listener) {\r\n            listenersMap[evName] = (listenersMap[evName]) ? [...listenersMap[evName], listener] : [listener]\r\n            return () => {\r\n                listenersMap[evName] = listenersMap[evName].filter(func => func !== listener)\r\n            }\r\n        },\r\n        emit(evName: string, data?: unknown) {\r\n            if (!listenersMap[evName]) return\r\n            listenersMap[evName].forEach(listener => listener(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventBus = createEventEmitter()\r\n\r\n\r\ntype ListenersMap = { [key: string]: Listener[] }\r\ntype Listener = (data: unknown) => void\r\n\r\n\r\n\r\nexport const activeClearFilter = (param: string) => {\r\n    eventBus.emit('clear-filter', param)\r\n}\r\n\r\nexport const closeDropdown = () =>{\r\n    eventBus.emit('closeDropdown')\r\n}","export const getMonthName = (month: number, isZeroIndex: boolean = true) => {\r\n    const names = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\n\r\n    return names[isZeroIndex ? month : month - 1]\r\n}","import { getMonthName } from \"./get-month-name\"\r\n\r\nexport const getFormattedDate = (\r\n    date: { day?: number, month?: number, year?: number, timestamp?: number },\r\n    isZeroIndex: boolean = true,\r\n    isLinkAble: boolean = false) => {\r\n\r\n    if (!date) return\r\n\r\n    const { day, month, year } = date\r\n    let value = ''\r\n\r\n    if (isLinkAble) return value\r\n\r\n    if (day) {\r\n        value += day\r\n        if (typeof month === 'number') {\r\n            value += ' ב' + getMonthName(month, isZeroIndex)\r\n            value += ' ' + (getYear(year) || 'בשנה לא ידועה')\r\n        } else {\r\n            value += ' (חודש לא ידוע) ב-' + (getYear(year) || 'בשנה לא ידועה')\r\n        }\r\n        return value\r\n    }\r\n\r\n    if (typeof month === 'number') {\r\n        value += getMonthName(month, isZeroIndex)\r\n\r\n        value += ' ' + getYear(year)\r\n        return value\r\n    }\r\n\r\n    else return getYear(year)\r\n}\r\n\r\n\r\nconst getYear = (year: number | undefined) => {\r\n    return (year) ? year : 'בשנה לא ידועה'\r\n}","export const getFormattedNumber = (number: number) => {\r\n    return new Intl.NumberFormat('he').format(number)\r\n}","import { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntity = (entity: Entity) => {\r\n    store.dispatch({ type: 'updateDisplayEntity', entity })\r\n}\r\n\r\n\r\nexport const clearDisplayEntity = () => {\r\n    store.dispatch({ type: 'clearDisplayEntity' })\r\n}"],"names":["Dropdown","_ref","controllerText","Icon","controllerIcon","title","children","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","elDropdown","useRef","useOnClickOutside","useEffect","unsubscribeCloseDropdown","eventBus","_jsxs","className","ref","onClick","_jsx","ErrorMessage","_ref$message","message","RiEmotionSadFill","NON_ZERO_DAYS","undefined","NON_ZERO_MONTHS","usePageDataCmp","type","setPageDataCmpType","usePageType","setPageType","FilterSectionToggler","toggleIsFilterSectionOpen","isFilterSectionOpen","window","scrollTo","top","behavior","BsFilter","SortDropdown","sorts","setIsLoading","params","URL","location","href","searchParams","navigate","useNavigate","navigateNewSort","search","toString","replaceAll","getIsSortOptionActive","_ref3","key","order","get","BiSort","_Fragment","map","sort","classNames","active","_ref2","set","onSelectSort","id","delete","FiXCircle","OptionsList","filters","primaryTextSearch","find","filter","shouldRenderFiltersToggle","length","debouncedPrimarySearchCallback","useDebouncedCallback","str","param","SearchInput","placeholder","initialValue","searchCallback","ActiveFilterPreview","text","setText","filterType","activeFilterChipTexts","plainValue","valueLength","split","range","minRange","maxRange","booleanValue","dateValue","part","getFormattedDate","day","month","year","replace","activeClearFilter","ActiveFilterList","possibleFilters","activeFilters","setActiveFilters","activeFilter","BranchMultiSelectFilterbyPreview","branch","isActive","toggleActiveBranch","_id","symbol","asset","displayName","name","display","src","require","concat","alt","BranchMultiSelectFilterbyList","filterParam","debouncedSetIsLoading","browseableBranchesIds","useSelector","state","userStateModule","user","branchesFromParams","useMemo","_params$get","initialBranchesIdsState","activeBranchesIds","setActiveBranchesIds","debouncedNavigateToNewActiveBranches","newActiveBranches","newActiveBranchesForParam","join","unsubscribeClearFilter","onBranchClick","branchId","branchesIds","getIsActiveBranch","activeBranchId","newActiveBranchesIds","slice","push","BRANCHES","includes","BranchMultiSelectFilterby","CheckboxFilter","value","setValue","debouncedNavigateNewSearch","newValue","onSetValue","JSON","parse","getIsActive","option","YEARS","i","Date","getFullYear","TYPE_NAMES","INITIAL_VALUE","DateFilter","setType","_useState3","_useState4","date","setDate","debouncedNavigateToNewPick","activeDate","onSelectDate","prevDate","_objectSpread","_defineProperty","typeFromParam","valueFromParam","onChange","ev","target","idx","error","GoChevronDown","typeName","Thumb","props","style","Track","values","min","max","background","getTrackBackground","colors","getColors","rtl","Slider","manipulatedValues","rangeProps","Range","step","renderTrack","renderThumb","index","isDragged","NumberFilter","setValues","debouncedNavigateToNewActiveRange","activeValues","newValues","AiFillCaretDown","onSetType","TextFilter","DynamicFilterby","basicProps","FilterbyBuilder","UNITS","hour","minute","second","FORMATTER","Intl","RelativeTimeFormat","numeric","DisplayBranchesIconByIds","ids","branches","branchService","_branches$","primaryBranchSymbol","primaryBranchDisplayName","shouldRenderAdditionalBranchList","branchesNameList","ListFormat","format","SETTING","dots","speed","customPaging","ImageSlider","images","fallbackImgUrl","image","imageUrl","SquareEntityPreview","_item$miniImages","amount","item","entity","displayEntityModule","entityName","useLocation","pathname","likedPages","likedPageMap","page","getIsLikedItem","isLike","setIsLike","toggleIsLike","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messageText","wrap","_context","prev","next","preventDefault","insertAppMessage","entityInfo","setLikedPageMap","entityItemService","t0","stop","_x","apply","arguments","totalImageCount","miniImages","_ICON_TYPE_MAP$entity","ICON_TYPE_MAP","FillHeartIcon","fillHeart","OutlineHeartIcon","outlineHeart","ViewIcon","view","RateIcon","rate","EditIcon","edit","relatedInfo","_item$itemInfo","itemInfo","history","relativePastTime","fromDate","toDate","elapsedTime","getTime","unit","Math","abs","round","getRelativePastTime","lastEditDate","Link","to","branchIds","getFormattedNumber","size","avg","raterCount","totalEditCount","DynamicEntityPreview","PlusIcon","EntityList","items","listPageInfo","previewType","thumbnail","path","EntityPortal","userPrefBranchesFilter","setItems","isLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","innerWidth","_useState8","setIsFilterSectionOpen","fetchItems","_items","_errorMessage","sent","errorHandler","finish","updateDisplayEntity","clearDisplayEntity","useOnWindowResize","_entity$entityInfo","icon","listTitle","_entity$listPageInfo","titleAdditionalCmp","FilterbyBuilderProps","_entity$entityInfo$na","entityDisplayName","openGraph","MainTitle","isSticky","additionalCmp","Loader","SeoImplement","appTitle","openGraphTitle","pageDescription","description","short","openGraphDescription","ENTITIES_LIST","getById","getByIds","mappedBranches","forEach","localStorageService","localStorage","getItem","setItem","stringify","STORAGE_KEY","query","dbName","archiveState","httpService","abrupt","_x2","_x3","_callee2","isPageAction","res","_args2","_context2","_handleEntityItemView","_x4","_x5","remove","_callee3","_context3","_x6","_x7","save","_ref4","_callee4","savedItem","_context4","t1","_x8","_x9","getMiniProfilesByPharse","_ref5","_callee5","pharse","_args5","_context5","setEntityItemRate","_ref6","_callee6","ratePayload","_context6","_x10","_x11","_x12","setEntityItemLikeState","_ref7","_callee7","likeStatePayload","_context7","_x13","_x14","_x15","_ref8","_callee8","viewList","_context8","Array","isArray","entityItemId","_x16","_x17","listenersMap","on","evName","listener","_toConsumableArray","func","emit","data","createEventEmitter","getMonthName","isZeroIndex","isLinkAble","getYear","number","NumberFormat","store"],"sourceRoot":""}