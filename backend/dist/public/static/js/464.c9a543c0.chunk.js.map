{"version":3,"file":"static/js/464.c9a543c0.chunk.js","mappings":"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","sources":["components/common/dropdown/dropdown.tsx","components/common/error-message/error-message.tsx","constans/days.ts","constans/months.ts","constans/years.ts","store/action/save-entity-item-action.ts","components/entities/save/dynamic-entity-save-stage/associate-related-data/related-branch-picker/related-branch-option-preview.tsx","components/entities/save/dynamic-entity-save-stage/associate-related-data/related-branch-picker/related-branch-picker.tsx","components/entities/save/dynamic-entity-save-stage/associate-related-data/related-profile-picker/related-profile-option-preview.tsx","components/entities/save/dynamic-entity-save-stage/associate-related-data/related-profile-picker/related-profile-picker.tsx","components/entities/save/dynamic-entity-save-stage/associate-related-data/dynamic-associate-picker-list.tsx","components/entities/save/dynamic-entity-save-stage/image-upload/dropable-section.tsx","components/entities/save/dynamic-entity-save-stage/image-upload/image-on-upload-preview.tsx","hooks/use-is-first-render.ts","components/entities/save/dynamic-entity-save-stage/image-upload/uploaded-image-preview.tsx","components/entities/save/dynamic-entity-save-stage/image-upload/image-upload.tsx","components/entities/save/dynamic-entity-save-stage/page-details/page-details.tsx","services/util/recursive-value-setter-by-key.ts","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/binary-picker.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/date-picker.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/durations-picker/duration-add.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/durations-picker/date-picker.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/durations-picker/duration-picker-preview.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/durations-picker/durations-picker-list.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/number-picker.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/pickers/symbol-seperate-list.tsx","components/entities/save/dynamic-entity-save-stage/profile-filler/profile-filler.tsx","components/entities/save/dynamic-entity-save-stage/dynamic-entity-save-stage.tsx","components/entities/save/stage-stepper/tablet-wide-plus-stage-stepper.tsx","components/entities/save/stage-stepper/up-to-tablet-wide-stage-stepper.tsx","components/entities/save/stage-stepper/stage-stepper.tsx","pages/entities/entity-save.tsx","services/app/branch-service.ts","services/local-storage-service.ts","services/entities/entity-item-service.ts","services/event-bus-service.ts","services/util/get-value-by-dynamic-key.ts","store/action/display-entity-item-action.ts"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nimport { useOnClickOutside } from \"../../../hooks/use-on-click-outside\"\r\n\r\nimport { eventBus } from \"../../../services/event-bus-service\"\r\n\r\n\r\nexport const Dropdown = ({ controllerText, controllerIcon: Icon, title, children }: Props) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen)\r\n\r\n    const elDropdown = useRef<HTMLDivElement>(null)\r\n    useOnClickOutside(elDropdown, () => setIsDropdownOpen(false))\r\n\r\n    useEffect(() => {\r\n        const unsubscribeCloseDropdown = eventBus.on('closeDropdown', () => {\r\n            setIsDropdownOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeCloseDropdown()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"common-cmp--dropdown__container\" ref={elDropdown}>\r\n            <div className=\"toggler\" title={title} onClick={toggleDropdown}>\r\n                {controllerText && <span>{controllerText}</span>}\r\n                {Icon && <Icon />}\r\n            </div>\r\n\r\n            {isDropdownOpen && <div className=\"dropdown-container\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"children-container\">{children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    controllerText?: string\r\n    controllerIcon?: IconType\r\n    title?: string\r\n    children: JSX.Element\r\n}","import { RiEmotionSadFill } from \"react-icons/ri\"\r\n\r\n\r\nexport const ErrorMessage = ({ message = 'שגיאה בטעינת נתונים' }) => {\r\n    return (\r\n        <div className=\"common-cmp--error-message\">\r\n            <div className=\"error-emoji-container\"><RiEmotionSadFill /></div>\r\n\r\n            <div className=\"text\">{message}</div>\r\n        </div>\r\n    )\r\n}","export const DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\nexport const NON_ZERO_DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]","export const MONTHS = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\nexport const NON_ZERO_MONTHS = [undefined, 'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']","export const YEARS: (number | undefined)[] = [undefined]\r\nfor (let i = 1850; i <= new Date().getFullYear(); i++) {\r\n    YEARS.push(i)\r\n}","import { store } from \"../store\"\r\nimport { emptyEntityItemService } from \"../../services/entities/empty-entity-item-service\"\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\n\r\n\r\n\r\nexport const setSaveEntityItem = (item: EntityItem | null) => {\r\n    if (!item) item = emptyEntityItemService.get('')\r\n    store.dispatch({ type: 'setSaveEntityItem', item })\r\n}","export const RelatedBranchOptionPreview = ({ option }: Props) => {\r\n    return (\r\n        <div className=\"entity-save-cmp--related-branch-option-preview__container\">\r\n            <img src={require(`../../../../../../assets/images/branch-symbol/${option.img}`)} alt=\"\" />\r\n            <span className=\"branch-name\">{option.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    option: {\r\n        name: string\r\n        img: string\r\n    }\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport Select from 'react-select'\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\nimport { updateDisplayEntityItem } from \"../../../../../../store/action/display-entity-item-action\"\r\n\r\nimport { BRANCHES } from '../../../../../../data/app/supports-branches'\r\n\r\nimport { RelatedBranchOptionPreview } from \"./related-branch-option-preview\"\r\n\r\n\r\nconst OPTIONS = BRANCHES.map(branch => ({\r\n    label: branch.name.display,\r\n    value: {\r\n        id: branch._id,\r\n        name: branch.name.display,\r\n        img: branch.asset.symbol\r\n    }\r\n}))\r\n\r\n\r\nexport const RelatedBranchPicker = ({ isRequire }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const [values, setValues] = useState<Option[]>([])\r\n    const [isFail, setIsFail] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!item?.relatedInfo?.branchIds) return\r\n\r\n        const filteredOptions = OPTIONS.filter(option => item.relatedInfo?.branchIds.includes(option.value.id))\r\n\r\n        setValues(filteredOptions)\r\n        setIsFail(false)\r\n    }, [item])\r\n\r\n\r\n    const handleSelectChange = (values: any) => {\r\n        const branchIds = values.map((value: Option) => value.value.id)\r\n        const editedItem = structuredClone(item)\r\n        if (!editedItem.relatedInfo) editedItem.relatedInfo = {}\r\n        editedItem.relatedInfo.branchIds = branchIds\r\n        setValues(values)\r\n        setIsFail(false)\r\n        setSaveEntityItem(editedItem)\r\n        updateDisplayEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    const onBlurInput = () => {\r\n        if (!isRequire) return\r\n\r\n        if (!item?.relatedInfo?.branchIds.length) setIsFail(true)\r\n        else setIsFail(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--related-branch-picker__container\">\r\n            <div className={\"picker\" + (isFail ? ' fail' : '')} title=\"בחירת ענף\">\r\n                <span className=\"title\">בחירת ענף</span>\r\n\r\n                <Select\r\n                    options={OPTIONS}\r\n                    value={values}\r\n                    className=\"react-select-cmp-container\"\r\n                    styles={customStyles}\r\n                    placeholder=\"בחר ענף\"\r\n                    noOptionsMessage={(({ inputValue }) => `לא נמצא ענף המכיל את \"${inputValue}\"`)}\r\n                    formatOptionLabel={({ value }) => <RelatedBranchOptionPreview option={value} />}\r\n                    onChange={(value => handleSelectChange(value))}\r\n                    defaultValue={values}\r\n                    onBlur={onBlurInput}\r\n                    isMulti\r\n                />\r\n            </div>\r\n\r\n            {!!isFail && <div className=\"msg\">חובה לשייך ענף</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst customStyles = {\r\n    control: () => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        minWidth: '15rem',\r\n        minHeight: '0'\r\n    }),\r\n\r\n    indicatorSeparator: () => ({}),\r\n\r\n    option: (provided: any, { isFocused }: any) => ({\r\n        ...provided,\r\n        backgroundColor: isFocused ? '#195da6' : 'transparent',\r\n        color: isFocused ? '#fafafa' : '#222'\r\n    }),\r\n\r\n    noOptionsMessage: (provided: any) => ({\r\n        ...provided,\r\n        fontSize: '13px',\r\n        padding: '2px'\r\n    }),\r\n\r\n    multiValueRemove: (provided: any) => ({\r\n        ...provided,\r\n        ':hover': {\r\n            backgroundColor: '#195da6',\r\n            color: '#ffff'\r\n        }\r\n    })\r\n}\r\n\r\n\r\ntype Props = {\r\n    isRequire: boolean\r\n}\r\n\r\n\r\ntype Option = {\r\n    label: string\r\n    value: {\r\n        id: string\r\n        name: string\r\n        img: string\r\n    }\r\n}","import { branchService } from \"../../../../../../services/app/branch-service\"\r\n\r\n\r\nexport const RelatedProfileOptionPreview = ({ option }: Props) => {\r\n    if (!option?.id) return null\r\n    const { branchIds, name, profileImageUrl } = option\r\n\r\n    const branchNames = branchService.getByIds(branchIds).map(branch => branch.name.display)\r\n    const formatter = new Intl.ListFormat('he', { style: 'long', type: 'conjunction' })\r\n    const branchesNameList = formatter.format(branchNames)\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--related-profile-option-preview__container\" title={name}>\r\n            <span className=\"image\">\r\n                <img src={profileImageUrl} alt={`${name} - תמונת פרופיל`} />\r\n            </span>\r\n\r\n            <div className=\"name-and-branch\">\r\n                <span className=\"name\">{name}</span>\r\n                <span className=\"branch\">{branchesNameList}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    option: {\r\n        id: string\r\n        name: string\r\n        branchIds: string[]\r\n        profileImageUrl: string\r\n    }\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\n\r\nimport AsyncSelect from \"react-select/async\"\r\nimport { GroupBase, OptionsOrGroups, SingleValue } from \"react-select\"\r\n\r\nimport { entityItemService } from \"../../../../../../services/entities/entity-item-service\"\r\nimport { MiniProfileQuery } from \"../../../../../../models/interfaces/entities/mini-profile-query\"\r\n\r\nimport { RelatedProfileOptionPreview } from \"./related-profile-option-preview\"\r\n\r\nimport { FaTimes } from \"react-icons/fa\"\r\n\r\n\r\nexport const RelatedProfilePicker = ({ isRequire }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const [value, setValue] = useState<SingleValue<ProfileOption>>()\r\n    const [isClearable, setIsClearable] = useState<boolean>(false)\r\n    const [isFail, setIsFail] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (item.relatedInfo?.miniProfile) {\r\n            const { relatedInfo: { miniProfile, branchIds } } = item\r\n\r\n            const value = {\r\n                label: miniProfile?.displayName || '',\r\n                value: {\r\n                    id: miniProfile?.profileId || '',\r\n                    name: miniProfile?.displayName || '',\r\n                    branchIds: branchIds || [],\r\n                    profileImageUrl: miniProfile?.profileImageUrl || ''\r\n                }\r\n            }\r\n            setValue(value)\r\n            setIsClearable(true)\r\n        }\r\n    }, [item])\r\n\r\n\r\n    const getOptions = async (pharse: string) => {\r\n        if (!pharse) return []\r\n\r\n        try {\r\n            const items = await entityItemService.getMiniProfilesByPharse(pharse) as MiniProfileQuery[]\r\n            const options = items.map(profile => ({\r\n                label: profile.name,\r\n                value: { ...profile }\r\n            }))\r\n            return options as ProfileOption[]\r\n        } catch (err) {\r\n            return [] as ProfileOption[]\r\n        }\r\n    }\r\n\r\n    const loadOptions = (pharse = '', callback: (options: OptionsOrGroups<ProfileOption, GroupBase<ProfileOption>>) => void) => {\r\n        return new Promise<ProfileOption[]>(async _ => {\r\n            const options = await getOptions(pharse)\r\n            if (options) callback(options)\r\n        })\r\n    }\r\n    const debouncedLoadOptions = useDebouncedCallback(loadOptions, 300)\r\n\r\n\r\n    const setProfile = (option: SingleValue<ProfileOption>) => {\r\n        const editedItem = structuredClone(item)\r\n        if (!editedItem.relatedInfo) editedItem.relatedInfo = {}\r\n\r\n        editedItem.relatedInfo.miniProfile = {\r\n            profileId: option?.value.id,\r\n            displayName: option?.value.name,\r\n            profileImageUrl: option?.value.profileImageUrl\r\n        }\r\n        editedItem.entityInfo.name.display = option?.value.name\r\n        editedItem.relatedInfo.branchIds = option?.value.branchIds\r\n        setValue(editedItem.relatedInfo)\r\n        setIsClearable(true)\r\n        setSaveEntityItem(editedItem)\r\n        setIsFail(false)\r\n    }\r\n\r\n\r\n    const onBlurInput = () => {\r\n        if (!isRequire) return\r\n\r\n        if (!item?.relatedInfo?.miniProfile?.profileId) setIsFail(true)\r\n        else setIsFail(false)\r\n    }\r\n\r\n    const onClearValue = () => {\r\n        const editedItem = structuredClone(item)\r\n        editedItem.relatedInfo.miniProfile = {}\r\n\r\n        setSaveEntityItem(editedItem)\r\n        setValue(null)\r\n        setIsClearable(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--related-profile-picker__container\">\r\n            <div className={\"picker\" + (isFail ? ' fail' : '')} title=\"בחירת פרופיל\">\r\n                <span className=\"title\">בחירת פרופיל</span>\r\n\r\n                <div className=\"select-wrapper\">\r\n                    <AsyncSelect\r\n                        loadOptions={debouncedLoadOptions}\r\n                        className=\"react-select-cmp-container\"\r\n                        styles={customStyles}\r\n                        placeholder=\"הקלד שם\"\r\n                        noOptionsMessage={({ inputValue }) => inputValue.length\r\n                            ? `לא נמצא פרופיל המכיל את \"${inputValue}\"`\r\n                            : 'יש להקליד ביטוי לחיפוש'}\r\n                        loadingMessage={({ inputValue }) => `מחפש פרופיל המכיל את \"${inputValue}\"`}\r\n                        formatOptionLabel={({ value }) => <RelatedProfileOptionPreview option={value} />}\r\n                        isRtl\r\n                        onChange={(value) => setProfile(value)}\r\n                        onBlur={onBlurInput}\r\n                        value={value}\r\n                        cacheOptions\r\n                    />\r\n\r\n                    {isClearable && <span className=\"clear-icon\" onClick={onClearValue}><FaTimes /></span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst customStyles = {\r\n    control: () => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        border: 0,\r\n        backgroundColor: 'transparent',\r\n        margin: 0,\r\n        padding: 0,\r\n        minWidth: '15rem',\r\n        minHeight: '0'\r\n    }),\r\n\r\n    indicatorSeparator: () => ({\r\n        display: 'none'\r\n    }),\r\n\r\n    option: (provided: any, { isFocused }: any) => ({\r\n        ...provided,\r\n        backgroundColor: isFocused ? '#195da6' : 'transparent',\r\n        color: isFocused ? '#fafafa' : '#222'\r\n    }),\r\n\r\n    noOptionsMessage: (provided: any) => ({\r\n        ...provided,\r\n        fontSize: '13px',\r\n        padding: '2px'\r\n    }),\r\n\r\n    loadingMessage: (provided: any) => ({\r\n        ...provided,\r\n        fontSize: '13px',\r\n        padding: '2px'\r\n    }),\r\n}\r\n\r\n\r\ntype Props = {\r\n    isRequire: boolean\r\n}\r\n\r\n\r\ntype ProfileOption = {\r\n    label: string\r\n    value: {\r\n        id: string\r\n        name: string\r\n        branchIds: string[]\r\n        profileImageUrl: string\r\n    }\r\n}","import { RelatedBranchPicker } from \"./related-branch-picker/related-branch-picker\"\r\nimport { RelatedProfilePicker } from \"./related-profile-picker/related-profile-picker\"\r\n\r\nexport const DynamicAssociatePickerList = ({ relateds }: Props) => {\r\n    const getPickerCmp = (related: Related) => {\r\n        const basicProps = { key: related.type, isRequire: related.isRequire }\r\n\r\n        switch (related.type) {\r\n            case 'profile':\r\n                return <RelatedProfilePicker {...basicProps} />\r\n\r\n            case 'branch':\r\n                return <RelatedBranchPicker {...basicProps} />\r\n\r\n            default: return null\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--associate-related-data__container\">\r\n            {relateds.map(getPickerCmp)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Related = {\r\n    type: string\r\n    isRequire: boolean\r\n}\r\n\r\n\r\ntype Props = {\r\n    relateds: Related[]\r\n}","import { useRef } from \"react\"\r\nimport { FileDrop } from \"react-file-drop\"\r\n\r\nimport { ICON_TYPE_MAP } from \"../../../../../constans/icon-type-map\"\r\n\r\nimport { Loader } from \"../../../../common/loader/loader\"\r\n\r\n\r\nexport const DropableSection = ({ isUploading, onFetchFiles }: Props) => {\r\n    const elInput = useRef<HTMLInputElement>(null)\r\n    const onTargetClick = () => elInput.current?.click()\r\n\r\n    const fetchFiles = (files: FileList) => {\r\n        if (!files) return\r\n        onFetchFiles(files)\r\n    }\r\n\r\n\r\n    const onFileInputChange = ({ target: { files } }: React.ChangeEvent<HTMLInputElement>) => {\r\n        files && fetchFiles(files)\r\n    }\r\n\r\n\r\n    const onDropFile = (files: FileList | null, ev: React.DragEvent<HTMLDivElement>) => {\r\n        ev.preventDefault()\r\n        files && fetchFiles(files)\r\n    }\r\n\r\n\r\n    if (isUploading) return <Loader text=\"מעלה קבצים, אנא המתן...\" />\r\n\r\n    const UploadIcon = ICON_TYPE_MAP.entitySaveDefault.imageUpload\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--image-uploader-dropable-section__container\">\r\n            <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                ref={elInput}\r\n                onChange={onFileInputChange}\r\n                multiple\r\n            />\r\n\r\n            <FileDrop\r\n                draggingOverFrameClassName=\"dragging-over\"\r\n                onTargetClick={onTargetClick}\r\n                onDrop={onDropFile}\r\n            >\r\n                <div className=\"dropable-place\">\r\n                    <span className=\"icon\"><UploadIcon size={50} /></span>\r\n                    <span className=\"text\">גרור קבצים או לחץ כאן</span>\r\n                </div>\r\n            </FileDrop>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    isUploading: boolean\r\n    onFetchFiles: (fileList: FileList) => void\r\n}","import { useEffect } from \"react\"\r\nimport { useIsFirstRender } from \"../../../../../hooks/use-is-first-render\"\r\n\r\n// import { cloudinaryService } from \"../../../../../services/cloudinary-service\"\r\nimport { emptyEntityItemService } from \"../../../../../services/entities/empty-entity-item-service\"\r\n// import { entityItemService } from \"../../../../../services/entities/entity-item-service\"\r\n\r\nimport { makeId } from \"../../../../../services/util/make-id\"\r\n\r\nimport { ImageItem } from \"../../../../../models/types/entities/item/image-item\"\r\n\r\nimport { Loader } from \"../../../../common/loader/loader\"\r\n\r\n\r\nexport const ImageOnUploadPreview = ({ file, entityName, onUploadSuccess, onUploadFail }: Props) => {\r\n    let isFirstRender = useIsFirstRender()\r\n\r\n    useEffect(() => {\r\n        if (!isFirstRender) return\r\n\r\n        const fetchFile = async () => {\r\n            try {\r\n                setTimeout(async () => {\r\n                    const image = await emptyEntityItemService.get('image')\r\n                    image.id = makeId()\r\n                    image.entityInfo.imageUrl = 'https://res.cloudinary.com/dyxf7nmbe/image/upload/v1666553252/signature/qc8yemagsqd7ojlnxym4.jpg'\r\n                    image.entityInfo.name.display = 'ירון עוז סופרגול'\r\n                    onUploadSuccess(image, file)\r\n                }, 40)\r\n                // }, 4000)\r\n                // throw new Error('שגיאה בהעלאת תמונה')\r\n\r\n                // const { secure_url: url, original_filename: name } = await cloudinaryService.fetchRequest(file, entityName)\r\n                // if (!url || !name) throw new Error('שגיאה בהעלאת תמונה')\r\n\r\n                // const image = emptyEntityItemService.get('image')\r\n                // image.entityInfo.imageUrl = url\r\n                // image.entityInfo.name.display = name\r\n\r\n                // const uploadedImage = await entityItemService.save('image', image)\r\n\r\n                // onUploadSuccess(uploadedImage, file)\r\n            } catch (err) {\r\n                onUploadFail(file)\r\n            }\r\n        }\r\n\r\n        fetchFile()\r\n    }, [entityName, file, isFirstRender, onUploadSuccess, onUploadFail])\r\n\r\n\r\n    return (\r\n        <Loader text={`מעלה את הקובץ ${file.name}, אנא המתן...`} />\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    file: File\r\n    entityName: string\r\n    onUploadSuccess: (image: ImageItem, file: File) => void\r\n    onUploadFail: (file: File) => void\r\n}","import { useRef } from 'react'\r\n\r\n\r\nexport const useIsFirstRender = () => {\r\n    const isFirstRender = useRef(true)\r\n\r\n    if (isFirstRender.current) {\r\n        isFirstRender.current = false\r\n        return true\r\n    }\r\n\r\n    return isFirstRender.current\r\n}","import { AiOutlineDelete } from \"react-icons/ai\"\r\n\r\n\r\nexport const UploadedImagePreview = ({ image, onRemoveImage }: Props) => {\r\n    const { imageUrl, name, id } = image\r\n\r\n    const backgroundImageStyle = { backgroundImage: `url(${imageUrl})` }\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--uploaded-image-preview__container\" style={backgroundImageStyle} title={name}>\r\n            <div className=\"remove\" title=\"הסר תמונה\" onClick={() => onRemoveImage(id)}><AiOutlineDelete /></div>\r\n            <div className=\"name\">{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    image: {\r\n        id: string\r\n        name: string\r\n        imageUrl: string\r\n    }\r\n    onRemoveImage: (id: string) => void\r\n}","import { useState, useEffect } from \"react\"\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../store/action/save-entity-item-action\"\r\n\r\nimport { EntityItem } from \"../../../../../models/types/entities/item/entity-item\"\r\nimport { ImageItem } from \"../../../../../models/types/entities/item/image-item\"\r\n\r\nimport { makeId } from \"../../../../../services/util/make-id\"\r\n\r\nimport { DropableSection } from \"./dropable-section\"\r\nimport { ImageOnUploadPreview } from \"./image-on-upload-preview\"\r\nimport { UploadedImagePreview } from \"./uploaded-image-preview\"\r\nimport { MainTitle } from \"../../../../common/main-title/main-title\"\r\nimport { ErrorMessage } from \"../../../../common/error-message/error-message\"\r\n\r\n\r\n\r\nexport const ImageUpload = ({ entityName, minImageCount, maxImageCount }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [imagesOnUpload, setImagesOnUpload] = useState<File[]>()\r\n    const [failsUpload, setFailsUpload] = useState<string[]>()\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isUploading) return\r\n        !imagesOnUpload?.length && setIsUploading(false)\r\n    }, [isUploading, imagesOnUpload])\r\n\r\n\r\n    const onFetchFiles = (fileList: FileList) => {\r\n        setIsUploading(true)\r\n        const files = Array.from(fileList)\r\n        setImagesOnUpload(files)\r\n    }\r\n\r\n\r\n    const onUploadSuccess = (image: ImageItem, file: File) => {\r\n        const editedItem = structuredClone(item)\r\n        let { miniImages } = editedItem\r\n        if (!miniImages) miniImages = []\r\n        miniImages.push({\r\n            id: image._id,\r\n            name: image.entityInfo.name.display,\r\n            imageUrl: image.entityInfo.imageUrl\r\n        })\r\n        setSaveEntityItem(editedItem)\r\n\r\n        const filteredImagesOnUpload = imagesOnUpload?.filter(fileItem => fileItem !== file)\r\n        setImagesOnUpload(filteredImagesOnUpload)\r\n    }\r\n\r\n\r\n    const onUploadFail = (file: File) => {\r\n        const newFailsUpload = failsUpload?.slice()\r\n        if (!newFailsUpload?.length) return\r\n        newFailsUpload.push(file.name)\r\n        setFailsUpload(newFailsUpload)\r\n\r\n        const filteredImagesOnUpload = imagesOnUpload?.filter(fileItem => fileItem !== file)\r\n        setImagesOnUpload(filteredImagesOnUpload)\r\n    }\r\n\r\n\r\n    const onRemoveImage = (id: string) => {\r\n        if (!Array.isArray(item.miniImages)) return\r\n\r\n        const editedItem: EntityItem = structuredClone(item)\r\n        if (!editedItem.miniImages) return\r\n        editedItem.miniImages = editedItem.miniImages.filter(image => image.id !== id)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    const getFailMsg = () => {\r\n        minImageCount = minImageCount || 0\r\n        let msg = ''\r\n\r\n        if (minImageCount > (item.miniImages?.length || 0)) {\r\n            msg = 'יש להזין '\r\n            if (minImageCount === 1) msg += 'לפחות תמונה אחת'\r\n            else msg += `לפחות ${(minImageCount === 2) ? 'שתי' : minImageCount} תמונות`\r\n        }\r\n\r\n        if ((item.miniImages?.length || 0) > (maxImageCount || Infinity)) {\r\n            msg = 'יש להזין עד '\r\n            if (maxImageCount === 1) msg += 'תמונה אחת'\r\n            else msg += `${(minImageCount === 2) ? 'שתי' : minImageCount} תמונות`\r\n        }\r\n\r\n        return msg\r\n    }\r\n\r\n\r\n\r\n    const shouldRenderFilesList = !!item?.miniImages?.length || !!imagesOnUpload?.length || !!failsUpload?.length\r\n    const shouldRenderFailMsg = !!getFailMsg()\r\n\r\n    const imagesOnUploadPreviewProps = { entityName, onUploadSuccess, onUploadFail }\r\n    const dropableSectionProps = { isUploading, onFetchFiles }\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--image-upload__container\">\r\n            <div className=\"file-picker\"><DropableSection {...dropableSectionProps} /></div>\r\n\r\n            {shouldRenderFilesList && <div className=\"uploaded-files\">\r\n                <MainTitle text=\"קבצים שעלו\" Icon={AiOutlineCloudUpload} />\r\n                <div\r\n                    className={\"files-list-container\"\r\n                        + (((item.miniImages?.length || 0) + (imagesOnUpload?.length || 0) < 4) ? ' short-list' : '')\r\n                    }\r\n                >\r\n                    {imagesOnUpload?.map(file => <ImageOnUploadPreview\r\n                        key={file.name}\r\n                        file={file}\r\n                        {...imagesOnUploadPreviewProps}\r\n                    />)}\r\n                    {(item.miniImages as MiniImages).map(image => <UploadedImagePreview\r\n                        key={image.id}\r\n                        image={image}\r\n                        onRemoveImage={onRemoveImage}\r\n                    />)}\r\n                    {failsUpload?.map(failUpload => <ErrorMessage\r\n                        key={makeId(5)}\r\n                        message={`העלאת הקובץ ${failUpload} נכשלה. אנא נסה שנית`}\r\n                    />)}\r\n                </div>\r\n            </div>}\r\n\r\n            {shouldRenderFailMsg && <div className=\"msg\">{getFailMsg()}.</div>}\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    entityName: string\r\n    minImageCount?: number\r\n    maxImageCount?: number\r\n}\r\n\r\n\r\ntype MiniImages = {\r\n    id: string\r\n    name: string\r\n    imageUrl: string\r\n}[]","import { useState, useEffect } from \"react\"\r\nimport { FaTimes } from \"react-icons/fa\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../store/action/save-entity-item-action\"\r\n\r\n\r\nexport const PageDetails = () => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const [value, setValue] = useState<string>(item.entityInfo.name.display)\r\n\r\n\r\n    useEffect(() => {\r\n        const editedItem = structuredClone(item)\r\n        editedItem.entityInfo.name.display = value\r\n\r\n        setSaveEntityItem(editedItem)\r\n    }, [value]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--page-details__container\">\r\n            <div className=\"option\">\r\n                <span className=\"name\">שם העמוד</span>\r\n\r\n                <span className=\"input-wrapper\">\r\n                    <input type=\"text\" value={value} placeholder=\"שם העמוד\" onChange={ev => setValue(ev.currentTarget.value)} />\r\n                    {value && <span className=\"clear-icon\" title=\"נקה\" onClick={() => setValue('')}>\r\n                        <FaTimes size={12} />\r\n                    </span>}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const recursiveValueSetterByKey = <T>(value: T, obj: { [key: string]: any }, key: string) => {\r\n    const keyPath = key.split('.')\r\n    if (keyPath.length === 1) {\r\n        obj[keyPath[0]] = value\r\n        return\r\n    }\r\n\r\n    if (!obj[keyPath[0]]) return\r\n\r\n    const actualObj = obj[keyPath[0]]\r\n    keyPath.shift()\r\n\r\n    recursiveValueSetterByKey(value, actualObj, keyPath.join('.'))\r\n}","import { useSelector } from \"react-redux\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\nimport { recursiveValueSetterByKey } from \"../../../../../../services/util/recursive-value-setter-by-key\"\r\n\r\n\r\nconst OPTIONS = [{ title: 'כן', value: true }, { title: 'לא', value: false }, { title: 'לא ידוע', value: undefined }]\r\n\r\n\r\nexport const BinaryPicker = ({ pickerInfo }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const onPickOption = (value: boolean | undefined) => {\r\n        const editedItem = structuredClone(item)\r\n        recursiveValueSetterByKey(value, editedItem, pickerInfo.key)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    const isActiveOption = (value: boolean | undefined, pickerInfo: PickerInfo) => {\r\n        const actualValue = getValueByDynamicKey(pickerInfo.key, item)\r\n\r\n        if (actualValue === 'undefined' && typeof value === 'undefined') return true\r\n        if (actualValue === value) return true\r\n        return false\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-binary-picker__container\">\r\n            <span className=\"title\">{pickerInfo.title}</span>\r\n            <span className=\"options\">\r\n                {OPTIONS.map(({ value, title }) => <span\r\n                    key={title}\r\n                    className={\"option\" + ((isActiveOption(value, pickerInfo)) ? ' active' : '')}\r\n                    onClick={() => onPickOption(value)}\r\n                >\r\n                    {title}\r\n                </span>\r\n                )}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\ntype Props = {\r\n    pickerInfo: PickerInfo\r\n}\r\n\r\n\r\ntype PickerInfo = {\r\n    type: string\r\n    title: string\r\n    key: string\r\n    isRequire: boolean\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\n\r\nimport { recursiveValueSetterByKey } from \"../../../../../../services/util/recursive-value-setter-by-key\"\r\n\r\nimport { NON_ZERO_DAYS } from \"../../../../../../constans/days\"\r\nimport { NON_ZERO_MONTHS } from \"../../../../../../constans/months\"\r\nimport { YEARS } from \"../../../../../../constans/years\"\r\n\r\n\r\nexport const DatePicker = ({ pickerInfo }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const { key, title } = pickerInfo\r\n    const { entityInfo } = item\r\n\r\n    const defaultDay = key.endsWith('start') ? entityInfo.item?.dateOfActivity?.start?.day : entityInfo.item?.dateOfActivity?.end?.day\r\n    const defaultMonth = key.endsWith('start') ? entityInfo.item?.dateOfActivity?.start?.month : entityInfo.item?.dateOfActivity?.end?.month\r\n    const defaultYear = key.endsWith('start') ? entityInfo.item?.dateOfActivity?.start?.year : entityInfo.item?.dateOfActivity?.end?.year\r\n\r\n\r\n    const onPickOption = (value: string, extendKey: string) => {\r\n        let formattedValue: number | undefined\r\n\r\n        switch (value) {\r\n            case 'יום':\r\n            case 'חודש':\r\n            case 'שנה':\r\n                formattedValue = undefined\r\n                break\r\n\r\n            default:\r\n                formattedValue = +value\r\n        }\r\n\r\n        const editedItem = structuredClone(item)\r\n        recursiveValueSetterByKey(formattedValue, editedItem, key + '.' + extendKey)\r\n\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-date-picker__container\">\r\n            <span className=\"title\">{title}</span>\r\n            <span className=\"picker\">\r\n                <select defaultValue={defaultDay} onChange={({ currentTarget: { value } }) => { onPickOption(value, 'day') }}>\r\n                    {NON_ZERO_DAYS.map(day => <option\r\n                        key={day ? day : 'unknown'}\r\n                        value={day ? day : undefined}\r\n                    >\r\n                        {day ? day : 'יום'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n\r\n                <select defaultValue={defaultMonth} onChange={({ currentTarget: { value } }) => { onPickOption(value, 'month') }}>\r\n                    {NON_ZERO_MONTHS.map((month, idx) => <option\r\n                        key={month ? month : 'unknown'}\r\n                        value={idx ? idx : undefined}\r\n                    >\r\n                        {month ? month : 'חודש'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n\r\n                <select defaultValue={defaultYear} onChange={({ currentTarget: { value } }) => { onPickOption(value, 'year') }}>\r\n                    {YEARS.map(year => <option\r\n                        key={year ? year : 'unknown'}\r\n                        value={year ? year : undefined}\r\n                    >\r\n                        {year ? year : 'שנה'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    pickerInfo: PickerInfo\r\n}\r\n\r\n\r\ntype PickerInfo = {\r\n    type: string\r\n    title: string\r\n    key: string\r\n    isRequire: boolean\r\n}","import { ICON_TYPE_MAP } from \"../../../../../../../constans/icon-type-map\"\r\n\r\n\r\nexport const DurationAdd = ({ onClick }: Props) => {\r\n    const PlusIcon = ICON_TYPE_MAP.entityItemPreview.plus\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-duration-add__container\" onClick={onClick}>\r\n            <span className=\"icon-wrapper\"><PlusIcon /></span>\r\n            <span className=\"text\">הוסף תקופה</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    onClick: () => void\r\n}","import { NON_ZERO_DAYS } from \"../../../../../../../constans/days\"\r\nimport { NON_ZERO_MONTHS } from \"../../../../../../../constans/months\"\r\nimport { YEARS } from \"../../../../../../../constans/years\"\r\n\r\nimport { UncompleteDate } from \"../../../../../../../models/interfaces/common/uncomplete-date\"\r\n\r\n\r\nexport const DatePicker = ({ idx, isDurationStartDate, date, onPickOption }: Props) => {\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-date-picker__container\">\r\n            <span className=\"picker\">\r\n                <select defaultValue={date?.day} onChange={({ currentTarget: { value } }) => { onPickOption(value, idx, isDurationStartDate, 'day') }}>\r\n                    {NON_ZERO_DAYS.map(day => <option\r\n                        key={day ? day : 'unknown'}\r\n                        value={day ? day : undefined}\r\n                    >\r\n                        {day ? day : 'יום'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n\r\n                <select defaultValue={date?.month} onChange={({ currentTarget: { value } }) => { onPickOption(value, idx, isDurationStartDate, 'month') }}>\r\n                    {NON_ZERO_MONTHS.map((month, idx) => <option\r\n                        key={month ? month : 'unknown'}\r\n                        value={idx ? idx : undefined}\r\n                    >\r\n                        {month ? month : 'חודש'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n\r\n                <select defaultValue={date?.year} onChange={({ currentTarget: { value } }) => { onPickOption(value, idx, isDurationStartDate, 'year') }}>\r\n                    {YEARS.map(year => <option\r\n                        key={year ? year : 'unknown'}\r\n                        value={year ? year : undefined}\r\n                    >\r\n                        {year ? year : 'שנה'}\r\n                    </option>\r\n                    )}\r\n                </select>\r\n            </span>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    idx: number\r\n    isDurationStartDate: boolean\r\n    date: UncompleteDate | undefined\r\n    onPickOption: (value: string, idx: number, isDurationStartDate: boolean, extendKey: string) => void\r\n}","import { FaTimes } from \"react-icons/fa\"\r\nimport { Duration } from \"../../../../../../../models/interfaces/common/duration\"\r\nimport { DatePicker } from \"./date-picker\"\r\n\r\n\r\nexport const DurationPickerPreview = ({ idx, duration, onPickDuration, onRemoveDuration }: Props) => {\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-duration-picker-preview__container\">\r\n            <div className=\"duration-picker\">\r\n                <div>\r\n                    <span className=\"indicator\">החל מ</span>\r\n                    <DatePicker isDurationStartDate idx={idx} date={duration.start} onPickOption={onPickDuration} />\r\n                </div>\r\n\r\n                <div>\r\n                    <span className=\"indicator\">עד ל</span>\r\n                    <DatePicker isDurationStartDate={false} idx={idx} date={duration.end} onPickOption={onPickDuration} />\r\n                </div>\r\n            </div>\r\n\r\n            <span className=\"remove-icon\" title=\"הסר תקופת פעילות\" onClick={() => onRemoveDuration(idx)}><FaTimes /></span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    idx: number\r\n    duration: Duration\r\n    onPickDuration: (value: string, idx: number, isDurationStartDate: boolean, extendKey: string) => void\r\n    onRemoveDuration: (idx: number) => void\r\n}","import { useState } from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../../../../../../store/store'\r\nimport { setSaveEntityItem } from '../../../../../../../store/action/save-entity-item-action'\r\n\r\nimport { recursiveValueSetterByKey } from '../../../../../../../services/util/recursive-value-setter-by-key'\r\n\r\nimport { Duration } from '../../../../../../../models/interfaces/common/duration'\r\n\r\nimport { DurationAdd } from './duration-add'\r\nimport { DurationPickerPreview } from './duration-picker-preview'\r\n\r\n\r\nconst DURATION_MOCK = {\r\n    start: {\r\n        day: undefined,\r\n        month: undefined,\r\n        year: undefined\r\n    },\r\n    end: {\r\n        day: undefined,\r\n        month: undefined,\r\n        year: undefined\r\n    },\r\n}\r\n\r\nexport const DurationsPickerList = ({ pickerInfo }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n    const [durations, setDurations] = useState<Duration[]>(item.entityInfo.item.activityDurations || [])\r\n\r\n\r\n    const onAddDuration = () => {\r\n        const newDuration = structuredClone(DURATION_MOCK)\r\n        setDurations(prevDurations => [...prevDurations, newDuration])\r\n    }\r\n\r\n\r\n    const onPickDuration = (value: string, idx: number, isDurationStartDate: boolean, type: string) => {\r\n        const key = (isDurationStartDate ? 'start.' : 'end.') + type\r\n        const durationsCopy = structuredClone(durations)\r\n        const duration = durationsCopy[idx]\r\n\r\n        let formattedValue: number | undefined\r\n\r\n        switch (value) {\r\n            case 'יום':\r\n            case 'חודש':\r\n            case 'שנה':\r\n                formattedValue = undefined\r\n                break\r\n\r\n            default:\r\n                formattedValue = +value\r\n        }\r\n\r\n        recursiveValueSetterByKey(formattedValue, duration, key)\r\n        const editedItem = structuredClone(item)\r\n        recursiveValueSetterByKey(durationsCopy, editedItem, pickerInfo.key)\r\n        setDurations(durationsCopy)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    const onRemoveDuration = (idx: number) => {\r\n        const newDurations = durations.filter((_, index) => index !== idx)\r\n        const editedItem = structuredClone(item)\r\n\r\n        recursiveValueSetterByKey(newDurations, editedItem, pickerInfo.key)\r\n        setDurations(newDurations)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-durations-picker-list__container\">\r\n            <span className=\"title\">{pickerInfo.title}</span>\r\n            <div>\r\n                {durations.map((duration, idx) => <DurationPickerPreview\r\n                    key={uuid()}\r\n                    idx={idx}\r\n                    duration={duration}\r\n                    onPickDuration={onPickDuration}\r\n                    onRemoveDuration={onRemoveDuration}\r\n                />\r\n                )}\r\n                <DurationAdd onClick={onAddDuration} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\ntype Props = {\r\n    pickerInfo: PickerInfo\r\n}\r\n\r\n\r\ntype PickerInfo = {\r\n    type: string\r\n    title: string\r\n    key: string\r\n    isRequire: boolean\r\n}","import {useEffect} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\n\r\nimport { recursiveValueSetterByKey } from \"../../../../../../services/util/recursive-value-setter-by-key\"\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\n\r\nexport const NumberPicker = ({ pickerInfo }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const { option, key: optionKey, title } = pickerInfo\r\n    const min = option?.min || 0\r\n    const max = option?.max || 1000000\r\n    const value = getValueByDynamicKey(optionKey, item)\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    const setValue = (value: number | undefined) => {\r\n        const editedItem = structuredClone(item)\r\n        recursiveValueSetterByKey(value, editedItem, optionKey)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n    const onPickValue = ({ currentTarget: { value } }: React.FormEvent<HTMLInputElement>) => {\r\n        let actualValue = +value\r\n        if (typeof actualValue !== 'number') return\r\n        if (actualValue > max) setValue(max)\r\n        else if (actualValue < min) setValue(min)\r\n        else setValue(actualValue)\r\n    }\r\n\r\n    const clearPick = () => setValue(undefined)\r\n\r\n\r\n    const inputProps = { min, max }\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-number-picker__container\">\r\n            <span className=\"title\">{title}</span>\r\n\r\n            <span className=\"picker\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder={`בין ${min} ל-${max}`}\r\n                    {...inputProps}\r\n                    value={typeof value === 'undefined' ? '' : value}\r\n                    onChange={onPickValue}\r\n                />\r\n            </span>\r\n\r\n            <span\r\n                className={'unknown-number' + ((typeof value === 'undefined') ? ' active' : '')}\r\n                onClick={clearPick}\r\n            >\r\n                לא ידוע\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    pickerInfo: {\r\n        type: string\r\n        title: string\r\n        key: string\r\n        isRequire: boolean\r\n\r\n        option?: {\r\n            min?: number\r\n            max?: number\r\n        }\r\n    }\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\nimport { setSaveEntityItem } from \"../../../../../../store/action/save-entity-item-action\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\nimport { recursiveValueSetterByKey } from \"../../../../../../services/util/recursive-value-setter-by-key\"\r\n\r\n\r\nexport const SymbolSeperateList = ({ pickerInfo }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const { key, title, option } = pickerInfo\r\n\r\n    const delimiter = option?.delimiter\r\n    const actualValue = getValueByDynamicKey(key, item)\r\n    let valueAsStr = getValueByDynamicKey(key, item) || []\r\n    valueAsStr = valueAsStr.join(delimiter)\r\n    valueAsStr = valueAsStr.replace(delimiter, delimiter + ' ')\r\n\r\n    const setValue = (value: string[] | undefined) => {\r\n        const editedItem = structuredClone(item)\r\n        recursiveValueSetterByKey(value, editedItem, key)\r\n        setSaveEntityItem(editedItem)\r\n    }\r\n\r\n\r\n    const onPickValue = ({ currentTarget: { value } }: React.FormEvent<HTMLInputElement>) => {\r\n        const actualValue = value.split(delimiter || '')\r\n        setValue(actualValue)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler-sybol-seperate-list__container\">\r\n            <span className=\"title\">{title}</span>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder={`הזן ${title} (הפרדה עם ${delimiter})`}\r\n                value={valueAsStr || ''}\r\n                onChange={onPickValue}\r\n            />\r\n\r\n            <span\r\n                className={\"unknown-list\" + ((typeof actualValue === 'undefined') ? ' active' : '')}\r\n                onClick={() => setValue(undefined)}\r\n            >\r\n                לא ידוע\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    pickerInfo: {\r\n        type: string\r\n        title: string\r\n        key: string\r\n        isRequire: boolean\r\n\r\n        option?: {\r\n            delimiter?: string\r\n        }\r\n    }\r\n}","import { BinaryPicker } from \"./pickers/binary-picker\"\r\nimport { DatePicker } from \"./pickers/date-picker\"\r\nimport { DurationsPickerList } from \"./pickers/durations-picker/durations-picker-list\"\r\nimport { NumberPicker } from \"./pickers/number-picker\"\r\nimport { SymbolSeperateList } from \"./pickers/symbol-seperate-list\"\r\n\r\nexport const ProfileFiller = ({ infos }: Props) => {\r\n    const getPickerCmp = (info: Info) => {\r\n        const basicProps = { key: info.key, pickerInfo: info }\r\n\r\n        switch (info.type) {\r\n            case 'number-picker':\r\n                return <NumberPicker {...basicProps} />\r\n\r\n            case 'binary-picker':\r\n                return <BinaryPicker {...basicProps} />\r\n\r\n            case 'date-picker':\r\n                return <DatePicker {...basicProps} />\r\n\r\n            case 'symobl-seperate-list':\r\n                return <SymbolSeperateList {...basicProps} />\r\n\r\n            case 'durations-picker':\r\n                return <DurationsPickerList {...basicProps} />\r\n\r\n            default: return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--profile-filler__container\">\r\n            {infos.map(getPickerCmp)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Info = {\r\n    type: string\r\n    title: string\r\n    key: string\r\n    isRequire: boolean\r\n\r\n    option?: {\r\n        delimiter?: string\r\n        min?: number\r\n        max?: number\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    infos: Info[]\r\n}","import { EntitySaveItemStage } from \"../../../../types/entity/save/entity-save-item-stage\"\r\n\r\nimport { DynamicAssociatePickerList } from \"./associate-related-data/dynamic-associate-picker-list\"\r\nimport { ImageUpload } from \"./image-upload/image-upload\"\r\nimport { PageDetails } from \"./page-details/page-details\"\r\nimport { ProfileFiller } from \"./profile-filler/profile-filler\"\r\n\r\n\r\nexport const DynamicEntitySaveStage = ({ stage, entityName }: Props) => {\r\n    switch (stage.type) {\r\n        case 'page-details':\r\n            return <PageDetails />\r\n\r\n        case 'profile-filler':\r\n            return <ProfileFiller\r\n                infos={stage.option?.infos || []}\r\n            />\r\n\r\n        case 'image-upload':\r\n            return <ImageUpload\r\n                entityName={entityName}\r\n                minImageCount={stage.option?.minImageCount}\r\n                maxImageCount={stage.option?.maxImageCount}\r\n            />\r\n\r\n        case 'associate-related-data':\r\n            return <DynamicAssociatePickerList\r\n                relateds={stage.option?.relateds || []}\r\n            />\r\n\r\n        default: return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    stage: EntitySaveItemStage\r\n    entityName: string\r\n}","import { EntitySaveItemStage } from \"../../../../types/entity/save/entity-save-item-stage\"\r\n\r\n\r\nexport const TabletWidePlusStageStepper = ({ stages, stagesStatus, currStageIdx, changeCurrStageIdx }: Props) => {\r\n    const onChangeCurrStageIdx = (idx: number) => {\r\n        if ((idx === currStageIdx) || (!stagesStatus[idx] && currStageIdx < idx)) return\r\n        changeCurrStageIdx(idx)\r\n    }\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--tablet-wide-plus-stage-stepper__container\">\r\n            {stages.map(({ title }, idx) => <div\r\n                key={title}\r\n                title={idx <= currStageIdx\r\n                    ? currStageIdx === idx\r\n                        ? stages[idx].title\r\n                        : `חזור אל ${stages[idx].title}`\r\n                    : `השלם את השלבים הנדרשים כדי לעבור לשלב ${stages[idx].title}`}\r\n                className={\"stage-container\"\r\n                    + ((title === stages[currStageIdx].title) ? ' active' : '')\r\n                    + ((!stagesStatus[idx] && (idx < currStageIdx)) ? ' fail' : '')\r\n                    + (((currStageIdx > idx) && stagesStatus[idx]) ? ' complete' : '')\r\n                    + ((stagesStatus[idx] && (idx > currStageIdx) ? ' completed' : ''))\r\n                }\r\n                onClick={() => onChangeCurrStageIdx(idx)}\r\n            >\r\n                {title}\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    stages: EntitySaveItemStage[]\r\n    stagesStatus: boolean[]\r\n    currStageIdx: number\r\n    changeCurrStageIdx: (idx: number) => void\r\n}","import { EntitySaveItemStage } from \"../../../../types/entity/save/entity-save-item-stage\"\r\n\r\nimport { Dropdown } from \"../../../common/dropdown/dropdown\"\r\n\r\n\r\nexport const UpToTabletWideStageStepper = ({ stages, stagesStatus, currStageIdx, changeCurrStageIdx, saveItem }: Props) => {\r\n    const getIsSaveable = () => {\r\n        const saveableIdx = stagesStatus.findIndex(status => status === false)\r\n        return (saveableIdx === -1) ? true : false\r\n    }\r\n\r\n\r\n    const onChangeCurrStageIdx = (idx: number) => {\r\n        if ((idx === currStageIdx) || (!stagesStatus[idx] && currStageIdx < idx)) return\r\n        changeCurrStageIdx(idx)\r\n    }\r\n\r\n    const prevStageIdx = currStageIdx - 1\r\n    const nextStageIdx = currStageIdx + 1\r\n\r\n\r\n    return (\r\n        <div className=\"entity-save-cmp--up-to-tablet-wide-stage-stepper__container\">\r\n            {!!currStageIdx && <button\r\n                title={`שלב קודם (${stages[prevStageIdx].title})`}\r\n                className={\"prev\" + (stagesStatus[prevStageIdx] ? '' : 'fail')}\r\n                onClick={() => changeCurrStageIdx(prevStageIdx)}\r\n            >\r\n                שלב קודם\r\n            </button>}\r\n\r\n            <Dropdown\r\n                controllerText={`${nextStageIdx}/${stages.length}`}\r\n                title=\"ניווט בשלבי הוספה\"\r\n            >\r\n                <div className=\"dropdown-children-container\">\r\n                    {stages.map(({ title }, idx) => <div\r\n                        key={title}\r\n                        className={\"stage-preview\"\r\n                            + (currStageIdx === idx ? ' active' : '')\r\n                            + (stagesStatus[idx] ? ' available' : '')\r\n                            + ((stagesStatus[idx] && (idx > currStageIdx) ? ' completed' : ''))\r\n                            + ((!stagesStatus[idx] && (idx < currStageIdx)) ? ' fail' : '')\r\n                        }\r\n                        title={\r\n                            (idx === currStageIdx)\r\n                                ? stages[idx].title\r\n                                : ((idx > currStageIdx) && !stagesStatus[idx])\r\n                                    ? `השלם את השלבים הנדרשים כדי לעבור לשלב ${stages[idx].title}`\r\n                                    : `חזור אל ${stages[idx].title}`\r\n                        }\r\n                        onClick={() => onChangeCurrStageIdx(idx)}\r\n                    > {title}</div>)}\r\n                </div>\r\n            </Dropdown >\r\n\r\n            {\r\n                stagesStatus[nextStageIdx] && (nextStageIdx !== stagesStatus.length) && <button\r\n                    className=\"next\"\r\n                    title={`המשך לשלב הבא (${stages[nextStageIdx].title})`}\r\n                    onClick={() => changeCurrStageIdx(nextStageIdx)}\r\n                >\r\n                    {(nextStageIdx === stages.length) ? 'שמור' : 'שלב הבא'}\r\n                </button>\r\n            }\r\n\r\n            <span className=\"stage-title\" > {stages[currStageIdx].title}</span>\r\n\r\n            {getIsSaveable() &&\r\n                <button className=\"save\" title=\"שמור\" onClick={saveItem}>שמור</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    stages: EntitySaveItemStage[]\r\n    stagesStatus: boolean[]\r\n    currStageIdx: number\r\n    changeCurrStageIdx: (idx: number) => void\r\n    saveItem: () => Promise<void>\r\n}","\r\nimport { EntitySaveItemStage } from \"../../../../types/entity/save/entity-save-item-stage\"\r\n\r\nimport { RenderByDeviceWidth } from \"../../../common/render-by/render-by-device-width\"\r\nimport { TabletWidePlusStageStepper } from \"./tablet-wide-plus-stage-stepper\"\r\nimport { UpToTabletWideStageStepper } from \"./up-to-tablet-wide-stage-stepper\"\r\n\r\n\r\nexport const StageStepper = ({ stages, stagesStatus, currStageIdx, changeCurrStageIdx, saveItem }: Props) => {\r\n    const basicProps = { stages, stagesStatus, currStageIdx, changeCurrStageIdx }\r\n\r\n    return (\r\n        <section className=\"entity-save-cmp--stage-stepper__container\">\r\n            <RenderByDeviceWidth maxDeviceWide=\"tablet\">\r\n                <UpToTabletWideStageStepper\r\n                    {...basicProps}\r\n                    saveItem={saveItem}\r\n                />\r\n            </RenderByDeviceWidth>\r\n\r\n            <RenderByDeviceWidth minDeviceWide=\"tablet\">\r\n                <TabletWidePlusStageStepper {...basicProps} />\r\n            </RenderByDeviceWidth>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    stages: EntitySaveItemStage[]\r\n    stagesStatus: boolean[]\r\n    currStageIdx: number\r\n    changeCurrStageIdx: (idx: number) => void\r\n    saveItem: () => Promise<void>\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store/store\"\r\nimport { setSaveEntityItem } from \"../../store/action/save-entity-item-action\"\r\nimport { insertAppMessage } from \"../../store/action/app-state-action\"\r\n\r\nimport { emptyEntityItemService } from \"../../services/entities/empty-entity-item-service\"\r\nimport { entityItemService } from \"../../services/entities/entity-item-service\"\r\nimport { getValueByDynamicKey } from \"../../services/util/get-value-by-dynamic-key\"\r\n\r\nimport { ENTITIES_LIST } from \"../../constans/entities-list\"\r\n\r\nimport { EntitySaveItemStage } from \"../../types/entity/save/entity-save-item-stage\"\r\nimport { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\n\r\nimport { ErrorMessage } from \"../../components/common/error-message/error-message\"\r\nimport { Loader } from \"../../components/common/loader/loader\"\r\nimport { DynamicEntitySaveStage } from \"../../components/entities/save/dynamic-entity-save-stage/dynamic-entity-save-stage\"\r\nimport { MainTitle } from \"../../components/common/main-title/main-title\"\r\nimport { StageStepper } from \"../../components/entities/save/stage-stepper/stage-stepper\"\r\nimport { SeoImplement } from \"../../components/common/seo-implement/seo-implement\"\r\nimport { Duration } from \"../../models/interfaces/common/duration\"\r\n\r\n\r\nconst getInitStagesStatus = (stages: EntitySaveItemStage[]) => new Array(stages.length).fill(false)\r\n\r\n\r\nconst EntitySaveWrapper = () => {\r\n    let { pathname } = useLocation()\r\n    pathname = pathname.split('/')[1]\r\n    const entity = ENTITIES_LIST[pathname]\r\n\r\n    return (\r\n        <EntitySave entity={entity} />\r\n    )\r\n}\r\n\r\nconst EntitySave = ({ entity }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.saveEntityItemModule)\r\n\r\n    const [currStageIdx, setCurrStageIdx] = useState(0)\r\n    const [stagesStatus, setStagesStatus] = useState<boolean[]>(getInitStagesStatus(entity?.saveItemPage.stages || []))\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n\r\n\r\n    useEffect(() => {\r\n        if ((id && !isLoading) || !entity) return\r\n\r\n        if (!id) {\r\n            const emptyItem = emptyEntityItemService.get(entity.name)\r\n            setSaveEntityItem(emptyItem)\r\n            setIsLoading(false)\r\n            return\r\n        }\r\n\r\n        const loadItem = async () => {\r\n            try {\r\n                const item = await entityItemService.getById(entity.name, id, true) as EntityItem\r\n                setSaveEntityItem(item)\r\n            } catch (_err) { console.log(_err) }\r\n            finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        loadItem()\r\n    }, [entity, id, isLoading])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!entity) return\r\n\r\n        const stagesStatus = entity.saveItemPage.stages.map(({ isRequire, type, option }) => {\r\n            if (!isRequire) return true\r\n            const { relatedInfo } = item\r\n            let isFilled = true\r\n            let isNoneRequire = true\r\n            let value\r\n\r\n            switch (type) {\r\n                case 'page-details':\r\n                    if (!item.entityInfo.name.display) isFilled = false\r\n                    break\r\n\r\n                case 'associate-related-data':\r\n                    isNoneRequire = !!option?.relateds?.every(related => !related.isRequire)\r\n                    option?.relateds?.forEach(related => {\r\n                        switch (related.type) {\r\n                            case 'profile':\r\n                                if (related.isRequire && !relatedInfo?.miniProfile?.profileId) isFilled = false\r\n                                break\r\n\r\n                            case 'branch':\r\n                                if (related.isRequire && !relatedInfo?.branchIds.length) isFilled = false\r\n                                break\r\n                        }\r\n\r\n                        if (isNoneRequire && !relatedInfo?.branchIds.length && !relatedInfo?.miniProfile?.profileId) isFilled = false\r\n                    })\r\n                    break\r\n\r\n                case 'image-upload':\r\n                    if ((item.miniImages?.length || 0) < (option?.minImageCount || 0)\r\n                        || (item.miniImages?.length || 0) > (option?.maxImageCount || Infinity)\r\n                    ) isFilled = false\r\n                    break\r\n\r\n                case 'profile-filler':\r\n                    isNoneRequire = !!option?.infos?.every(related => !related.isRequire)\r\n                    option?.infos?.forEach(info => {\r\n                        switch (info.type) {\r\n                            case 'symobl-seperate-list':\r\n                                if (!info.isRequire) break\r\n                                value = getValueByDynamicKey(info.key, item)\r\n                                if (!Array.isArray(value) || !value[0].length) isFilled = false\r\n                                break\r\n\r\n                            case 'number-picker':\r\n                                if (!info.isRequire) break\r\n                                value = getValueByDynamicKey(info.key, item)\r\n                                if (typeof value !== 'number') isFilled = false\r\n                                break\r\n\r\n                            case 'binary-picker':\r\n                                if (!info.isRequire) break\r\n                                value = getValueByDynamicKey(info.key, item)\r\n                                if (typeof value !== 'boolean') isFilled = false\r\n                                break\r\n\r\n                            case 'durations-picker':\r\n                                if (!info.isRequire) break\r\n                                value = getValueByDynamicKey(info.key, item) as Duration[]\r\n                                if (!value || !Array.isArray(value) || !value[0]) isFilled = false\r\n                                else if (!value[0].start?.day && !value[0].start?.month && !value[0].start?.year\r\n                                    && !value[0].end?.day && !value[0].end?.month && !value[0].end?.year) isFilled = false\r\n                                break\r\n                        }\r\n                    })\r\n                    break\r\n            }\r\n\r\n            return isFilled\r\n        })\r\n\r\n        setStagesStatus(stagesStatus)\r\n    }, [entity, item, currStageIdx]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const changeCurrStageIdx = (idx: number) => setCurrStageIdx(idx)\r\n\r\n\r\n    const getIsSaveable = () => {\r\n        const saveableIdx = stagesStatus.findIndex(status => status === false)\r\n        return (saveableIdx === -1)\r\n    }\r\n\r\n\r\n    const saveItem = async () => {\r\n        if (!getIsSaveable() || !entity) return\r\n        const editedItem = structuredClone(item) as EntityItem\r\n        const isEdited = !!editedItem._id\r\n        if (id) editedItem._id = id\r\n\r\n        const { display: displayName } = editedItem.entityInfo.name\r\n\r\n        try {\r\n            await entityItemService.save(entity.name, editedItem)\r\n            const text = `${isEdited ? 'עריכת' : 'הוספת'} הדף ${displayName} בוצעה בהצלחה`\r\n            const title = `${isEdited ? 'עריכה' : 'הוספה'} בוצעה בהצלחה`\r\n            insertAppMessage({ text, title, type: 'success' })\r\n        } catch (err) {\r\n            const text = `${isEdited ? 'עריכת' : 'הוספת'} הדף ${displayName} נכשלה`\r\n            const title = `${isEdited ? 'עריכה' : 'הוספה'} נכשלה`\r\n            insertAppMessage({ text, title, type: 'fail' })\r\n        } finally {\r\n            navigate(location.pathname.replace('/save', ''))\r\n        }\r\n    }\r\n\r\n\r\n    if (!entity) return <ErrorMessage message=\"התרחשה שגיאה בטעינת העמוד\" />\r\n    if (isLoading) return <Loader />\r\n\r\n    const { saveItemPage: { stages } } = entity\r\n\r\n    const stageStepperProps = { stages, stagesStatus, currStageIdx, changeCurrStageIdx, saveItem }\r\n    const { display: itemName } = item.entityInfo.name\r\n\r\n    return (\r\n        <>\r\n            <main className=\"entities-pages--entity-save__container\">\r\n                <StageStepper {...stageStepperProps} />\r\n\r\n                <MainTitle\r\n                    text={stages[currStageIdx].title}\r\n                    Icon={stages[currStageIdx].icon}\r\n                />\r\n\r\n                <DynamicEntitySaveStage\r\n                    stage={stages[currStageIdx]}\r\n                    entityName={entity.name}\r\n                />\r\n\r\n                <div className=\"save-stages-navigation\">\r\n                    <div className=\"stages\">\r\n                        {!!currStageIdx &&\r\n                            <button className=\"prev\" onClick={() => changeCurrStageIdx(currStageIdx - 1)}>שלב קודם</button>\r\n                        }\r\n\r\n                        {(stagesStatus[currStageIdx] && !(currStageIdx === stages.length - 1)) &&\r\n                            !(currStageIdx + 1 === stagesStatus.length) &&\r\n                            <button className=\"next\" onClick={() => changeCurrStageIdx(currStageIdx + 1)}>שלב הבא</button>\r\n                        }\r\n                    </div>\r\n\r\n                    {getIsSaveable() &&\r\n                        <div className=\"save\">\r\n                            <button title=\"שמור\" onClick={saveItem}>שמור</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </main>\r\n\r\n            <SeoImplement\r\n                appTitle={`${itemName} (${entity.entityInfo.name.display}) - שמירה`}\r\n                openGraphTitle=\"הוזמנת לערוך באתר מכביפדיה\"\r\n                openGraphDescription={`ערוך את הדף של ${itemName}`}\r\n                openGraphImage={item?.miniImages[0]?.imageUrl || ''}\r\n                noIndex\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntitySaveWrapper\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { BRANCHES } from \"../../data/app/supports-branches\"\r\nimport { BranchType } from \"../../types/branch\"\r\n\r\n\r\nconst getById = (id: string) => {\r\n    return BRANCHES.find(({ _id }) => _id === id)\r\n}\r\n\r\n\r\nconst getByIds = (ids: string[]) => {\r\n    const mappedBranches: BranchType[] = []\r\n    ids.forEach(branchId => {\r\n        const branch = BRANCHES.find(({ _id }) => _id === branchId)\r\n        if (branch) mappedBranches.push(branch)\r\n    })\r\n\r\n    return mappedBranches\r\n}\r\n\r\n\r\nexport const branchService = {\r\n    getById,\r\n    getByIds\r\n}","const readFromStorage = (key: string) => {\r\n    const value = localStorage.getItem(key)\r\n    if (!value) return\r\n    return JSON.parse(value)\r\n}\r\n\r\nconst saveToStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\n\r\nexport const localStorageService = {\r\n    readFromStorage,\r\n    saveToStorage,\r\n}","import { httpService } from \"../http-service\"\r\nimport { localStorageService } from \"../local-storage-service\"\r\n\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { EntityItemViewDetails } from \"../../models/types/entities/entity-item-view-details\"\r\n\r\n\r\nconst STORAGE_KEY = 'ViewedPages'\r\n\r\n\r\nconst query = async (dbName: string, params: URLSearchParams, archiveState?: string) => {\r\n    if (archiveState) params.set('fArchived', archiveState + '')\r\n\r\n    try {\r\n        return await httpService.get(dbName, params) as EntityItem[]\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst getById = async (dbName: string, id: string, isPageAction = false) => {\r\n    try {\r\n        const res = await httpService.get(`${dbName}/${id}`) as EntityItem\r\n\r\n        if (!isPageAction) _handleEntityItemView(dbName, id)\r\n        return res\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst remove = async (dbName: string, id: string) => {\r\n    try {\r\n        await httpService.delete(`${dbName}/${id}`)\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst save = async (dbName: string, item: EntityItem) => {\r\n    try {\r\n        const savedItem = item._id ? await httpService.put(`${dbName}/${item._id}`, item) : await httpService.post(`${dbName}`, item)\r\n        return savedItem\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst getMiniProfilesByPharse = async (pharse: string = '') => {\r\n    try {\r\n        return await httpService.get('profile/getMiniProfilesByPharse', { pharse })\r\n    } catch (err) {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst setEntityItemRate = async (entityName: string, id: string, rate: number) => {\r\n    try {\r\n        const ratePayload = { id, entityName, rate }\r\n        return await httpService.put('entity-item-info-update/rate', { ratePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst _handleEntityItemView = async (entityName: string, id: string) => {\r\n    let viewList = localStorageService.readFromStorage(STORAGE_KEY) as EntityItemViewDetails[]\r\n    if (!Array.isArray(viewList)) {\r\n        localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        viewList = []\r\n    }\r\n\r\n    viewList.push({ entityName, entityItemId: id })\r\n\r\n    if (viewList.length >= 3) {\r\n        try {\r\n            await httpService.put('entity-item-info-update/view', viewList)\r\n            localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        } catch {\r\n            localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n        }\r\n    }\r\n    else localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n}\r\n\r\n\r\nexport const entityItemService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getMiniProfilesByPharse,\r\n    setEntityItemRate\r\n}","const createEventEmitter = () => {\r\n    const listenersMap: ListenersMap = {}\r\n\r\n    return {\r\n        on(evName: string, listener: Listener) {\r\n            listenersMap[evName] = (listenersMap[evName]) ? [...listenersMap[evName], listener] : [listener]\r\n            return () => {\r\n                listenersMap[evName] = listenersMap[evName].filter(func => func !== listener)\r\n            }\r\n        },\r\n        emit(evName: string, data?: unknown) {\r\n            if (!listenersMap[evName]) return\r\n            listenersMap[evName].forEach(listener => listener(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventBus = createEventEmitter()\r\n\r\n\r\ntype ListenersMap = { [key: string]: Listener[] }\r\ntype Listener = (data: unknown) => void\r\n\r\n\r\n\r\nexport const activeClearFilter = (param: string) => {\r\n    eventBus.emit('clear-filter', param)\r\n}\r\n\r\nexport const closeDropdown = () =>{\r\n    eventBus.emit('closeDropdown')\r\n}","export const getValueByDynamicKey = (key: string, item: Object) => {\r\n    const keyPath = key.split('.')\r\n    let actualValue: any = item\r\n\r\n    for (let key of keyPath) {\r\n        if (!actualValue) return undefined\r\n        actualValue = actualValue[key as any]\r\n    }\r\n\r\n\r\n    return actualValue\r\n}","import { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntityItem = (editedItem: EntityItem) => {\r\n    store.dispatch({ type: 'updateDisplayEntityItem', editedItem })\r\n}\r\n\r\n\r\nexport const clearDisplayEntityItem = () => {\r\n    store.dispatch({ type: 'clearDisplayEntityItem' })\r\n}"],"names":["Dropdown","controllerText","Icon","controllerIcon","title","children","useState","isDropdownOpen","setIsDropdownOpen","elDropdown","useRef","useOnClickOutside","useEffect","unsubscribeCloseDropdown","eventBus","className","ref","onClick","ErrorMessage","message","NON_ZERO_DAYS","undefined","NON_ZERO_MONTHS","setSaveEntityItem","item","emptyEntityItemService","store","type","RelatedBranchOptionPreview","option","src","require","img","alt","name","OPTIONS","BRANCHES","branch","label","display","value","id","_id","asset","symbol","RelatedBranchPicker","isRequire","useSelector","state","saveEntityItemModule","values","setValues","isFail","setIsFail","relatedInfo","branchIds","filteredOptions","filter","includes","options","styles","customStyles","placeholder","noOptionsMessage","inputValue","formatOptionLabel","onChange","map","editedItem","structuredClone","updateDisplayEntityItem","handleSelectChange","defaultValue","onBlur","length","isMulti","control","alignItems","minWidth","minHeight","indicatorSeparator","provided","isFocused","backgroundColor","color","fontSize","padding","multiValueRemove","RelatedProfileOptionPreview","profileImageUrl","branchNames","branchService","branchesNameList","Intl","ListFormat","style","format","RelatedProfilePicker","setValue","isClearable","setIsClearable","miniProfile","displayName","profileId","getOptions","pharse","entityItemService","items","profile","debouncedLoadOptions","useDebouncedCallback","callback","Promise","_","loadOptions","loadingMessage","isRtl","entityInfo","setProfile","cacheOptions","border","margin","DynamicAssociatePickerList","relateds","related","basicProps","key","DropableSection","isUploading","onFetchFiles","elInput","fetchFiles","files","text","UploadIcon","ICON_TYPE_MAP","target","multiple","FileDrop","draggingOverFrameClassName","onTargetClick","current","click","onDrop","ev","preventDefault","size","ImageOnUploadPreview","file","entityName","onUploadSuccess","onUploadFail","isFirstRender","useIsFirstRender","fetchFile","setTimeout","image","makeId","imageUrl","err","UploadedImagePreview","onRemoveImage","backgroundImageStyle","backgroundImage","ImageUpload","minImageCount","maxImageCount","setIsUploading","imagesOnUpload","setImagesOnUpload","failsUpload","setFailsUpload","Array","isArray","miniImages","getFailMsg","msg","Infinity","shouldRenderFilesList","shouldRenderFailMsg","imagesOnUploadPreviewProps","push","filteredImagesOnUpload","fileItem","newFailsUpload","slice","dropableSectionProps","fileList","from","AiOutlineCloudUpload","failUpload","PageDetails","currentTarget","recursiveValueSetterByKey","obj","keyPath","split","actualObj","shift","join","BinaryPicker","pickerInfo","isActiveOption","actualValue","getValueByDynamicKey","onPickOption","YEARS","i","Date","getFullYear","DatePicker","defaultDay","endsWith","dateOfActivity","start","day","end","defaultMonth","month","defaultYear","year","extendKey","formattedValue","idx","DurationAdd","PlusIcon","isDurationStartDate","date","DurationPickerPreview","duration","onPickDuration","onRemoveDuration","DURATION_MOCK","DurationsPickerList","activityDurations","durations","setDurations","durationsCopy","newDurations","index","uuid","newDuration","prevDurations","NumberPicker","optionKey","min","max","console","log","inputProps","SymbolSeperateList","delimiter","valueAsStr","replace","ProfileFiller","infos","info","DynamicEntitySaveStage","stage","TabletWidePlusStageStepper","stages","stagesStatus","currStageIdx","changeCurrStageIdx","onChangeCurrStageIdx","UpToTabletWideStageStepper","saveItem","prevStageIdx","nextStageIdx","findIndex","status","StageStepper","maxDeviceWide","minDeviceWide","EntitySave","entity","setCurrStageIdx","fill","getInitStagesStatus","saveItemPage","setStagesStatus","isLoading","setIsLoading","useParams","navigate","useNavigate","location","useLocation","emptyItem","loadItem","isFilled","isNoneRequire","every","forEach","getIsSaveable","isEdited","insertAppMessage","pathname","stageStepperProps","itemName","icon","appTitle","openGraphTitle","openGraphDescription","openGraphImage","noIndex","ENTITIES_LIST","getById","getByIds","ids","mappedBranches","branchId","localStorageService","localStorage","getItem","JSON","parse","setItem","stringify","STORAGE_KEY","query","dbName","params","archiveState","set","httpService","isPageAction","res","_handleEntityItemView","remove","save","savedItem","getMiniProfilesByPharse","setEntityItemRate","rate","ratePayload","viewList","entityItemId","listenersMap","on","evName","listener","func","emit","data","createEventEmitter","activeClearFilter","param","clearDisplayEntityItem"],"sourceRoot":""}