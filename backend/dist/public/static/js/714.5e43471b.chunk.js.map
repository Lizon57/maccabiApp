{"version":3,"file":"static/js/714.5e43471b.chunk.js","mappings":"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","sources":["components/common/dropdown/dropdown.tsx","components/common/error-message/error-message.tsx","constans/days.ts","constans/months.ts","hooks/pages/use-page-data-cmp.ts","hooks/pages/use-page-type.ts","components/entities/portal/filterby-builder/dynamic-filterby/date-filter/date-filter.tsx","components/entities/portal/options-list/dynamic-filter-constructor/filter-section-toggler.tsx","components/entities/portal/options-list/sort-dropdown/sort-dropdown.tsx","components/entities/portal/options-list/options-list.tsx","components/entities/portal/active-filter/active-filter-preview.tsx","components/entities/portal/active-filter/active-filter-list.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby-preview.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby-list.tsx","components/entities/portal/filterby-builder/dynamic-filterby/branch-multi-select/branch-multi-select-filterby.tsx","components/entities/portal/filterby-builder/dynamic-filterby/checkbox-filter/checkbox-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/thumb.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/track.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/slider.tsx","components/entities/portal/filterby-builder/dynamic-filterby/number-filter/number-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/text-filter/text-filter.tsx","components/entities/portal/filterby-builder/dynamic-filterby/dynamic-filterby.tsx","components/entities/portal/filterby-builder/filterby-builder.tsx","services/util/get-relative-past-time.ts","components/common/branch-icon/display-branches-icon-by-ids.tsx","components/entities/portal/image-slider/image-slider.tsx","components/entities/portal/dynamic-entity-preview/square-entity-preview.tsx","components/entities/portal/dynamic-entity-preview/dynamic-entity-preview.tsx","components/entities/portal/entity-list/entity-list.tsx","pages/entities/entity-portal.tsx","services/app/branch-service.ts","services/local-storage-service.ts","services/entities/entity-item-service.ts","services/event-bus-service.ts","services/util/get-month-name.ts","services/util/get-formatted-date.ts","services/util/get-formatted-number.ts","store/action/display-entity-action.ts"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nimport { useOnClickOutside } from \"../../../hooks/use-on-click-outside\"\r\n\r\nimport { eventBus } from \"../../../services/event-bus-service\"\r\n\r\n\r\nexport const Dropdown = ({ controllerText, controllerIcon: Icon, title, children }: Props) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen)\r\n\r\n    const elDropdown = useRef<HTMLDivElement>(null)\r\n    useOnClickOutside(elDropdown, () => setIsDropdownOpen(false))\r\n\r\n    useEffect(() => {\r\n        const unsubscribeCloseDropdown = eventBus.on('closeDropdown', () => {\r\n            setIsDropdownOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeCloseDropdown()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"common-cmp--dropdown__container\" ref={elDropdown}>\r\n            <div className=\"toggler\" title={title} onClick={toggleDropdown}>\r\n                {controllerText && <span>{controllerText}</span>}\r\n                {Icon && <Icon />}\r\n            </div>\r\n\r\n            {isDropdownOpen && <div className=\"dropdown-container\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"children-container\">{children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    controllerText?: string\r\n    controllerIcon?: IconType\r\n    title?: string\r\n    children: JSX.Element\r\n}","import { RiEmotionSadFill } from \"react-icons/ri\"\r\n\r\n\r\nexport const ErrorMessage = ({ message = 'שגיאה בטעינת נתונים' }) => {\r\n    return (\r\n        <div className=\"common-cmp--error-message\">\r\n            <div className=\"error-emoji-container\"><RiEmotionSadFill /></div>\r\n\r\n            <div className=\"text\">{message}</div>\r\n        </div>\r\n    )\r\n}","export const DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\nexport const NON_ZERO_DAYS = [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]","export const MONTHS = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\nexport const NON_ZERO_MONTHS = [undefined, 'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']","import { useEffect } from 'react'\r\nimport { setPageDataCmpType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageDataCmp = (type: string) => {\r\n    useEffect(() => {\r\n        setPageDataCmpType(type)\r\n\r\n        return () => {\r\n            setPageDataCmpType('social-network-preview')\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useEffect } from 'react'\r\nimport { setPageType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageType = (type: string) => {\r\n    useEffect(() => {\r\n        setPageType(type)\r\n\r\n        return () => {\r\n            setPageType(null)\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport { AiFillCaretDown } from \"react-icons/ai\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { NON_ZERO_DAYS } from \"../../../../../../constans/days\"\r\nimport { NON_ZERO_MONTHS } from \"../../../../../../constans/months\"\r\n\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst YEARS: (number | undefined)[] = [undefined]\r\nfor (let i = 1850; i <= new Date().getFullYear(); i++) {\r\n    YEARS.push(i)\r\n}\r\nconst TYPE_NAMES = ['אחרי', 'לפני', 'בדיוק ב']\r\nconst INITIAL_VALUE = { day: undefined, month: undefined, year: undefined }\r\n\r\n\r\nexport const DateFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const [type, setType] = useState(2)\r\n    const [date, setDate] = useState<PossibleValue>(INITIAL_VALUE)\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const navigateNewPick = (activeDate: string) => {\r\n        params.set(filter.param, activeDate)\r\n        params.set(filter.param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateToNewPick = useDebouncedCallback(navigateNewPick, 1000)\r\n\r\n\r\n    const onSelectDate = (part: string, value: number | undefined) => {\r\n        setDate(prevDate => ({ ...prevDate, [part]: value }))\r\n\r\n        if (!date.year && !(part === 'year')) return\r\n        let activeDate: string | (number | string | undefined)[] = [date.day, date.month, date.year]\r\n        if (part === 'day') activeDate[0] = value\r\n        else if (part === 'month') activeDate[1] = value\r\n        else if (part === 'year') activeDate[2] = value\r\n\r\n        activeDate = activeDate.map(part => {\r\n            if (!part) return 'undefined'\r\n            return part\r\n        })\r\n        activeDate = activeDate.join('-')\r\n\r\n        debouncedNavigateToNewPick(activeDate)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param !== filter.param) return\r\n            setDate(INITIAL_VALUE)\r\n            setType(2)\r\n        })\r\n\r\n\r\n        if (!params.get(filter.param)) return\r\n\r\n        let typeFromParam: string | number | null = params.get(filter.param + 'Type') || 2\r\n        typeFromParam = +typeFromParam\r\n        setType(typeFromParam)\r\n\r\n        let newValue = params.get(filter.param)?.split('-').map(value => +value || undefined)\r\n        if (!newValue || newValue.length !== 3) return\r\n        const valueFromParam = {\r\n            day: newValue[0],\r\n            month: newValue[1],\r\n            year: newValue[2],\r\n        }\r\n        setDate(valueFromParam)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--date-filter__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n            <div className=\"content-container\">\r\n                <div className=\"date-picker\">\r\n                    <select\r\n                        value={date.day ? date.day : undefined}\r\n                        onChange={(ev) => onSelectDate('day', +ev.target.value || undefined)}\r\n                    >\r\n                        {NON_ZERO_DAYS.map(day => <option\r\n                            key={day ? day : 'unknown'}\r\n                            value={day ? day : undefined}\r\n                        >\r\n                            {day ? day : 'יום'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <select\r\n                        className=\"month\"\r\n                        value={date.month ? date.month : undefined}\r\n                        onChange={(ev) => onSelectDate('month', +ev.target.value || undefined)}\r\n                    >\r\n                        {NON_ZERO_MONTHS.map((month, idx) => <option\r\n                            key={month ? month : 'unknown'}\r\n                            value={idx ? idx : undefined}\r\n                        >\r\n                            {month ? month : 'חודש'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <select\r\n                        className={'year' + ((!date.year && (date.day || date.month)) ? ' error' : '')}\r\n                        value={date.year}\r\n                        onChange={(ev) => onSelectDate('year', +ev.target.value || undefined)}\r\n                    >\r\n                        {YEARS.map(year => <option\r\n                            key={year ? year : 'unknown'}\r\n                            value={year ? year : undefined}\r\n                        >\r\n                            {year ? year : 'שנה'}\r\n                        </option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"additional-content-container\">\r\n                    <div className=\"indicator\">אינדיקציה</div>\r\n                    <div className=\"type-toggler\">\r\n                        <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={AiFillCaretDown} title=\"שיטת סינון\">\r\n                            <div className=\"options-container\">\r\n                                {TYPE_NAMES.map((typeName, idx) => <div\r\n                                    key={typeName}\r\n                                    className=\"type-option\"\r\n                                    onClick={() => setType(idx)}\r\n                                >{typeName}</div>)}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\ntype PossibleValue = {\r\n    day: number | undefined\r\n    month: number | undefined\r\n    year: number | undefined\r\n}","import { BsFilter } from \"react-icons/bs\"\r\n\r\n\r\nexport const FilterSectionToggler = ({ toggleIsFilterSectionOpen, isFilterSectionOpen }: Props) => {\r\n    const onToggleFillter = () => {\r\n        !isFilterSectionOpen && window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        toggleIsFilterSectionOpen()\r\n    }\r\n\r\n    return (\r\n        <div className=\"entities-portal--dynamic-filter__icon-wrapper\" title=\"סנן פריטים\" onClick={onToggleFillter}>\r\n            <BsFilter />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    isFilterSectionOpen: boolean\r\n    toggleIsFilterSectionOpen: () => void\r\n}","import { useNavigate } from \"react-router-dom\"\r\n\r\nimport { BiSort } from \"react-icons/bi\"\r\nimport { FiXCircle } from \"react-icons/fi\"\r\n\r\nimport { EntitySortOption } from \"../../../../../types/entity/sort/entity-sort-option\"\r\n\r\nimport { Dropdown } from \"../../../../common/dropdown/dropdown\"\r\n\r\n\r\nexport const SortDropdown = ({ sorts, setIsLoading }: Props) => {\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSort = () => {\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        setIsLoading(true)\r\n    }\r\n\r\n\r\n    const onSelectSort = ({ key, order }: EntitySortOption) => {\r\n        params.set('sKey', key)\r\n        params.set('sOrder', order)\r\n        navigateNewSort()\r\n    }\r\n\r\n\r\n    const onClearSort = () => {\r\n        params.delete('sKey')\r\n        params.delete('sOrder')\r\n        navigateNewSort()\r\n    }\r\n\r\n\r\n    const getIsSortOptionActive = ({ key, order }: EntitySortOption) => {\r\n        return ((key === params.get('sKey')) && (order === params.get('sOrder')))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"options-list--sort-dropdown__container\">\r\n            <Dropdown controllerIcon={BiSort} title=\"מיין תצוגה\">\r\n                <>\r\n                    <div className=\"sorts-container\">\r\n                        {sorts.map(sort => (\r\n                            <div\r\n                                key={sort.id}\r\n                                className={\"sort-option\" + (getIsSortOptionActive(sort) ? ' active' : '')}\r\n                                title={'מיין לפי ' + sort.title}\r\n                                onClick={() => onSelectSort(sort)}>\r\n                                {sort.title}\r\n                            </div>))}\r\n                    </div>\r\n\r\n                    <div className=\"clear-sort\" onClick={onClearSort} title=\"נקה מיון\">\r\n                        <span className=\"icon\"><FiXCircle /></span>\r\n                        <span className=\"text\">נקה מיון</span>\r\n                    </div>\r\n                </>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n    sorts: EntitySortOption[]\r\n}","import { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\nimport { EntitySortOption } from \"../../../../types/entity/sort/entity-sort-option\"\r\n\r\nimport { SearchInput } from \"../../../common/search-input/search-input\"\r\nimport { FilterSectionToggler } from \"./dynamic-filter-constructor/filter-section-toggler\"\r\nimport { SortDropdown } from \"./sort-dropdown/sort-dropdown\"\r\n\r\n\r\nexport const OptionsList = ({ sorts, filters, isFilterSectionOpen, setIsLoading, toggleIsFilterSectionOpen }: Props) => {\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const primaryTextSearch = filters.find(filter => filter.type === 'primary_text')\r\n    const shouldRenderFiltersToggle = !!filters.filter(filter => filter.type !== 'primary_text').length\r\n\r\n\r\n    const primarySearchCallback = (str: string) => {\r\n        if (!primaryTextSearch) return\r\n\r\n        if (!str) params.delete(primaryTextSearch?.param)\r\n        else params.set(primaryTextSearch?.param, str)\r\n\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n        setIsLoading(true)\r\n    }\r\n    const debouncedPrimarySearchCallback = useDebouncedCallback(primarySearchCallback, 700)\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal-cmp--list-options__container\">\r\n            {primaryTextSearch &&\r\n                <SearchInput\r\n                    placeholder={primaryTextSearch?.title || 'חיפוש'}\r\n                    title={primaryTextSearch?.title || 'חיפוש'}\r\n                    initialValue={params.get(primaryTextSearch?.param) || ''}\r\n                    searchCallback={debouncedPrimarySearchCallback} />}\r\n\r\n            {shouldRenderFiltersToggle &&\r\n                <div className={\"filterby-icon\" + (isFilterSectionOpen ? ' active' : '')}>\r\n                    <FilterSectionToggler\r\n                        isFilterSectionOpen={isFilterSectionOpen}\r\n                        toggleIsFilterSectionOpen={toggleIsFilterSectionOpen}\r\n                    />\r\n                </div>}\r\n\r\n            <SortDropdown sorts={sorts} setIsLoading={setIsLoading} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    sorts: EntitySortOption[]\r\n    filters: EntityFilterOption[]\r\n    isFilterSectionOpen: boolean\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n    toggleIsFilterSectionOpen: () => void\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { FiXCircle } from \"react-icons/fi\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { getFormattedDate } from \"../../../../services/util/get-formatted-date\"\r\nimport { activeClearFilter } from \"../../../../services/event-bus-service\"\r\n\r\n\r\nexport const ActiveFilterPreview = ({ filter, searchParams, setIsLoading }: Props) => {\r\n    const [text, setText] = useState('')\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(() => {\r\n        let filterType = searchParams.get(filter.param + 'Type') || 0\r\n        let text = filter.activeFilterChipTexts[+filterType] || ''\r\n        const plainValue = searchParams.get(filter.param)\r\n        const valueLength = plainValue?.split(',').length + ''\r\n        const range = plainValue?.split('|')\r\n        const minRange = range?.[0] + ''\r\n        const maxRange = range?.[1] + ''\r\n        const booleanValue = (plainValue === 'true') ? 'רק' : 'ללא'\r\n\r\n        let dateValue: string | string[] | (number | undefined)[] = plainValue || ''\r\n        dateValue = dateValue.split('-').map(part => (part === 'undefined' || !part) ? undefined : +part)\r\n        dateValue = getFormattedDate({ day: dateValue[0], month: dateValue[1], year: dateValue[2] }, false, false) + ''\r\n\r\n\r\n        text = text.replace('PLAIN_VALUE', plainValue || '')\r\n        text = text.replace('VALUE_LENGTH', valueLength || '')\r\n        text = text.replace('MIN_RANGE', minRange || '')\r\n        text = text.replace('MAX_RANGE', maxRange || '')\r\n        text = text.replace('BOOLEAN_VALUE', booleanValue || '')\r\n        text = text.replace('DATE_VALUE', dateValue || '')\r\n\r\n        setText(text)\r\n    }, [searchParams]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const onRemoveFilter = () => {\r\n        searchParams.delete(filter.param)\r\n        searchParams.delete(filter.param + 'Type')\r\n\r\n        navigate({ search: searchParams.toString().replaceAll('%2C', ',') })\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        setIsLoading(true)\r\n        activeClearFilter(filter.param)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--active-filter-preview__container\">\r\n            <span className=\"icon-wrapper\" title=\"בטל סנן\" onClick={onRemoveFilter}><FiXCircle /></span>\r\n            <span className=\"text\">{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    searchParams: URLSearchParams\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nimport { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { ActiveFilterPreview } from \"./active-filter-preview\"\r\n\r\n\r\nexport const ActiveFilterList = ({ possibleFilters, searchParams, setIsLoading }: Props) => {\r\n    const [activeFilters, setActiveFilters] = useState<EntityFilterOption[]>()\r\n\r\n    useEffect(() => {\r\n        const activeFilters = possibleFilters.filter(filter => searchParams.get(filter.param))\r\n        setActiveFilters(activeFilters)\r\n    }, [possibleFilters, searchParams])\r\n\r\n\r\n\r\n    if (!activeFilters?.length) return <></>\r\n\r\n    return (\r\n        <div className=\"entities-portal--active-filter-list__container\">\r\n        <span className=\"title\">סננים פעילים</span>\r\n        <div className=\"list-container\">\r\n            {activeFilters.map(activeFilter => <ActiveFilterPreview\r\n                key={activeFilter.id}\r\n                filter={activeFilter}\r\n                searchParams={searchParams}\r\n                setIsLoading={setIsLoading}\r\n            />)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    possibleFilters: EntityFilterOption[]\r\n    searchParams: URLSearchParams\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { BranchType } from \"../../../../../../types/branch\"\r\n\r\nexport const BranchMultiSelectFilterbyPreview = ({ branch, isActive, toggleActiveBranch }: Props) => {\r\n    const { _id, asset: { symbol }, name: { display: displayName } } = branch\r\n\r\n    return (\r\n        <div\r\n            className={\"entities-portal--branch-multi-select-filterby-preview__container\" + (isActive ? ' active' : ' inactive')}\r\n            onClick={() => toggleActiveBranch(_id)}>\r\n            <img\r\n                className=\"symbol\"\r\n                src={require(`../../../../../../assets/images/branch-symbol/${symbol}`)}\r\n                alt=\"\" />\r\n            <span>{displayName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    branch: BranchType\r\n    isActive: boolean\r\n    toggleActiveBranch: (id: string) => void\r\n}","import { useEffect, useState, useMemo } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { BRANCHES } from \"../../../../../../data/app/supports-branches\"\r\n\r\nimport { BranchMultiSelectFilterbyPreview } from \"./branch-multi-select-filterby-preview\"\r\n\r\n\r\nexport const BranchMultiSelectFilterbyList = ({ filterParam, debouncedSetIsLoading }: Props) => {\r\n    const { browseableBranchesIds } = useSelector((state: RootState) => state.userStateModule.user)\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const branchesFromParams = useMemo(() => (params.get(filterParam)?.split(',') || []), [filterParam, params])\r\n    const initialBranchesIdsState = (branchesFromParams.length) ? branchesFromParams : browseableBranchesIds\r\n    const [activeBranchesIds, setActiveBranchesIds] = useState<string[]>(initialBranchesIdsState)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateToNewActiveBranches = (newActiveBranches: string[]) => {\r\n        const newActiveBranchesForParam = newActiveBranches.join()\r\n        params.set(filterParam, newActiveBranchesForParam)\r\n        navigate({ search: params.toString().replaceAll('%2C', ',') })\r\n    }\r\n    const debouncedNavigateToNewActiveBranches = useDebouncedCallback(navigateToNewActiveBranches, 1000)\r\n\r\n\r\n    useEffect(() => {\r\n        setActiveBranchesIds(browseableBranchesIds)\r\n    }, [browseableBranchesIds])\r\n\r\n    useEffect(() => {\r\n        if ((browseableBranchesIds.join('') !== branchesFromParams.join('')) && branchesFromParams.length) {\r\n            setActiveBranchesIds(branchesFromParams)\r\n        }\r\n\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filterParam) setActiveBranchesIds(initialBranchesIdsState)\r\n        })\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const activeNewBranchesIds = (branchesIds: string[]) => {\r\n        setActiveBranchesIds(branchesIds)\r\n        debouncedNavigateToNewActiveBranches(branchesIds)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    const onBranchClick = (branchId: string) => {\r\n        const getIsActiveBranch = !!activeBranchesIds.find(activeBranchId => activeBranchId === branchId)\r\n        let newActiveBranchesIds = activeBranchesIds.slice()\r\n\r\n        if (getIsActiveBranch) newActiveBranchesIds = newActiveBranchesIds.filter(activeBranchId => activeBranchId !== branchId)\r\n        else newActiveBranchesIds.push(branchId)\r\n\r\n        activeNewBranchesIds(newActiveBranchesIds)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--branch-multi-select-list__container\">\r\n            {BRANCHES.map(branch => <BranchMultiSelectFilterbyPreview\r\n                key={branch._id}\r\n                branch={branch}\r\n                isActive={activeBranchesIds.includes(branch._id)}\r\n                toggleActiveBranch={() => onBranchClick(branch._id)}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filterParam: string\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { BranchMultiSelectFilterbyList } from \"./branch-multi-select-filterby-list\"\r\n\r\n\r\nexport const BranchMultiSelectFilterby = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    return (\r\n        <div className=\"entities-portal--branch-multi-select-filterby__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n            <BranchMultiSelectFilterbyList filterParam={filter.param} debouncedSetIsLoading={debouncedSetIsLoading} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\n\r\nexport const CheckboxFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const [value, setValue] = useState<boolean | undefined>()\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSearch = (newValue: boolean | undefined) => {\r\n        if (typeof newValue === 'boolean') params.set(filter.param, newValue.toString())\r\n        else params.delete(filter.param)\r\n\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateNewSearch = useDebouncedCallback(navigateNewSearch, 1000)\r\n\r\n\r\n    const onSetValue = (newValue: boolean | undefined) => {\r\n        setValue(newValue)\r\n        debouncedNavigateNewSearch(newValue)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filter.param) setValue(undefined)\r\n        })\r\n\r\n        \r\n        const newValue = params.get(filter.param)\r\n        if (!newValue) return\r\n        setValue(JSON.parse(newValue))\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const getIsActive = (option: string) => {\r\n        switch (option) {\r\n            case 'true':\r\n                if (typeof value === 'boolean' && value) return true\r\n                break\r\n\r\n            case 'false':\r\n                if (typeof value === 'boolean' && !value) return true\r\n                break\r\n\r\n            case 'undefined':\r\n                if (typeof value !== 'boolean') return true\r\n                break\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--checkbox-filter__container\">\r\n            <span className=\"title\">{filter.title}</span>\r\n\r\n            <div className=\"content-container\">\r\n                <span className=\"options-container\">\r\n                    <span\r\n                        className={\"option\" + (getIsActive('true') ? ' active' : '')}\r\n                        onClick={() => onSetValue(true)}\r\n                    >רק</span>\r\n\r\n                    <span\r\n                        className={\"option\" + (getIsActive('false') ? ' active' : '')}\r\n                        onClick={() => onSetValue(false)}\r\n                    >ללא</span>\r\n\r\n                    <span className={\"param\" + ((typeof value === 'boolean') ? ' active' : '')}>{filter.title}</span>\r\n                </span>\r\n\r\n                <span\r\n                    className={\"clear\" + ((typeof value === 'boolean') ? ' clickable' : ' active')}\r\n                    onClick={() => onSetValue(undefined)}\r\n                >לא משנה לי</span>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","export const Thumb = ({ props }: Props) => {\r\n    return (\r\n        <div\r\n            {...props}\r\n            className=\"entities-portal--number-picker__thumb-container\"\r\n            style={{ ...props.style }}\r\n        >\r\n            <span className=\"indicator\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    props: any\r\n}","import { getTrackBackground } from \"react-range\"\r\n\r\n\r\nexport const Track = ({ props, children, values, min, max, type }: Props) => {\r\n    const getColors = () => {\r\n        switch (type) {\r\n            case 0:\r\n                return ['#d4d4d4', '#195da6']\r\n\r\n            case 1:\r\n                return ['#195da6', '#d4d4d4']\r\n\r\n            case 2:\r\n                return ['#d4d4d4', '#195da6','#d4d4d4']\r\n\r\n            default: return []\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"entities-portal--number-picker__track-container\"\r\n            style={{ ...props.style }}\r\n        >\r\n            <div\r\n                ref={props.ref}\r\n                className=\"track\"\r\n                style={{\r\n                    background: getTrackBackground({\r\n                        values,\r\n                        colors: getColors(),\r\n                        min,\r\n                        max,\r\n                        rtl: true\r\n                    }),\r\n                }}\r\n            >{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    props: any\r\n    values: number[]\r\n    min: number\r\n    max: number\r\n    type: number\r\n    children: React.ReactNode\r\n}","import { Range } from \"react-range\"\r\n\r\nimport { Thumb } from \"./thumb\"\r\nimport { Track } from \"./track\"\r\n\r\nexport const Slider = ({ min, max, values, type, setValue }: Props) => {\r\n    const manipulatedValues = (values.length === 2) ? values : [values[0]]\r\n\r\n    const rangeProps = { min, max }\r\n\r\n    return (\r\n        <div>\r\n            <Range\r\n                values={manipulatedValues}\r\n                step={1}\r\n                rtl\r\n                {...rangeProps}\r\n                onChange={setValue}\r\n                renderTrack={({ props, children }) => <Track\r\n                    props={props}\r\n                    values={manipulatedValues}\r\n                    {...rangeProps}\r\n                    type={type}\r\n                    children={children}\r\n                />}\r\n                renderThumb={({ index, props, isDragged }) => <Thumb\r\n                    key={index}\r\n                    props={props}\r\n                />}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    min: number\r\n    max: number\r\n    values: number[]\r\n    type: number\r\n    setValue: (values: number[]) => void\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport { AiFillCaretDown } from \"react-icons/ai\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { Slider } from \"./slider\"\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst TYPE_NAMES = ['החל מ', 'עד ל', 'החל מ עד ל']\r\n\r\n\r\nexport const NumberFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const { param, option, title } = filter\r\n    const [type, setType] = useState(2)\r\n\r\n    const min = option?.min || 0\r\n    const max = option?.max || 100\r\n    const [values, setValues] = useState([min, max])\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n    const navigateNewPick = (values: number[]) => {\r\n        let activeValues: number[] | string = values\r\n        if (type === 0) activeValues = [values[0], max]\r\n        else if (type === 1) activeValues = [min, values[0]]\r\n        activeValues = activeValues.join('|')\r\n        params.set(param, activeValues)\r\n        params.set(param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateToNewActiveRange = useDebouncedCallback(navigateNewPick, 1000)\r\n\r\n\r\n    const onSetType = (type: number) => {\r\n        switch (type) {\r\n            case 0:\r\n                setValues([values[0]])\r\n                break\r\n\r\n            case 1:\r\n                setValues([values[1] || values[0]])\r\n                break\r\n\r\n            case 2:\r\n                setValues([min, max])\r\n                break\r\n\r\n        }\r\n        setType(type)\r\n    }\r\n\r\n\r\n    const onSetValues = (values: number[]) => {\r\n        setValues(values)\r\n        debouncedNavigateToNewActiveRange(values)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param !== filter.param) return\r\n            const min = option?.min || 0\r\n            const max = option?.max || 100\r\n            setValues([min, max])\r\n            setType(2)\r\n        })\r\n\r\n\r\n        if (!params.get(param)) return\r\n\r\n        let type: string | number | null = params.get(param + 'Type') || 2\r\n        type = +type\r\n        setType(type)\r\n\r\n        let newValues = params.get(param)?.split('|').map(value => +value) || []\r\n        if (type === 0) newValues = [newValues[0]]\r\n        else if (type === 1) newValues = [newValues[1]]\r\n        setValues(newValues)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--number-picker__container\">\r\n            <span className=\"title\">{title}</span>\r\n            <div className=\"content-container\">\r\n                <>\r\n                    <Slider\r\n                        min={min}\r\n                        max={max}\r\n                        values={values}\r\n                        type={type}\r\n                        setValue={onSetValues}\r\n                    />\r\n\r\n                    <div className=\"additional-content-container\">\r\n                        <span className=\"indicator\">\r\n                            {(type === 1) ? '' : `החל מ-${values[0]}`}\r\n                            {type === 2 && ' ו'}\r\n                            {type === 1 && `עד ל-${values[0]}`}\r\n                            {type === 2 && `עד ל-${values[1]}`}\r\n                        </span>\r\n\r\n                        <div className=\"type-toggler\">\r\n                            <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={AiFillCaretDown} title=\"שיטת סינון\">\r\n                                <div className=\"options-container\">\r\n                                    {TYPE_NAMES.map((typeName, idx) => <div\r\n                                        key={typeName}\r\n                                        className=\"type-option\"\r\n                                        onClick={() => onSetType(idx)}\r\n                                    >{typeName}</div>)}\r\n                                </div>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\nimport { AiFillCaretDown } from \"react-icons/ai\"\r\n\r\nimport { EntityFilterOption } from \"../../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { eventBus } from \"../../../../../../services/event-bus-service\"\r\n\r\nimport { Dropdown } from \"../../../../../common/dropdown/dropdown\"\r\n\r\n\r\nconst TYPE_NAMES = ['מתחיל ב', 'נגמר ב', 'כולל את']\r\n\r\nexport const TextFilter = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const { param, title } = filter\r\n    const [type, setType] = useState(2)\r\n    const [value, setValue] = useState('')\r\n\r\n    const { searchParams: params } = new URL(window.location.href)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const navigateNewSearch = (value: string) => {\r\n        params.set(param, value)\r\n        params.set(param + 'Type', type + '')\r\n        navigate({ search: params.toString() })\r\n    }\r\n    const debouncedNavigateNewSearch = useDebouncedCallback(navigateNewSearch, 1000)\r\n\r\n\r\n    const onSetValue = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value: newValue } = target\r\n        setValue(newValue)\r\n        debouncedNavigateNewSearch(newValue)\r\n        debouncedSetIsLoading(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeClearFilter = eventBus.on('clear-filter', (param) => {\r\n            if (param === filter.param) {\r\n                setValue('')\r\n                setType(2)\r\n            }\r\n        })\r\n\r\n\r\n        const newValue = params.get(param)\r\n        if (!newValue) return\r\n\r\n        setValue(newValue)\r\n\r\n        let type: string | number | null = params.get(param + 'Type') || 2\r\n        if (type === '0') type = 0\r\n        else if (type === '1') type = 1\r\n        else type = 2\r\n        setType(type)\r\n\r\n\r\n        return () => unsubscribeClearFilter()\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal--text-filter__container\">\r\n            <span className=\"title\">{title}</span>\r\n\r\n            <div className=\"content-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={\"חיפוש\" + ((type === 2) ? '  (ניתן להפריד בפסיק)' : '')}\r\n                    value={value}\r\n                    onChange={(ev) => onSetValue(ev)}\r\n                />\r\n\r\n                <Dropdown controllerText={TYPE_NAMES[type]} controllerIcon={AiFillCaretDown} title=\"שיטת סינון\">\r\n                    <div className=\"options-container\">\r\n                        {TYPE_NAMES.map((typeName, idx) => <div\r\n                            key={typeName}\r\n                            className=\"type-option\"\r\n                            onClick={() => setType(idx)}\r\n                        >{typeName}</div>)}\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n","import { EntityFilterOption } from \"../../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { BranchMultiSelectFilterby } from \"./branch-multi-select/branch-multi-select-filterby\"\r\nimport { CheckboxFilter } from \"./checkbox-filter/checkbox-filter\"\r\nimport { DateFilter } from \"./date-filter/date-filter\"\r\nimport { NumberFilter } from \"./number-filter/number-filter\"\r\nimport { TextFilter } from \"./text-filter/text-filter\"\r\n\r\n\r\nexport const DynamicFilterby = ({ filter, debouncedSetIsLoading }: Props) => {\r\n    const basicProps = { filter, debouncedSetIsLoading }\r\n\r\n    switch (filter.type) {\r\n        case 'branch_multi_select':\r\n            return <BranchMultiSelectFilterby {...basicProps} />\r\n\r\n        case 'multi_number_filter':\r\n            return <NumberFilter {...basicProps} />\r\n\r\n        case 'text_filter':\r\n            return <TextFilter {...basicProps} />\r\n\r\n        case 'checkbox_filter':\r\n            return <CheckboxFilter {...basicProps} />\r\n\r\n        case 'date_filter':\r\n            return <DateFilter {...basicProps} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    filter: EntityFilterOption\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n\r\n}","import { EntityFilterOption } from \"../../../../models/interfaces/entities/entity-filter-option\"\r\n\r\nimport { DynamicFilterby } from \"./dynamic-filterby/dynamic-filterby\"\r\n\r\n\r\nexport const FilterbyBuilder = ({ filters, debouncedSetIsLoading }: Props) => {\r\n    filters = filters.filter(filter => filter.type !== 'primary_text')\r\n\r\n    return (\r\n        <div className={'entity-portal--filterby-builder__container' + (filters.length < 4 ? ' short-list' : '')}>\r\n            {filters.map(filter => <DynamicFilterby\r\n                key={filter.id}\r\n                filter={filter}\r\n                debouncedSetIsLoading={debouncedSetIsLoading}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filters: EntityFilterOption[]\r\n    debouncedSetIsLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}","const UNITS: Units = {\r\n    year: 24 * 60 * 60 * 1000 * 365,\r\n    month: 24 * 60 * 60 * 1000 * 365 / 12,\r\n    day: 24 * 60 * 60 * 1000,\r\n    hour: 60 * 60 * 1000,\r\n    minute: 60 * 1000,\r\n    second: 1000\r\n}\r\n\r\nconst FORMATTER = new Intl.RelativeTimeFormat('he', { numeric: 'auto' })\r\n\r\nexport const getRelativePastTime = (fromDate: Date, toDate = new Date()) => {\r\n    if (!fromDate) return\r\n\r\n    fromDate = new Date(fromDate)\r\n    const elapsedTime = fromDate.getTime() - toDate.getTime()\r\n\r\n    for (const unit in UNITS) {\r\n        if (Math.abs(elapsedTime) > UNITS[unit] || unit === 'second') {\r\n            return FORMATTER.format(Math.round(elapsedTime / UNITS[unit]), unit as Unit)\r\n        }\r\n    }\r\n}\r\n\r\ntype Units = { [key: string]: number }\r\ntype Unit = \"year\" | \"years\" | \"quarter\" | \"quarters\" | \"month\" | \"months\" | \"week\" | \"weeks\" | \"day\" | \"days\" | \"hour\" | \"hours\" | \"minute\" | \"minutes\" | \"second\" | \"seconds\"","import { branchService } from \"../../../services/app/branch-service\"\r\n\r\n\r\nexport const DisplayBranchesIconByIds = ({ ids, className }: Props) => {\r\n    const branches = branchService.getByIds(ids)\r\n    const { asset: { symbol: primaryBranchSymbol }, name: { display: primaryBranchDisplayName } } = branches[0]\r\n    const shouldRenderAdditionalBranchList = (branches.length >= 2)\r\n\r\n    const formatter = new Intl.ListFormat('he', { style: 'long', type: 'conjunction' })\r\n    const branchesNameList = formatter.format(branches.map(branch => branch.name.display))\r\n\r\n\r\n    return (\r\n        <div\r\n            className={'branch-icon--display-branch-icon-by-id ' + className}\r\n            title={`מתוך ${branchesNameList}`}\r\n        >\r\n            <img\r\n                src={require(`../../../assets/images/branch-symbol/${primaryBranchSymbol}`)}\r\n                alt={primaryBranchDisplayName}\r\n            />\r\n\r\n            {shouldRenderAdditionalBranchList && <span className=\"additional-branch\">{branches.length - 1}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    ids: string[]\r\n    className?: string\r\n}","import Slider from \"react-slick\"\r\n\r\n\r\nconst CustomDots = () => {\r\n    return (\r\n        <span className=\"entities-portal-cmp--image-carousel-dots__container\"></span>\r\n    )\r\n}\r\n\r\nconst SETTING = { dots: true, speed: 300, customPaging: CustomDots }\r\n\r\nexport const ImageSlider = ({ images, fallbackImgUrl }: Props) => {\r\n    if (!images.length && !fallbackImgUrl) return <></>\r\n\r\n\r\n    return (\r\n        <div className=\"entities-portal-cmp--image-carousel__container\">\r\n            <Slider {...SETTING}>\r\n                {images.length\r\n                    ? images.map(image => <img\r\n                        key={image.id}\r\n                        src={image.imageUrl}\r\n                        alt={image.name}\r\n                        title={image.name + ((images.length > 1) ? ` (מתוך ${images.length} תמונות)` : '')}\r\n                    />)\r\n                    : <img\r\n                        src={fallbackImgUrl}\r\n                        className=\"fallback\"\r\n                        alt=\"לא נמצאה תמונת תצוגה\"\r\n                        title=\"לא נמצאה תמונת תצוגה\"\r\n                    />}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    images: {\r\n        id: string\r\n        name: string\r\n        imageUrl: string\r\n    }[]\r\n    fallbackImgUrl?: string\r\n}","import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { getFormattedNumber } from \"../../../../services/util/get-formatted-number\"\r\nimport { getRelativePastTime } from \"../../../../services/util/get-relative-past-time\"\r\n\r\nimport { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { ICON_TYPE_MAP } from \"../../../../constans/icon-type-map\"\r\n\r\nimport { DisplayBranchesIconByIds } from \"../../../common/branch-icon/display-branches-icon-by-ids\"\r\nimport { ImageSlider } from \"../image-slider/image-slider\"\r\n\r\nconst GET_LITERAL_EDIT_AMOUNT = (amount: number) => {\r\n    if (amount === 1) return 'פעם אחת'\r\n    else if (amount === 2) return 'פעמיים'\r\n    else return `${amount} פעמים`\r\n}\r\n\r\n\r\nexport const SquareEntityPreview = ({ item, fallbackImgUrl }: Props) => {\r\n    const [isLike, setIsLike] = useState(false)\r\n\r\n    const toggleIsLike = (ev: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        ev.preventDefault()\r\n        setIsLike(!isLike)\r\n    }\r\n\r\n\r\n    const totalImageCount = item.miniImages?.length || 0\r\n    const { fillHeart: FillHeartIcon, outlineHeart: OutlineHeartIcon, view: ViewIcon,\r\n        rate: RateIcon, edit: EditIcon } = ICON_TYPE_MAP.entityItemPreview\r\n    const { relatedInfo, entityInfo, itemInfo: { view, rate, history } } = item\r\n\r\n    const relativePastTime = getRelativePastTime(history.lastEditDate)\r\n\r\n    return (\r\n        <Link to={item._id} className=\"dynamic-entity-preview--square-entity-preview__container\">\r\n            <div className=\"image-container\">\r\n                <ImageSlider images={item.miniImages || []} fallbackImgUrl={fallbackImgUrl} />\r\n\r\n                <span\r\n                    className={\"like-icon\" + (isLike ? ' active' : '')}\r\n                    title={isLike ? 'הסר מרשימת המועדפים' : 'הוסף לרשימת המועדפים'}\r\n                    onClick={toggleIsLike}>\r\n                    {isLike ? <FillHeartIcon /> : <OutlineHeartIcon />}\r\n                </span>\r\n\r\n                {totalImageCount > 1 && <span className=\"image-counter\" title={`${totalImageCount} תמונות תצוגה`}>{totalImageCount}</span>}\r\n            </div>\r\n\r\n            <div className=\"title\">\r\n                {relatedInfo?.branchIds && <span className=\"branch-icon\"><DisplayBranchesIconByIds ids={relatedInfo.branchIds} /></span>}\r\n                <span className=\"title\">{entityInfo.name.display}</span>\r\n            </div>\r\n\r\n\r\n            <div className=\"item-additional-info\">\r\n                <div className=\"views-and-rate\">\r\n                    <div className=\"views\" title={`${getFormattedNumber(view)} צפיות`}>\r\n                        <span className=\"icon\"><ViewIcon size={11} /></span>\r\n                        <span className=\"text\">{view ? getFormattedNumber(view) : 'לא נצפה'}</span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"rate\"\r\n                        title={rate.avg\r\n                            ? `${rate.avg} כוכבי דירוג (בידי ${getFormattedNumber(rate.raterCount)} מדרגים)`\r\n                            : 'טרם דורג'}>\r\n                        <span className=\"icon\"><RateIcon size={11} /></span>\r\n                        <span className=\"text\">{rate.avg ? rate.avg : 'ללא דירוג'}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"last-edit-date\"\r\n                    title={(history.totalEditCount)\r\n                        ? `נערך לאחרונה ${relativePastTime}. סה\"כ נערך ${GET_LITERAL_EDIT_AMOUNT(history.totalEditCount)}`\r\n                        : 'טרם נערך'}\r\n                >\r\n                    <span className=\"icon\"><EditIcon size={11} /></span>\r\n                    <span className=\"text\">{relativePastTime ? relativePastTime : 'טרם נערך'}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    item: EntityItem\r\n    fallbackImgUrl: string\r\n}\r\n\r\n","import { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { SquareEntityPreview } from \"./square-entity-preview\"\r\n\r\n\r\nexport const DynamicEntityPreview = ({ item, type, fallbackImgUrl }: Props) => {\r\n    switch (type) {\r\n        case 'square':\r\n            return <SquareEntityPreview item={item} fallbackImgUrl={fallbackImgUrl} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    item: EntityItem\r\n    type: string\r\n    fallbackImgUrl: string\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { Entity } from \"../../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../../models/types/entities/item/entity-item\"\r\n\r\nimport { ICON_TYPE_MAP } from \"../../../../constans/icon-type-map\"\r\n\r\nimport { DynamicEntityPreview } from \"../dynamic-entity-preview/dynamic-entity-preview\"\r\n\r\n\r\nconst PlusIcon = ICON_TYPE_MAP.entityItemPreview.plus\r\n\r\nexport const EntityList = ({ entity, items }: Props) => {\r\n    return (\r\n        <div className=\"entity-portal--entity-list__container\">\r\n            <div className=\"add-entity-container\" title=\"הוסף פריט\">\r\n                <Link to=\"save\">\r\n                    <span className=\"icon-wrapper\"><PlusIcon size={40} /></span>\r\n                    <span className=\"text\">הוסף פריט</span>\r\n                </Link>\r\n            </div>\r\n\r\n            {items.map(item => <DynamicEntityPreview\r\n                key={item._id}\r\n                item={item}\r\n                type={entity.listPageInfo.previewType}\r\n                fallbackImgUrl={entity.entityInfo.image.thumbnail.path}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n    items: EntityItem[]\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useDebouncedCallback } from \"use-debounce\"\r\n\r\nimport { entityItemService } from \"../../services/entities/entity-item-service\"\r\n\r\nimport { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store/store\"\r\nimport { clearDisplayEntity, updateDisplayEntity } from \"../../store/action/display-entity-action\"\r\n\r\nimport { ENTITIES_LIST } from \"../../constans/entities-list\"\r\n\r\nimport { useOnWindowResize } from \"../../hooks/use-on-window-resize\"\r\nimport { usePageDataCmp } from \"../../hooks/pages/use-page-data-cmp\"\r\nimport { usePageType } from \"../../hooks/pages/use-page-type\"\r\n\r\nimport { Loader } from \"../../components/common/loader/loader\"\r\nimport { ErrorMessage } from \"../../components/common/error-message/error-message\"\r\nimport { MainTitle } from \"../../components/common/main-title/main-title\"\r\nimport { OptionsList } from \"../../components/entities/portal/options-list/options-list\"\r\nimport { ActiveFilterList } from \"../../components/entities/portal/active-filter/active-filter-list\"\r\nimport { FilterbyBuilder } from \"../../components/entities/portal/filterby-builder/filterby-builder\"\r\nimport { SeoImplement } from \"../../components/common/seo-implement/seo-implement\"\r\nimport { EntityList } from \"../../components/entities/portal/entity-list/entity-list\"\r\nimport { errorHandler } from \"../../services/util/error-handler\"\r\n\r\n\r\nconst EntityPortalWrapper = () => {\r\n    let { pathname } = useLocation()\r\n    pathname = pathname.split('/')[1]\r\n    const entity = ENTITIES_LIST[pathname]\r\n    return (\r\n        <EntityPortal entity={entity} />\r\n    )\r\n}\r\n\r\n\r\nconst EntityPortal = ({ entity }: Props) => {\r\n    const { browseableBranchesIds: userPrefBranchesFilter } = useSelector((state: RootState) => state.userStateModule.user)\r\n    const [items, setItems] = useState<EntityItem[]>()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n    const [isFilterSectionOpen, setIsFilterSectionOpen] = useState(window.innerWidth > 700)\r\n\r\n    const { searchParams } = new URL(window.location.href)\r\n\r\n    usePageDataCmp('social-network-preview')\r\n    usePageType('entity-item-portal')\r\n\r\n    const toggleIsFilterSectionOpen = () => setIsFilterSectionOpen(!isFilterSectionOpen)\r\n    const debouncedSetIsLoading = useDebouncedCallback(setIsLoading, 1000)\r\n\r\n\r\n    const fetchItems = async () => {\r\n        try {\r\n            if (!searchParams.get('fBranchIds')) searchParams.set('fBranchIds', userPrefBranchesFilter)\r\n            const items = await entityItemService.query(entity.name, searchParams)\r\n            setTimeout(() => {\r\n                setItems(items)\r\n                setIsLoading(false)\r\n            }, 50000)\r\n        } catch ({ message }) {\r\n            const errorMessage = errorHandler(message, false)\r\n            setErrorMessage(errorMessage)\r\n            setIsLoading(false)\r\n        }\r\n        finally {\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [entity])\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return\r\n        fetchItems()\r\n    }, [searchParams, userPrefBranchesFilter]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    useEffect(() => {\r\n        updateDisplayEntity(entity)\r\n\r\n        return () => {\r\n            clearDisplayEntity()\r\n        }\r\n    }, [entity])\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    }, [userPrefBranchesFilter])\r\n\r\n\r\n    const changeFilterSectionOpenOnWindowResize = () => {\r\n        const { innerWidth } = window\r\n        if (innerWidth < 700 && isFilterSectionOpen) setIsFilterSectionOpen(false)\r\n        else if (innerWidth > 700 && !isFilterSectionOpen) setIsFilterSectionOpen(true)\r\n    }\r\n    useOnWindowResize(changeFilterSectionOpenOnWindowResize)\r\n\r\n\r\n    const {\r\n        entityInfo: { image: { icon: Icon }, name: { listTitle } },\r\n        listPageInfo: { filters, sorts }\r\n    } = entity\r\n\r\n    const titleAdditionalCmp = <OptionsList\r\n        sorts={sorts}\r\n        filters={filters}\r\n        isFilterSectionOpen={isFilterSectionOpen}\r\n        setIsLoading={setIsLoading}\r\n        toggleIsFilterSectionOpen={toggleIsFilterSectionOpen}\r\n    />\r\n\r\n    const FilterbyBuilderProps = { filters, debouncedSetIsLoading }\r\n    const { display: entityDisplayName, openGraph } = entity.entityInfo.name\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--entity-portal__container\">\r\n                <MainTitle text={listTitle} Icon={Icon} isSticky additionalCmp={titleAdditionalCmp} />\r\n\r\n                <ActiveFilterList possibleFilters={filters} searchParams={searchParams} setIsLoading={setIsLoading} />\r\n                {isFilterSectionOpen && <FilterbyBuilder {...FilterbyBuilderProps} />}\r\n\r\n                {isLoading && <Loader />}\r\n                {errorMessage && <ErrorMessage message={errorMessage} />}\r\n\r\n                {(!isLoading && !errorMessage && !items?.length) && <ErrorMessage message=\"לא נמצאו פריטים להצגה\" />}\r\n                {(!isLoading && !errorMessage && !!items?.length) && <EntityList entity={entity} items={items} />}\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={entityDisplayName}\r\n                openGraphTitle={openGraph}\r\n                pageDescription={entity.entityInfo.description.short}\r\n                openGraphDescription={entity.entityInfo.description.short}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntityPortalWrapper\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { BRANCHES } from \"../../data/app/supports-branches\"\r\nimport { BranchType } from \"../../types/branch\"\r\n\r\n\r\nconst getById = (id: string) => {\r\n    return BRANCHES.find(({ _id }) => _id === id)\r\n}\r\n\r\n\r\nconst getByIds = (ids: string[]) => {\r\n    const mappedBranches: BranchType[] = []\r\n    ids.forEach(branchId => {\r\n        const branch = BRANCHES.find(({ _id }) => _id === branchId)\r\n        if (branch) mappedBranches.push(branch)\r\n    })\r\n\r\n    return mappedBranches\r\n}\r\n\r\n\r\nexport const branchService = {\r\n    getById,\r\n    getByIds\r\n}","const readFromStorage = (key: string) => {\r\n    const value = localStorage.getItem(key)\r\n    if (!value) return\r\n    return JSON.parse(value)\r\n}\r\n\r\nconst saveToStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\n\r\nexport const localStorageService = {\r\n    readFromStorage,\r\n    saveToStorage,\r\n}","import { httpService } from \"../http-service\"\r\nimport { localStorageService } from \"../local-storage-service\"\r\n\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { EntityItemViewDetails } from \"../../models/types/entities/entity-item-view-details\"\r\n\r\n\r\nconst STORAGE_KEY = 'ViewedPages'\r\n\r\n\r\nconst query = async (dbName: string, params: URLSearchParams, archiveState?: string) => {\r\n    if (archiveState) params.set('fArchived', archiveState + '')\r\n\r\n    try {\r\n        return await httpService.get(dbName, params) as EntityItem[]\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst getById = async (dbName: string, id: string, isPageAction = false) => {\r\n    try {\r\n        const res = await httpService.get(`${dbName}/${id}`) as EntityItem\r\n\r\n        if (!isPageAction) _handleEntityItemView(dbName, id)\r\n        return res\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst remove = async (dbName: string, id: string) => {\r\n    try {\r\n        await httpService.delete(`${dbName}/${id}`)\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst save = async (dbName: string, item: EntityItem) => {\r\n    try {\r\n        const savedItem = item._id ? await httpService.put(`${dbName}/${item._id}`, item) : await httpService.post(`${dbName}`, item)\r\n        return savedItem\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst getMiniProfilesByPharse = async (pharse: string = '') => {\r\n    try {\r\n        return await httpService.get('profile/getMiniProfilesByPharse', { pharse })\r\n    } catch (err) {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst setEntityItemRate = async (entityName: string, id: string, rate: number) => {\r\n    try {\r\n        const ratePayload = { id, entityName, rate }\r\n        return await httpService.put('entity-item-info-update/rate', { ratePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst _handleEntityItemView = async (entityName: string, id: string) => {\r\n    let viewList = localStorageService.readFromStorage(STORAGE_KEY) as EntityItemViewDetails[]\r\n    if (!Array.isArray(viewList)) {\r\n        localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        viewList = []\r\n    }\r\n\r\n    viewList.push({ entityName, entityItemId: id })\r\n\r\n    if (viewList.length >= 3) {\r\n        try {\r\n            await httpService.put('entity-item-info-update/view', viewList)\r\n            localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        } catch {\r\n            localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n        }\r\n    }\r\n    else localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n}\r\n\r\n\r\nexport const entityItemService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getMiniProfilesByPharse,\r\n    setEntityItemRate\r\n}","const createEventEmitter = () => {\r\n    const listenersMap: ListenersMap = {}\r\n\r\n    return {\r\n        on(evName: string, listener: Listener) {\r\n            listenersMap[evName] = (listenersMap[evName]) ? [...listenersMap[evName], listener] : [listener]\r\n            return () => {\r\n                listenersMap[evName] = listenersMap[evName].filter(func => func !== listener)\r\n            }\r\n        },\r\n        emit(evName: string, data?: unknown) {\r\n            if (!listenersMap[evName]) return\r\n            listenersMap[evName].forEach(listener => listener(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventBus = createEventEmitter()\r\n\r\n\r\ntype ListenersMap = { [key: string]: Listener[] }\r\ntype Listener = (data: unknown) => void\r\n\r\n\r\n\r\nexport const activeClearFilter = (param: string) => {\r\n    eventBus.emit('clear-filter', param)\r\n}\r\n\r\nexport const closeDropdown = () =>{\r\n    eventBus.emit('closeDropdown')\r\n}","export const getMonthName = (month: number, isZeroIndex: boolean = true) => {\r\n    const names = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\n\r\n    return names[isZeroIndex ? month : month - 1]\r\n}","import { getMonthName } from \"./get-month-name\"\r\n\r\nexport const getFormattedDate = (\r\n    date: { day?: number, month?: number, year?: number, timestamp?: number },\r\n    isZeroIndex: boolean = true,\r\n    isLinkAble: boolean = false) => {\r\n\r\n    if (!date) return\r\n\r\n    const { day, month, year } = date\r\n    let value = ''\r\n\r\n    if (isLinkAble) return value\r\n\r\n    if (day) {\r\n        value += day\r\n        if (typeof month === 'number') {\r\n            value += ' ב' + getMonthName(month, isZeroIndex)\r\n            value += ' ' + (getYear(year) || 'בשנה לא ידועה')\r\n        } else {\r\n            value += ' (חודש לא ידוע) ב-' + (getYear(year) || 'בשנה לא ידועה')\r\n        }\r\n        return value\r\n    }\r\n\r\n    if (typeof month === 'number') {\r\n        value += getMonthName(month, isZeroIndex)\r\n\r\n        value += ' ' + getYear(year)\r\n        return value\r\n    }\r\n\r\n    else return getYear(year)\r\n}\r\n\r\n\r\nconst getYear = (year: number | undefined) => {\r\n    return (year) ? year : 'בשנה לא ידועה'\r\n}","export const getFormattedNumber = (number: number) => {\r\n    return new Intl.NumberFormat('he').format(number)\r\n}","import { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntity = (entity: Entity) => {\r\n    store.dispatch({ type: 'updateDisplayEntity', entity })\r\n}\r\n\r\n\r\nexport const clearDisplayEntity = () => {\r\n    store.dispatch({ type: 'clearDisplayEntity' })\r\n}"],"names":["Dropdown","controllerText","Icon","controllerIcon","title","children","useState","isDropdownOpen","setIsDropdownOpen","elDropdown","useRef","useOnClickOutside","useEffect","unsubscribeCloseDropdown","eventBus","className","ref","onClick","ErrorMessage","message","NON_ZERO_DAYS","undefined","NON_ZERO_MONTHS","usePageDataCmp","type","setPageDataCmpType","usePageType","setPageType","FilterSectionToggler","toggleIsFilterSectionOpen","isFilterSectionOpen","window","scrollTo","top","behavior","SortDropdown","sorts","setIsLoading","params","URL","location","href","searchParams","navigate","useNavigate","navigateNewSort","search","toString","replaceAll","getIsSortOptionActive","key","order","get","BiSort","map","sort","set","onSelectSort","id","delete","OptionsList","filters","primaryTextSearch","find","filter","shouldRenderFiltersToggle","length","debouncedPrimarySearchCallback","useDebouncedCallback","str","param","placeholder","initialValue","searchCallback","ActiveFilterPreview","text","setText","filterType","activeFilterChipTexts","plainValue","valueLength","split","range","minRange","maxRange","booleanValue","dateValue","part","getFormattedDate","day","month","year","replace","activeClearFilter","ActiveFilterList","possibleFilters","activeFilters","setActiveFilters","activeFilter","BranchMultiSelectFilterbyPreview","branch","isActive","toggleActiveBranch","_id","symbol","asset","displayName","name","display","src","require","alt","BranchMultiSelectFilterbyList","filterParam","debouncedSetIsLoading","browseableBranchesIds","useSelector","state","userStateModule","user","branchesFromParams","useMemo","initialBranchesIdsState","activeBranchesIds","setActiveBranchesIds","debouncedNavigateToNewActiveBranches","newActiveBranches","newActiveBranchesForParam","join","unsubscribeClearFilter","onBranchClick","branchId","branchesIds","getIsActiveBranch","activeBranchId","newActiveBranchesIds","slice","push","BRANCHES","includes","BranchMultiSelectFilterby","CheckboxFilter","value","setValue","debouncedNavigateNewSearch","newValue","onSetValue","JSON","parse","getIsActive","option","YEARS","i","Date","getFullYear","TYPE_NAMES","INITIAL_VALUE","DateFilter","setType","date","setDate","debouncedNavigateToNewPick","activeDate","onSelectDate","prevDate","typeFromParam","valueFromParam","onChange","ev","target","idx","AiFillCaretDown","typeName","Thumb","props","style","Track","values","min","max","background","getTrackBackground","colors","getColors","rtl","Slider","manipulatedValues","rangeProps","Range","step","renderTrack","renderThumb","index","isDragged","NumberFilter","setValues","debouncedNavigateToNewActiveRange","activeValues","newValues","onSetType","TextFilter","DynamicFilterby","basicProps","FilterbyBuilder","UNITS","hour","minute","second","FORMATTER","Intl","RelativeTimeFormat","numeric","DisplayBranchesIconByIds","ids","branches","branchService","primaryBranchSymbol","primaryBranchDisplayName","shouldRenderAdditionalBranchList","branchesNameList","ListFormat","format","SETTING","dots","speed","customPaging","ImageSlider","images","fallbackImgUrl","image","imageUrl","SquareEntityPreview","amount","item","isLike","setIsLike","totalImageCount","miniImages","ICON_TYPE_MAP","FillHeartIcon","fillHeart","OutlineHeartIcon","outlineHeart","ViewIcon","view","RateIcon","rate","EditIcon","edit","relatedInfo","entityInfo","itemInfo","history","relativePastTime","fromDate","toDate","elapsedTime","getTime","unit","Math","abs","round","getRelativePastTime","lastEditDate","to","preventDefault","branchIds","getFormattedNumber","size","avg","raterCount","totalEditCount","DynamicEntityPreview","PlusIcon","EntityList","entity","items","listPageInfo","previewType","thumbnail","path","EntityPortal","userPrefBranchesFilter","setItems","isLoading","errorMessage","setErrorMessage","innerWidth","setIsFilterSectionOpen","fetchItems","entityItemService","setTimeout","errorHandler","updateDisplayEntity","clearDisplayEntity","useOnWindowResize","icon","listTitle","titleAdditionalCmp","FilterbyBuilderProps","entityDisplayName","openGraph","isSticky","additionalCmp","appTitle","openGraphTitle","pageDescription","description","short","openGraphDescription","pathname","useLocation","ENTITIES_LIST","getById","getByIds","mappedBranches","forEach","localStorageService","localStorage","getItem","setItem","stringify","STORAGE_KEY","query","dbName","archiveState","httpService","isPageAction","res","_handleEntityItemView","remove","save","savedItem","getMiniProfilesByPharse","pharse","setEntityItemRate","entityName","ratePayload","viewList","Array","isArray","entityItemId","listenersMap","on","evName","listener","func","emit","data","createEventEmitter","getMonthName","isZeroIndex","names","isLinkAble","getYear","number","NumberFormat","store"],"sourceRoot":""}