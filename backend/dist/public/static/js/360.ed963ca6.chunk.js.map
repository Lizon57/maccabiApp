{"version":3,"file":"static/js/360.ed963ca6.chunk.js","mappings":"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","sources":["components/common/dropdown/dropdown.tsx","components/common/error-message/error-message.tsx","hooks/pages/use-page-data-cmp.ts","hooks/pages/use-page-type.ts","services/util/get-formatted-list.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/item-title.tsx","services/util/get-formatted-durations.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-info-list/simple-info-list-preview.tsx","services/util/should-display-value.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-info-list/simple-info-list-list.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-profile/simple-profile.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/categories-entity-items/categories-entity-items-preview.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/categories-entity-items/categories-entity-items-list.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/dynamic-head-cmp.tsx","components/entities/details/article-head-cmp/page-head-cmp-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/category-list/category-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/image-gallery/image-gallery-preview.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/image-gallery/image-gallery-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/dynamic-additional-content-cmp.tsx","components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list.tsx","components/common/bread-crumbs/bread-crumbs.tsx","components/entities/details/reate-page/rate-star-preview.tsx","components/entities/details/reate-page/rater.tsx","components/entities/details/reate-page/rate-page.tsx","pages/entities/dynamic-entity-details/article-entity-details.tsx","pages/entities/dynamic-entity-details/page-category-entity-details.tsx","pages/entities/dynamic-entity-details/dynamic-entity-details.tsx","services/local-storage-service.ts","services/entities/entity-item-service.ts","services/event-bus-service.ts","services/util/get-month-name.ts","services/util/get-formatted-date.ts","services/util/get-formatted-number.ts","services/util/get-value-by-dynamic-key.ts","store/action/display-entity-action.ts","store/action/display-entity-item-action.ts","../node_modules/react-uuid/uuid.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nimport { useOnClickOutside } from \"../../../hooks/use-on-click-outside\"\r\n\r\nimport { eventBus } from \"../../../services/event-bus-service\"\r\n\r\n\r\nexport const Dropdown = ({ controllerText, controllerIcon: Icon, title, children }: Props) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen)\r\n\r\n    const elDropdown = useRef<HTMLDivElement>(null)\r\n    useOnClickOutside(elDropdown, () => setIsDropdownOpen(false))\r\n\r\n    useEffect(() => {\r\n        const unsubscribeCloseDropdown = eventBus.on('closeDropdown', () => {\r\n            setIsDropdownOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeCloseDropdown()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"common-cmp--dropdown__container\" ref={elDropdown}>\r\n            <div className=\"toggler\" title={title} onClick={toggleDropdown}>\r\n                {controllerText && <span>{controllerText}</span>}\r\n                {Icon && <Icon />}\r\n            </div>\r\n\r\n            {isDropdownOpen && <div className=\"dropdown-container\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"children-container\">{children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    controllerText?: string\r\n    controllerIcon?: IconType\r\n    title?: string\r\n    children: JSX.Element\r\n}","import { RiEmotionSadFill } from \"react-icons/ri\"\r\n\r\n\r\nexport const ErrorMessage = ({ message = 'שגיאה בטעינת נתונים' }) => {\r\n    return (\r\n        <div className=\"common-cmp--error-message\">\r\n            <div className=\"error-emoji-container\"><RiEmotionSadFill /></div>\r\n\r\n            <div className=\"text\">{message}</div>\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { setPageDataCmpType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageDataCmp = (type: string) => {\r\n    useEffect(() => {\r\n        setPageDataCmpType(type)\r\n\r\n        return () => {\r\n            setPageDataCmpType('social-network-preview')\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useEffect } from 'react'\r\nimport { setPageType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageType = (type: string) => {\r\n    useEffect(() => {\r\n        setPageType(type)\r\n\r\n        return () => {\r\n            setPageType(null)\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","export const getFormattedList = (list: string[], isDisjunction = false) => {\r\n    const formatter = new Intl.ListFormat('he', { type: isDisjunction ? 'disjunction' : 'conjunction' })\r\n    return formatter.format(list)\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../store/store\"\r\n\r\nimport { getFormattedList } from \"../../../../../services/util/get-formatted-list\"\r\n\r\nimport { BasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/basic-entity-details-structure-cmp\"\r\n\r\nimport { MainTitle } from \"../../../../common/main-title/main-title\"\r\n\r\n\r\nexport const ItemTitle = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    let title = cmp.title\r\n    title = title?.replace('RELATED_PROFILE_NAME', (item.relatedInfo?.miniProfile?.displayName || ''))\r\n    title = title?.replace('PAGE_NAME', (item.entityInfo.name.display || ''))\r\n    if (!item.entityInfo.item?.writers?.length) title = title?.replace('מאת BY_WRITERS', '')\r\n    title = title?.replace('BY_WRITERS', (getFormattedList(item.entityInfo.item?.writers || [])))\r\n\r\n\r\n    return (\r\n        <MainTitle text={title || ''} Icon={cmp.Icon} isSticky />\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: BasicEntityDetailsStructureCmp\r\n}","import { Duration } from \"../../models/interfaces/common/duration\"\r\n\r\nimport { getFormattedDate } from \"./get-formatted-date\"\r\n\r\n\r\nconst formatter = new Intl.ListFormat('he')\r\n\r\nexport const getFormattedDurations = (dates: Duration[]) => {\r\n    const datesList = dates.map((date) => {\r\n        let formatedText = ''\r\n\r\n        if (date.start?.day || date.start?.month || date.start?.year) {\r\n            formatedText += `החל מ-${getFormattedDate(date.start, false, false)}`\r\n\r\n            if (date.end?.day || date.end?.month || date.end?.year) {\r\n                formatedText += ` ועד ל-${getFormattedDate(date.end, false, false)}`\r\n            }\r\n        } else if (date.end?.day || date.end?.month || date.end?.year) {\r\n            formatedText += ` עד ל-${getFormattedDate(date.end, false, false)}`\r\n        }\r\n\r\n        return formatedText\r\n    })\r\n    return formatter.format(datesList)\r\n}","import { SimpleListEntityDetailsCmpInfo } from \"../../../../../../models/types/entities/entity-details-structure-cmp/simple-list-entity-details-cmp-info\"\r\nimport { EntityItem } from \"../../../../../../types/entity/entities/entity-item\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\nimport { getFormattedList } from \"../../../../../../services/util/get-formatted-list\"\r\nimport { shouldDisplayValue } from \"../../../../../../services/util/should-display-value\"\r\nimport { getFormattedDate } from \"../../../../../../services/util/get-formatted-date\"\r\nimport { getFormattedDurations } from \"../../../../../../services/util/get-formatted-durations\"\r\n\r\n\r\nexport const SimpleInfoListPreview = ({ info, item }: Props) => {\r\n    let value = getValueByDynamicKey(info.value, item)\r\n    if (!shouldDisplayValue(value) || !value) return <></>\r\n\r\n    const getFormattedText = () => {\r\n        switch (info.type) {\r\n            case 'number':\r\n                return value\r\n\r\n            case 'list':\r\n                if (value.length) return getFormattedList(value)\r\n                break\r\n\r\n            case 'date':\r\n                return getFormattedDate(value, false, false)\r\n\r\n            case 'dates-list':\r\n                return getFormattedDurations(value)\r\n        }\r\n    }\r\n\r\n    if (info.type === 'boolean' && value) return (\r\n        <div className=\"entity-details--simple-info-list-preview__container\">\r\n            <span className=\"value-driven\">{info.title}</span>\r\n        </div>\r\n    )\r\n\r\n    if (info.type === 'boolean-profile-related-combiner' && value) {\r\n        const text = info.title.replace('PROFILE_NAME', item.relatedInfo?.miniProfile?.displayName || '')\r\n        return (\r\n            <div className=\"entity-details--simple-info-list-preview__container\">\r\n                <span className=\"value-driven\">{text}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-info-list-preview__container\">\r\n            <span className=\"title\">{info.title}</span>\r\n            <span className=\"value\">{getFormattedText()}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    info: SimpleListEntityDetailsCmpInfo\r\n    item: EntityItem\r\n}","export const shouldDisplayValue = (value: any) => {\r\n    switch (typeof value) {\r\n        case 'function':\r\n        case 'undefined':\r\n            return false\r\n\r\n        case 'boolean':\r\n        case 'number':\r\n        case 'string':\r\n            return true\r\n\r\n        case 'object':\r\n            if (!value) return false\r\n            if (Array.isArray(value)) {\r\n                if (value.length) return true\r\n                return false\r\n            } else if (Object.keys(value).length) return true\r\n            return false\r\n\r\n        default:\r\n            return true\r\n\r\n    }\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { SimpleListEntityDetailsCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/simple-list-entity-details-cmp\"\r\n\r\nimport { SimpleInfoListPreview } from \"./simple-info-list-preview\"\r\n\r\n\r\nexport const SimpleInfoListList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    if (!cmp.infos?.length) return <></>\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-info-list-list__container\">\r\n            {cmp.infos.map(info => <SimpleInfoListPreview key={info.value} info={info} item={item} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: SimpleListEntityDetailsCmp\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { SimpleProfileEntityDetailsCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/simpe-profile-entity-details-cmp\"\r\nimport { Entity } from \"../../../../../../models/interfaces/entities/entity\"\r\n\r\nimport { RenderByDeviceWidth } from \"../../../../../common/render-by/render-by-device-width\"\r\nimport { ItemTitle } from \"../item-title\"\r\nimport { SimpleInfoListList } from \"../simple-info-list/simple-info-list-list\"\r\n\r\n\r\nexport const SimpleProfile = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const entity: Entity = useSelector((state: RootState) => state.displayEntityModule.entity)\r\n\r\n    const simpleListCmp = { type: '', title: '', infos: cmp.infos }\r\n    const imageName = item.miniImages[0]?.name || entity.entityInfo.image.thumbnail.title\r\n    const imageUrl = item.miniImages[0]?.imageUrl || entity.entityInfo.image.thumbnail.path\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-profile__container\">\r\n            {cmp.title && <ItemTitle cmp={cmp} />}\r\n\r\n            <div className=\"image\" title={imageName} style={{ backgroundImage: `url(${imageUrl})` }}>\r\n                <RenderByDeviceWidth maxDeviceWide=\"mobile\">\r\n                    <img src={imageUrl} alt={imageName} title={imageName} />\r\n                </RenderByDeviceWidth>\r\n            </div>\r\n\r\n            <SimpleInfoListList cmp={simpleListCmp} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: SimpleProfileEntityDetailsCmp\r\n}","import { Link } from \"react-router-dom\"\r\nimport { ENTITIES_LIST } from \"../../../../../../constans/entities-list\"\r\n\r\nimport { PageCategoryRelatedItem } from \"../../../../../../models/types/entities/page-category-related-item\"\r\n\r\nimport { convertCamelCaseToKebabCase } from \"../../../../../../services/util/convert-camel-case-to-kebab-case\"\r\n\r\n\r\nexport const CategoriesEntityItemsPreview = ({ name, items }: Props) => {\r\n    const kebabCaseName = convertCamelCaseToKebabCase(name)\r\n    const entityName = ENTITIES_LIST[kebabCaseName].entityInfo.name.display\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{entityName}</h3>\r\n            <ul>\r\n                {items.map(item => <li key={item.id}>\r\n                    <Link to={`/${item.entityName}/${item.id}`}>{item.displayName}</Link>\r\n                </li>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    name: string\r\n    items: PageCategoryRelatedItem[]\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\nimport { PageCategoryRelatedItem } from \"../../../../../../models/types/entities/page-category-related-item\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\nimport { CategoriesEntityItemsPreview } from \"./categories-entity-items-preview\"\r\n\r\n\r\nexport const CategoriesEntityItemsList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const entityItems = getValueByDynamicKey(cmp.key, item) as PageCategoryRelatedItem[]\r\n\r\n    let title = cmp.title || ''\r\n    title = title.replace('PAGE_NAME', (item.name.display || ''))\r\n\r\n    const entitiesMap = entityItems.reduce((acc: SimpleObj, value: PageCategoryRelatedItem) => {\r\n        const currKey = value.entityName\r\n        if (acc[currKey]) acc[currKey].push(value)\r\n        if (!acc[currKey]) acc[currKey] = [value]\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div className=\"entity-details--categories-entity-list__container\">\r\n            {title && <MainTitle text={title} Icon={cmp.Icon} />}\r\n\r\n            {Object.keys(entitiesMap) &&\r\n                <div className={'pages-list-container' + ((entityItems.length < 9) ? ' small-list' : '')}>\r\n                    {Object.keys(entitiesMap).map(catName => <CategoriesEntityItemsPreview\r\n                        key={catName}\r\n                        name={catName}\r\n                        items={entitiesMap[catName]}\r\n                    />\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n\r\ntype SimpleObj = {\r\n    [key: string]: PageCategoryRelatedItem[]\r\n}","import { EntityDetailsStructureCmp } from \"../../../../../models/combiners/entities/entity-details-structure-cmp\"\r\nimport { SimpleProfileEntityDetailsCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/simpe-profile-entity-details-cmp\"\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { ItemTitle } from \"./item-title\"\r\nimport { SimpleProfile } from \"./simple-profile/simple-profile\"\r\nimport { CategoriesEntityItemsList } from \"./categories-entity-items/categories-entity-items-list\"\r\n\r\n\r\nexport const DynamicHeadCmp = ({ cmp }: Props) => {\r\n    switch (cmp.type) {\r\n        case 'page-title':\r\n            return <ItemTitle cmp={cmp} />\r\n\r\n        case 'simple-profile':\r\n            return <SimpleProfile cmp={cmp as SimpleProfileEntityDetailsCmp} />\r\n\r\n        case 'categories-entity-items':\r\n            return <CategoriesEntityItemsList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: EntityDetailsStructureCmp\r\n}","import { makeId } from \"../../../../services/util/make-id\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../models/combiners/entities/entity-details-structure-cmp\"\r\n\r\nimport { DynamicHeadCmp } from \"./dynamic-head-cmp/dynamic-head-cmp\"\r\n\r\n\r\nexport const PageHeadCmpList = ({ cmps }: Props) => {\r\n    if (!cmps?.length) return null\r\n\r\n    return (\r\n        <>\r\n            {cmps.map(cmp => <DynamicHeadCmp key={makeId()} cmp={cmp} />)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmps?: EntityDetailsStructureCmp[]\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { MiniPageCategory } from \"../../../../../../types/page-category\"\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\n\r\n\r\nexport const CategoryList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const miniCategories = getValueByDynamicKey(cmp.key || '', item) as MiniPageCategory[]\r\n\r\n\r\n    if (!miniCategories?.length) return null\r\n\r\n    return (\r\n        <section className=\"entity-details--category-list-cmp__container\">\r\n            <MainTitle text={cmp.title || 'קטגוריות'} Icon={cmp.Icon} />\r\n\r\n            <div className=\"list-container\">\r\n                {miniCategories.map(({ id, displayName }) => <Link\r\n                    to={`/page-category/${id}`}\r\n                    key={id}\r\n                    className=\"category-preview\"\r\n                >\r\n                    {displayName}\r\n                </Link>)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n","export const ImageGalleryPreview = ({ miniImage }: Props) => {\r\n    const { name, imageUrl } = miniImage\r\n\r\n    return (\r\n        <div className=\"entity-details--image-gallery-cmp__preview-container\" title={name}>\r\n            <div className=\"spacer\"></div>\r\n            <img src={imageUrl} alt={name} />\r\n            <div className=\"spacer\"></div>\r\n\r\n            <div className=\"name\">{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    miniImage: {\r\n        name: string\r\n        imageUrl: string\r\n    }\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\nimport { ImageGalleryPreview } from \"./image-gallery-preview\"\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\n\r\nexport const ImageGalleryList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const miniImages = getValueByDynamicKey(cmp.key || '', item)\r\n\r\n    let { relatedInfo, entityInfo } = useSelector((state: RootState) => state.displayEntityItemModule.item)\r\n    if (!miniImages?.length) return null\r\n\r\n\r\n    let title = cmp.title\r\n    title = title?.replace('RELATED_PROFILE_NAME', (relatedInfo?.miniProfile?.displayName || ''))\r\n    title = title?.replace('PAGE_NAME', (entityInfo?.name?.display || item.name?.display || ''))\r\n\r\n\r\n    return (\r\n        <section className=\"entity-details--image-gallery-cmp__gallery-container\">\r\n            <MainTitle text={title || ''} Icon={cmp.Icon} />\r\n\r\n            <div className=\"gallery-container\">\r\n                {(miniImages as MiniImages).map(miniImage => <ImageGalleryPreview\r\n                    key={miniImage.id}\r\n                    miniImage={miniImage}\r\n                />)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n\r\n\r\ntype MiniImages = {\r\n    id: string\r\n    name: string\r\n    imageUrl: string\r\n}[]","import { ICON_TYPE_MAP } from \"../../../../../constans/icon-type-map\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../../models/combiners/entities/entity-details-structure-cmp\"\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { CategoryList } from \"./category-list/category-list\"\r\nimport { ImageGalleryList } from \"./image-gallery/image-gallery-list\"\r\n\r\n\r\nexport const DynamicAdditionalContentCmp = ({ cmp }: Props) => {\r\n    const iconMap = ICON_TYPE_MAP.entityItemDefault\r\n\r\n    switch (cmp.type) {\r\n        case 'image-gallery':\r\n            cmp.Icon = iconMap.imageGallery\r\n            return <ImageGalleryList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        case 'category-list':\r\n            cmp.Icon = iconMap.categoryList\r\n            return <CategoryList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: EntityDetailsStructureCmp\r\n}","import { makeId } from \"../../../../services/util/make-id\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../models/combiners/entities/entity-details-structure-cmp\"\r\n\r\nimport { DynamicAdditionalContentCmp } from \"./dynamic-additional-content-cmp/dynamic-additional-content-cmp\"\r\n\r\n\r\nexport const ArticleAdditionalContentCmpList = ({ cmps }: Props) => {\r\n    if (!cmps?.length) return null\r\n\r\n    return (\r\n        <>\r\n            {cmps.map(cmp => <DynamicAdditionalContentCmp key={makeId()} cmp={cmp} />)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmps?: EntityDetailsStructureCmp[]\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { makeId } from \"../../../services/util/make-id\"\r\n\r\nimport { BiChevronLeft } from \"react-icons/bi\"\r\nimport { AiFillHome } from \"react-icons/ai\"\r\n\r\n\r\nexport const BreadCrumbs = ({ path }: Props) => {\r\n    return (\r\n        <div className=\"common-cmp--bread-crumbs__container\">\r\n            <Link to=\"/\" title=\"עמוד ראשי\"><AiFillHome size={14} /></Link>\r\n            {path.map(({ text, link }, idx) => <span className=\"wrapper\" key={makeId()}>\r\n                {link && <span title={text}><Link to={'/' + link}>{text}</Link></span>}\r\n                {!link && <span title={text}>{text}</span>}\r\n                {(idx + 1 !== path.length) && <span><BiChevronLeft /></span>}\r\n            </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    path: {\r\n        text: string,\r\n        link?: string\r\n    }[]\r\n}","import uuid from 'react-uuid'\r\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\"\r\n\r\n\r\nexport const RateStarPreview = ({ filledStar }: Props) => {\r\n    const filledStars = new Array(filledStar).fill(true)\r\n    const unfilledStars = new Array(5 - filledStar).fill(true)\r\n\r\n    return (\r\n        <div className=\"entity-details--rate-star-preview__container\">\r\n            {filledStars.map(_ => <span key={uuid()} className=\"filled\">\r\n                <AiFillStar />\r\n            </span>)}\r\n            {unfilledStars.map(_ => <span key={uuid()}><AiOutlineStar /></span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filledStar: number\r\n}","import uuid from 'react-uuid'\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../store/store\"\r\nimport { insertAppMessage } from '../../../../store/action/app-state-action'\r\nimport { updateDisplayEntityItem } from '../../../../store/action/display-entity-item-action'\r\n\r\nimport { entityItemService } from '../../../../services/entities/entity-item-service'\r\nimport { getFormattedNumber } from \"../../../../services/util/get-formatted-number\"\r\nimport { eventBus } from '../../../../services/event-bus-service'\r\n\r\nimport { EntityItem } from '../../../../models/types/entities/item/entity-item'\r\n\r\nimport { RateStarPreview } from \"./rate-star-preview\"\r\n\r\n\r\nexport const Rater = () => {\r\n    const { user } = useSelector((state: RootState) => state.userStateModule)\r\n    const { entity } = useSelector((state: RootState) => state.displayEntityModule)\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    const onRatePage = async (idx: number) => {\r\n        eventBus.emit('closeDropdown')\r\n\r\n        const rate = 5 - idx\r\n        try {\r\n            const newRateData = await entityItemService.setEntityItemRate(entity.name, item._id, rate)\r\n            const updatedItem = structuredClone(item) as EntityItem\r\n            updatedItem.itemInfo.rate = newRateData\r\n            updateDisplayEntityItem(updatedItem)\r\n            insertAppMessage({ text: `דירוג הדף \"${item?.entityInfo.name.display}\" בוצע בהצלחה`, title: 'דירוג הצליח', type: 'success' })\r\n        } catch (err) {\r\n            insertAppMessage({ text: `דירוג הדף \"${item?.entityInfo.name.display}\" נכשל`, title: 'דירוג נכשל', type: 'fail' })\r\n        } finally {\r\n        }\r\n    }\r\n\r\n\r\n    const isUserActualRate = (rate: number) => {\r\n        if (item.itemInfo.rate.rateMap[user._id] === 5 - rate) return true\r\n        return false\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--rater__container\">\r\n            <div className=\"stars-list\">\r\n                {[5, 4, 3, 2, 1].map((starNum, idx) => <div\r\n                    key={uuid()}\r\n                    onClick={() => onRatePage(idx)}\r\n                >\r\n                    <RateStarPreview filledStar={starNum} />\r\n                    {isUserActualRate(idx) && <span className=\"actual-rate-indicator\">(הבחירה שלי)</span>}\r\n                </div>\r\n                )}\r\n            </div>\r\n\r\n            <span className=\"divider\"></span>\r\n\r\n            <div className=\"avg-indicator\">{getFormattedNumber(item.itemInfo.rate.raterCount)} מדרגים</div>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\"\r\nimport { AiFillStar } from \"react-icons/ai\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../store/store\"\r\n\r\nimport { Dropdown } from \"../../../common/dropdown/dropdown\"\r\nimport { Rater } from \"./rater\"\r\n\r\n\r\nexport const RatePage = () => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const { user } = useSelector((state: RootState) => state.userStateModule)\r\n\r\n\r\n    const isRatedBefore = !!item.itemInfo.rate.avg\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--rate-page__container\">\r\n            {user?._id\r\n                ? <Dropdown\r\n                    controllerText={isRatedBefore ? item.itemInfo.rate.avg : 'היה הראשון לדרג!'}\r\n                    controllerIcon={isRatedBefore ? AiFillStar : undefined}\r\n                    title={`דרג עמוד`}\r\n                    children={<Rater />}\r\n                />\r\n                : <Link to=\"/login-signup\">התחבר כדי לדרג</Link>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nimport { useLocation, useParams } from \"react-router-dom\"\r\nimport { usePageDataCmp } from \"../../../hooks/pages/use-page-data-cmp\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store/store\"\r\nimport { updateDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\n\r\nimport { entityItemService } from \"../../../services/entities/entity-item-service\"\r\nimport { errorHandler } from \"../../../services/util/error-handler\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../models/types/entities/item/entity-item\"\r\n\r\nimport { PageHeadCmpList } from \"../../../components/entities/details/article-head-cmp/page-head-cmp-list\"\r\nimport { ArticleAdditionalContentCmpList } from \"../../../components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list\"\r\nimport { SeoImplement } from \"../../../components/common/seo-implement/seo-implement\"\r\nimport { BreadCrumbs } from \"../../../components/common/bread-crumbs/bread-crumbs\"\r\nimport { RatePage } from \"../../../components/entities/details/reate-page/rate-page\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\nimport { Loader } from \"../../../components/common/loader/loader\"\r\n\r\n\r\nexport const ArticleEntityDetails = ({ entity }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n\r\n    const { id: entityItemId } = useParams()\r\n\r\n    usePageDataCmp('entity-item-toc')\r\n\r\n    const path = useLocation().pathname.split('/')[1] || ''\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoading || !entityItemId) return\r\n\r\n        const loadItem = async () => {\r\n            try {\r\n                const shouldUpdatePageView = !(entity.detailsPageInfo.type === 'article')\r\n                const item = await entityItemService.getById(entity.name, entityItemId, shouldUpdatePageView) as EntityItem\r\n                updateDisplayEntityItem(item)\r\n            } catch ({ message }) {\r\n                const errorMessage = errorHandler(message, false)\r\n                setErrorMessage(errorMessage)\r\n            }\r\n            finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        loadItem()\r\n    }, [isLoading, entity, entityItemId])\r\n\r\n\r\n    if (isLoading || !entityItemId || !item) return <Loader />\r\n    if (errorMessage) return <ErrorMessage message={errorMessage} />\r\n\r\n    const { detailsPageInfo: { structure }, entityInfo: { name: { display: entityName } } } = entity\r\n    const { display: itemName } = item.entityInfo.name\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--article-entity-details__container\">\r\n                <div className=\"head-info-container\">\r\n                    <BreadCrumbs path={[{ text: entityName, link: path }, { text: itemName }]} />\r\n                    <RatePage />\r\n                </div>\r\n\r\n                {!!structure?.head?.length &&\r\n                    <div className=\"primary-content\">\r\n                        <PageHeadCmpList cmps={structure?.head} />\r\n                    </div>\r\n                }\r\n\r\n                {!!structure?.additional?.length &&\r\n                    <div className=\"additional-content\">\r\n                        <ArticleAdditionalContentCmpList cmps={structure?.additional} />\r\n                    </div>\r\n                }\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={`${itemName} (${entity.entityInfo.name.display})`}\r\n                openGraphTitle={itemName}\r\n                openGraphDescription=\"כל מה שאוהד מכבי צריך לדעת\"\r\n                openGraphImage={item?.miniImages?.[0]?.imageUrl || ''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store/store\"\r\nimport { updateDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\n\r\nimport { entityItemService } from \"../../../services/entities/entity-item-service\"\r\nimport { errorHandler } from \"../../../services/util/error-handler\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../models/types/entities/item/entity-item\"\r\n\r\nimport { Loader } from \"../../../components/common/loader/loader\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\nimport { PageHeadCmpList } from \"../../../components/entities/details/article-head-cmp/page-head-cmp-list\"\r\nimport { ArticleAdditionalContentCmpList } from \"../../../components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list\"\r\nimport { SeoImplement } from \"../../../components/common/seo-implement/seo-implement\"\r\n\r\n\r\nexport const PageCategoryEntityDetails = ({ entity }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n\r\n    const { id: entityItemId } = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoading || !entityItemId) return\r\n\r\n        const loadItem = async () => {\r\n            try {\r\n                const shouldUpdatePageView = !(entity.detailsPageInfo.type === 'article')\r\n                const item = await entityItemService.getById(entity.name, entityItemId, shouldUpdatePageView) as EntityItem\r\n                updateDisplayEntityItem(item)\r\n            } catch ({ message }) {\r\n                const errorMessage = errorHandler(message, false)\r\n                setErrorMessage(errorMessage)\r\n            }\r\n            finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        loadItem()\r\n    }, [isLoading, entity, entityItemId])\r\n\r\n\r\n    if (isLoading || !entityItemId || !item) return <Loader />\r\n    if (errorMessage) return <ErrorMessage message={errorMessage} />\r\n\r\n    const { detailsPageInfo: { structure } } = entity\r\n    const { display: itemName } = item.name\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--page-category-entity-details__container\">\r\n                {!!structure?.head?.length &&\r\n                    <div className=\"primary-content\">\r\n                        <PageHeadCmpList cmps={structure?.head} />\r\n                    </div>\r\n                }\r\n\r\n                {!!structure?.additional?.length &&\r\n                    <div className=\"additional-content\">\r\n                        <ArticleAdditionalContentCmpList cmps={structure?.additional} />\r\n                    </div>\r\n                }\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={`${itemName} (${entity.entityInfo.name.display})`}\r\n                openGraphTitle={itemName}\r\n                openGraphDescription={`כל מה שקשור ב-${itemName} באתר מכביפדיה`}\r\n            // openGraphImage={item?.miniImages?.[0]?.imageUrl || ''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nimport { clearDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\nimport { clearDisplayEntity, updateDisplayEntity } from \"../../../store/action/display-entity-action\"\r\n\r\nimport { usePageType } from \"../../../hooks/pages/use-page-type\"\r\n\r\nimport { ENTITIES_LIST } from \"../../../constans/entities-list\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\n\r\nimport { ArticleEntityDetails } from \"./article-entity-details\"\r\nimport { PageCategoryEntityDetails } from \"./page-category-entity-details\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\n\r\n\r\nconst EntityDetailsWrapper = () => {\r\n    let { pathname } = useLocation()\r\n    pathname = pathname.split('/')[1]\r\n    const entity = ENTITIES_LIST[pathname]\r\n\r\n    return (\r\n        <DynamicEntityDetails entity={entity} />\r\n    )\r\n}\r\n\r\n\r\nconst DynamicEntityDetails = ({ entity }: Props) => {\r\n    usePageType('entity-item-details')\r\n\r\n    useEffect(() => {\r\n        updateDisplayEntity(entity)\r\n\r\n        return () => {\r\n            clearDisplayEntity()\r\n            clearDisplayEntityItem()\r\n        }\r\n    }, []) // eslint-disable-line\r\n\r\n\r\n\r\n    const basicProps = { entity }\r\n    switch (entity.detailsPageInfo.type) {\r\n        case 'article':\r\n            return <ArticleEntityDetails {...basicProps} />\r\n\r\n        case 'page-category':\r\n            return <PageCategoryEntityDetails {...basicProps} />\r\n\r\n        default:\r\n            return <ErrorMessage message=\"שגיאת מערכת, אנא נסה שנית מאוחר יותר\" />\r\n    }\r\n}\r\n\r\nexport default EntityDetailsWrapper\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","const readFromStorage = (key: string) => {\r\n    const value = localStorage.getItem(key)\r\n    if (!value) return\r\n    return JSON.parse(value)\r\n}\r\n\r\nconst saveToStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\n\r\nexport const localStorageService = {\r\n    readFromStorage,\r\n    saveToStorage,\r\n}","import { httpService } from \"../http-service\"\r\nimport { localStorageService } from \"../local-storage-service\"\r\n\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { EntityItemViewDetails } from \"../../models/types/entities/entity-item-view-details\"\r\n\r\n\r\nconst STORAGE_KEY = 'ViewedPages'\r\n\r\n\r\nconst query = async (dbName: string, params: URLSearchParams, archiveState?: string) => {\r\n    if (archiveState) params.set('fArchived', archiveState + '')\r\n\r\n    try {\r\n        return await httpService.get(dbName, params) as EntityItem[]\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst getById = async (dbName: string, id: string, isPageAction = false) => {\r\n    try {\r\n        const res = await httpService.get(`${dbName}/${id}`) as EntityItem\r\n\r\n        if (!isPageAction) _handleEntityItemView(dbName, id)\r\n        return res\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst remove = async (dbName: string, id: string) => {\r\n    try {\r\n        await httpService.delete(`${dbName}/${id}`)\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst save = async (dbName: string, item: EntityItem) => {\r\n    try {\r\n        const savedItem = item._id ? await httpService.put(`${dbName}/${item._id}`, item) : await httpService.post(`${dbName}`, item)\r\n        return savedItem\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst getMiniProfilesByPharse = async (pharse: string = '') => {\r\n    try {\r\n        return await httpService.get('profile/getMiniProfilesByPharse', { pharse })\r\n    } catch (err) {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst setEntityItemRate = async (entityName: string, id: string, rate: number) => {\r\n    try {\r\n        const ratePayload = { id, entityName, rate }\r\n        return await httpService.put('entity-item-info-update/rate', { ratePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst _handleEntityItemView = async (entityName: string, id: string) => {\r\n    let viewList = localStorageService.readFromStorage(STORAGE_KEY) as EntityItemViewDetails[]\r\n    if (!Array.isArray(viewList)) {\r\n        localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        viewList = []\r\n    }\r\n\r\n    viewList.push({ entityName, entityItemId: id })\r\n\r\n    if (viewList.length >= 3) {\r\n        try {\r\n            await httpService.put('entity-item-info-update/view', viewList)\r\n            localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        } catch {\r\n            localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n        }\r\n    }\r\n    else localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n}\r\n\r\n\r\nexport const entityItemService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getMiniProfilesByPharse,\r\n    setEntityItemRate\r\n}","const createEventEmitter = () => {\r\n    const listenersMap: ListenersMap = {}\r\n\r\n    return {\r\n        on(evName: string, listener: Listener) {\r\n            listenersMap[evName] = (listenersMap[evName]) ? [...listenersMap[evName], listener] : [listener]\r\n            return () => {\r\n                listenersMap[evName] = listenersMap[evName].filter(func => func !== listener)\r\n            }\r\n        },\r\n        emit(evName: string, data?: unknown) {\r\n            if (!listenersMap[evName]) return\r\n            listenersMap[evName].forEach(listener => listener(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventBus = createEventEmitter()\r\n\r\n\r\ntype ListenersMap = { [key: string]: Listener[] }\r\ntype Listener = (data: unknown) => void\r\n\r\n\r\n\r\nexport const activeClearFilter = (param: string) => {\r\n    eventBus.emit('clear-filter', param)\r\n}\r\n\r\nexport const closeDropdown = () =>{\r\n    eventBus.emit('closeDropdown')\r\n}","export const getMonthName = (month: number, isZeroIndex: boolean = true) => {\r\n    const names = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\n\r\n    return names[isZeroIndex ? month : month - 1]\r\n}","import { getMonthName } from \"./get-month-name\"\r\n\r\nexport const getFormattedDate = (\r\n    date: { day?: number, month?: number, year?: number, timestamp?: number },\r\n    isZeroIndex: boolean = true,\r\n    isLinkAble: boolean = false) => {\r\n\r\n    if (!date) return\r\n\r\n    const { day, month, year } = date\r\n    let value = ''\r\n\r\n    if (isLinkAble) return value\r\n\r\n    if (day) {\r\n        value += day\r\n        if (typeof month === 'number') {\r\n            value += ' ב' + getMonthName(month, isZeroIndex)\r\n            value += ' ' + (getYear(year) || 'בשנה לא ידועה')\r\n        } else {\r\n            value += ' (חודש לא ידוע) ב-' + (getYear(year) || 'בשנה לא ידועה')\r\n        }\r\n        return value\r\n    }\r\n\r\n    if (typeof month === 'number') {\r\n        value += getMonthName(month, isZeroIndex)\r\n\r\n        value += ' ' + getYear(year)\r\n        return value\r\n    }\r\n\r\n    else return getYear(year)\r\n}\r\n\r\n\r\nconst getYear = (year: number | undefined) => {\r\n    return (year) ? year : 'בשנה לא ידועה'\r\n}","export const getFormattedNumber = (number: number) => {\r\n    return new Intl.NumberFormat('he').format(number)\r\n}","export const getValueByDynamicKey = (key: string, item: Object) => {\r\n    const keyPath = key.split('.')\r\n    let actualValue: any = item\r\n\r\n    for (let key of keyPath) {\r\n        if (!actualValue) return undefined\r\n        actualValue = actualValue[key as any]\r\n    }\r\n\r\n\r\n    return actualValue\r\n}","import { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntity = (entity: Entity) => {\r\n    store.dispatch({ type: 'updateDisplayEntity', entity })\r\n}\r\n\r\n\r\nexport const clearDisplayEntity = () => {\r\n    store.dispatch({ type: 'clearDisplayEntity' })\r\n}","import { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntityItem = (editedItem: EntityItem) => {\r\n    store.dispatch({ type: 'updateDisplayEntityItem', editedItem })\r\n}\r\n\r\n\r\nexport const clearDisplayEntityItem = () => {\r\n    store.dispatch({ type: 'clearDisplayEntityItem' })\r\n}","/**\nA function that returns a universally unique identifier (uuid).  \nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n@returns `string` : 32 character uuid (see example)\n*/\nfunction uuid() {\n\tconst hashTable = [\n\t\t\"a\",\n\t\t\"b\",\n\t\t\"c\",\n\t\t\"d\",\n\t\t\"e\",\n\t\t\"f\",\n\t\t\"0\",\n\t\t\"1\",\n\t\t\"2\",\n\t\t\"3\",\n\t\t\"4\",\n\t\t\"5\",\n\t\t\"6\",\n\t\t\"7\",\n\t\t\"8\",\n\t\t\"9\",\n\t];\n\tlet uuid = [];\n\tfor (let i = 0; i < 36; i++) {\n\t\tif (i === 8 || i === 13 || i === 18 || i === 23) {\n\t\t\tuuid[i] = \"-\";\n\t\t} else {\n\t\t\tuuid[i] = hashTable[Math.ceil(Math.random() * hashTable.length - 1)];\n\t\t}\n\t}\n\treturn uuid.join(\"\");\n}\n\nmodule.exports = uuid;\n"],"names":["Dropdown","controllerText","Icon","controllerIcon","title","children","useState","isDropdownOpen","setIsDropdownOpen","elDropdown","useRef","useOnClickOutside","useEffect","unsubscribeCloseDropdown","eventBus","className","ref","onClick","ErrorMessage","message","usePageDataCmp","type","setPageDataCmpType","usePageType","setPageType","getFormattedList","list","isDisjunction","formatter","Intl","ListFormat","format","ItemTitle","cmp","item","useSelector","state","displayEntityItemModule","replace","relatedInfo","miniProfile","displayName","entityInfo","name","display","writers","length","text","isSticky","SimpleInfoListPreview","info","value","getValueByDynamicKey","Array","isArray","Object","keys","shouldDisplayValue","getFormattedDate","dates","datesList","map","date","formatedText","start","day","month","year","end","getFormattedDurations","getFormattedText","SimpleInfoListList","infos","SimpleProfile","entity","displayEntityModule","simpleListCmp","imageName","miniImages","image","thumbnail","imageUrl","path","style","backgroundImage","maxDeviceWide","src","alt","CategoriesEntityItemsPreview","items","kebabCaseName","convertCamelCaseToKebabCase","entityName","ENTITIES_LIST","to","id","CategoriesEntityItemsList","entityItems","key","entitiesMap","reduce","acc","currKey","push","catName","DynamicHeadCmp","PageHeadCmpList","cmps","makeId","CategoryList","miniCategories","ImageGalleryPreview","miniImage","ImageGalleryList","DynamicAdditionalContentCmp","iconMap","ICON_TYPE_MAP","imageGallery","categoryList","ArticleAdditionalContentCmpList","BreadCrumbs","size","idx","link","RateStarPreview","filledStar","filledStars","fill","unfilledStars","_","uuid","Rater","user","userStateModule","onRatePage","rate","entityItemService","_id","newRateData","updatedItem","structuredClone","itemInfo","updateDisplayEntityItem","insertAppMessage","starNum","rateMap","getFormattedNumber","raterCount","RatePage","isRatedBefore","avg","AiFillStar","undefined","ArticleEntityDetails","isLoading","setIsLoading","errorMessage","setErrorMessage","entityItemId","useParams","useLocation","pathname","split","loadItem","shouldUpdatePageView","detailsPageInfo","errorHandler","structure","itemName","head","additional","appTitle","openGraphTitle","openGraphDescription","openGraphImage","PageCategoryEntityDetails","DynamicEntityDetails","updateDisplayEntity","clearDisplayEntity","clearDisplayEntityItem","basicProps","localStorageService","localStorage","getItem","JSON","parse","setItem","stringify","STORAGE_KEY","query","dbName","params","archiveState","set","httpService","getById","isPageAction","res","_handleEntityItemView","remove","save","savedItem","getMiniProfilesByPharse","pharse","setEntityItemRate","ratePayload","viewList","listenersMap","on","evName","listener","filter","func","emit","data","forEach","createEventEmitter","activeClearFilter","param","getMonthName","isZeroIndex","names","isLinkAble","getYear","number","NumberFormat","keyPath","actualValue","store","editedItem","module","exports","hashTable","i","Math","ceil","random","join"],"sourceRoot":""}