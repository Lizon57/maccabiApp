{"version":3,"file":"static/js/455.9a66b35d.chunk.js","mappings":"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","sources":["components/common/text-toggler/text-toggler.tsx","pages/user/login-signup.tsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { FixedLengthArray } from \"../../../models/types/typescript/fixed-length-array\"\r\n\r\n\r\nexport const TextToggler = ({ options, onToggleCallBack }: Props) => {\r\n    const [isFirstOptionActive, setIsFirstOptionActive] = useState(true)\r\n\r\n    const onTogglerClick = () => {\r\n        onToggleCallBack && onToggleCallBack()\r\n        setIsFirstOptionActive(!isFirstOptionActive)\r\n    }\r\n\r\n    return (\r\n        <div className=\"common-cmp--text_toggler__container\" onClick={onTogglerClick}>\r\n            <input type=\"checkbox\" />\r\n            <span className={classNames('option', { active: isFirstOptionActive })}>{options[0]}</span>\r\n            <span className={classNames('option', { active: !isFirstOptionActive })}>{options[1]}</span>\r\n            <span className=\"indicator\"></span>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    options: FixedLengthArray<string, 2>\r\n    onToggleCallBack: () => void\r\n}","import { useState } from \"react\"\r\nimport classNames from \"classnames\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useGoogleLogin } from '@react-oauth/google'\r\nimport { BiUserCheck } from \"react-icons/bi\"\r\nimport { BsGoogle } from \"react-icons/bs\"\r\nimport { AiFillEye, AiFillEyeInvisible, AiOutlineUserAdd } from \"react-icons/ai\"\r\nimport signupLoginImage from \"../../assets/images/app-layout/signup-login.jpg\"\r\n\r\nimport { login } from \"../../store/action/user-action\"\r\nimport { insertAppMessage } from \"../../store/action/app-state-action\"\r\n\r\nimport { User } from \"../../models/interfaces/user/user\"\r\n\r\nimport { userService } from \"../../services/user/user-service\"\r\n\r\nimport { MainTitle } from \"../../components/common/main-title/main-title\"\r\nimport { TextToggler } from \"../../components/common/text-toggler/text-toggler\"\r\n\r\n\r\nconst LoginSignup = () => {\r\n    const [isSignupPage, setIsSignupPage] = useState(false)\r\n    const [isRevealPassword, setIsRevealPassword] = useState(false)\r\n    const [credential, setCredential] = useState({ email: '', password: '' })\r\n    const [error, setError] = useState('')\r\n    const navigate = useNavigate()\r\n\r\n    const onToggleIsSignupPage = () => setIsSignupPage(!isSignupPage)\r\n\r\n    const handleInputChange = (name: string, value: string) => {\r\n        setCredential(prevState => ({ ...prevState, [name]: value }))\r\n    }\r\n\r\n\r\n    const onGoogleAuthSuccess = async (tokenCode: string) => {\r\n        try {\r\n            const user = await userService.googleSignupLogin(tokenCode)\r\n            onLoginSuccess(user)\r\n        } catch (err) {\r\n            setError('תקלה זמנית בחיבור לחשבון, אנא נסה שנית')\r\n        }\r\n    }\r\n\r\n    const onGoogleLogin = useGoogleLogin({\r\n        onSuccess: ({ code }) => onGoogleAuthSuccess(code),\r\n        flow: 'auth-code',\r\n    })\r\n\r\n\r\n    const onSubmitForm = (ev: React.FormEvent<HTMLFormElement>) => {\r\n        ev.preventDefault()\r\n\r\n        const { email, password } = credential\r\n        if (!email || !password) return\r\n\r\n        onSignupLogin(credential)\r\n    }\r\n\r\n\r\n    const onSignupLogin = async (credential: Credential) => {\r\n        try {\r\n            const user: User = isSignupPage ? await userService.signup(credential) : await userService.login(credential)\r\n            if (user._id) onLoginSuccess(user)\r\n        } catch ({ message }) {\r\n            setError(message as string)\r\n        }\r\n    }\r\n\r\n\r\n    const onLoginSuccess = (user: User) => {\r\n        login(user)\r\n        navigate('/')\r\n        if (isSignupPage) insertAppMessage({ text: 'נרשמת בהצלחה!', title: 'ברוך הבא לאתר!', type: 'success' })\r\n        else insertAppMessage({ text: 'התחברת בהצלחה!', title: 'ברוך הבא לאתר!', type: 'success' })\r\n    }\r\n\r\n\r\n    return (\r\n        <main className=\"user-pages--login-signup__container\">\r\n            <div className=\"layout\">\r\n                <img src={signupLoginImage} alt={isSignupPage ? 'הצטרף למכביפדיה!' : 'התחבר למשתמש!'} />\r\n\r\n                <div className=\"content-container\">\r\n                    <TextToggler options={['התחבר', 'הירשם']} onToggleCallBack={onToggleIsSignupPage} />\r\n\r\n                    <MainTitle\r\n                        text={isSignupPage ? 'הירשם למכביפדיה' : 'ברוך השב למכביפדיה!'}\r\n                        Icon={isSignupPage ? AiOutlineUserAdd : BiUserCheck}\r\n                    />\r\n\r\n                    <form className=\"form-container\" onSubmit={onSubmitForm}>\r\n                        <div className=\"field\">\r\n                            <label>דואר אלקטרוני</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"דואר אלקטרוני\"\r\n                                value={credential.email}\r\n                                className={classNames({ pristine: credential.email })}\r\n                                onChange={({ currentTarget: { name, value } }) => handleInputChange(name, value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>סיסמה</label>\r\n                            <input\r\n                                type={isRevealPassword ? 'text' : 'password'}\r\n                                name=\"password\"\r\n                                placeholder=\"סיסמה\"\r\n                                className={credential.password ? 'pristine' : ''}\r\n                                value={credential.password}\r\n                                onChange={({ currentTarget: { name, value } }) => handleInputChange(name, value)}\r\n                            />\r\n                            {credential.password && <span className=\"show-password-icon\" onClick={() => setIsRevealPassword(!isRevealPassword)}>\r\n                                {isRevealPassword ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                            </span>}\r\n                        </div>\r\n\r\n                        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                        <button className=\"form-login-button\">{isSignupPage ? 'הירשם' : 'התחבר'}</button>\r\n                    </form>\r\n\r\n                    <span className=\"divider\"></span>\r\n\r\n                    <button className=\"google-login-button\" onClick={() => onGoogleLogin()}>\r\n                        {isSignupPage ? 'הירשם' : 'התחבר'} באמצעות <BsGoogle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </main >\r\n    )\r\n}\r\n\r\nexport default LoginSignup\r\n\r\n\r\ntype Credential = {\r\n    email: string\r\n    password: string\r\n}"],"names":["TextToggler","_ref","options","onToggleCallBack","_useState","useState","_useState2","_slicedToArray","isFirstOptionActive","setIsFirstOptionActive","_jsxs","className","onClick","children","_jsx","type","classNames","active","isSignupPage","setIsSignupPage","_useState3","_useState4","isRevealPassword","setIsRevealPassword","_useState5","email","password","_useState6","credential","setCredential","_useState7","_useState8","error","setError","navigate","useNavigate","handleInputChange","name","value","prevState","_objectSpread","_defineProperty","onGoogleAuthSuccess","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tokenCode","user","wrap","_context","prev","next","userService","sent","onLoginSuccess","t0","stop","_x","apply","arguments","onGoogleLogin","useGoogleLogin","onSuccess","_ref2","code","flow","onSignupLogin","_ref3","_callee2","message","_context2","_id","t1","_x2","login","insertAppMessage","text","title","src","signupLoginImage","alt","MainTitle","Icon","AiOutlineUserAdd","BiUserCheck","onSubmit","ev","preventDefault","placeholder","pristine","onChange","_ref5","_ref5$currentTarget","currentTarget","_ref6","_ref6$currentTarget","AiFillEyeInvisible","AiFillEye","BsGoogle"],"sourceRoot":""}