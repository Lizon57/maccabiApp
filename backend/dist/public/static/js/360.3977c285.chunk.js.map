{"version":3,"file":"static/js/360.3977c285.chunk.js","mappings":"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","sources":["components/common/dropdown/dropdown.tsx","components/common/error-message/error-message.tsx","hooks/pages/use-page-data-cmp.ts","hooks/pages/use-page-type.ts","services/util/get-formatted-list.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/item-title.tsx","services/util/get-formatted-durations.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-info-list/simple-info-list-preview.tsx","services/util/should-display-value.ts","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-info-list/simple-info-list-list.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/simple-profile/simple-profile.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/categories-entity-items/categories-entity-items-preview.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/categories-entity-items/categories-entity-items-list.tsx","components/entities/details/article-head-cmp/dynamic-head-cmp/dynamic-head-cmp.tsx","components/entities/details/article-head-cmp/page-head-cmp-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/category-list/category-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/image-gallery/image-gallery-preview.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/image-gallery/image-gallery-list.tsx","components/entities/details/article-additional-content-cmp/dynamic-additional-content-cmp/dynamic-additional-content-cmp.tsx","components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list.tsx","components/common/bread-crumbs/bread-crumbs.tsx","components/entities/details/reate-page/rate-star-preview.tsx","components/entities/details/reate-page/rater.tsx","components/entities/details/reate-page/rate-page.tsx","pages/entities/dynamic-entity-details/article-entity-details.tsx","pages/entities/dynamic-entity-details/page-category-entity-details.tsx","pages/entities/dynamic-entity-details/dynamic-entity-details.tsx","services/local-storage-service.ts","services/entities/entity-item-service.ts","services/event-bus-service.ts","services/util/get-month-name.ts","services/util/get-formatted-date.ts","services/util/get-formatted-number.ts","services/util/get-value-by-dynamic-key.ts","store/action/display-entity-action.ts","store/action/display-entity-item-action.ts"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nimport { useOnClickOutside } from \"../../../hooks/use-on-click-outside\"\r\n\r\nimport { eventBus } from \"../../../services/event-bus-service\"\r\n\r\n\r\nexport const Dropdown = ({ controllerText, controllerIcon: Icon, title, children }: Props) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen)\r\n\r\n    const elDropdown = useRef<HTMLDivElement>(null)\r\n    useOnClickOutside(elDropdown, () => setIsDropdownOpen(false))\r\n\r\n    useEffect(() => {\r\n        const unsubscribeCloseDropdown = eventBus.on('closeDropdown', () => {\r\n            setIsDropdownOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeCloseDropdown()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"common-cmp--dropdown__container\" ref={elDropdown}>\r\n            <div className=\"toggler\" title={title} onClick={toggleDropdown}>\r\n                {controllerText && <span>{controllerText}</span>}\r\n                {Icon && <Icon />}\r\n            </div>\r\n\r\n            {isDropdownOpen && <div className=\"dropdown-container\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"children-container\">{children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    controllerText?: string\r\n    controllerIcon?: IconType\r\n    title?: string\r\n    children: JSX.Element\r\n}","import { RiEmotionSadFill } from \"react-icons/ri\"\r\n\r\n\r\nexport const ErrorMessage = ({ message = 'שגיאה בטעינת נתונים' }) => {\r\n    return (\r\n        <div className=\"common-cmp--error-message\">\r\n            <div className=\"error-emoji-container\"><RiEmotionSadFill /></div>\r\n\r\n            <div className=\"text\">{message}</div>\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { setPageDataCmpType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageDataCmp = (type: string) => {\r\n    useEffect(() => {\r\n        setPageDataCmpType(type)\r\n\r\n        return () => {\r\n            setPageDataCmpType('join-us')\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","import { useEffect } from 'react'\r\nimport { setPageType } from '../../store/action/app-layout-action'\r\n\r\n\r\nexport const usePageType = (type: string) => {\r\n    useEffect(() => {\r\n        setPageType(type)\r\n\r\n        return () => {\r\n            setPageType(null)\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n}","export const getFormattedList = (list: string[], isDisjunction = false) => {\r\n    const formatter = new Intl.ListFormat('he', { type: isDisjunction ? 'disjunction' : 'conjunction' })\r\n    return formatter.format(list)\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../store/store\"\r\n\r\nimport { getFormattedList } from \"../../../../../services/util/get-formatted-list\"\r\n\r\nimport { BasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/basic-entity-details-structure-cmp\"\r\n\r\nimport { MainTitle } from \"../../../../common/main-title/main-title\"\r\n\r\n\r\nexport const ItemTitle = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    let title = cmp.title\r\n    title = title?.replace('RELATED_PROFILE_NAME', (item.relatedInfo?.miniProfile?.displayName || ''))\r\n    title = title?.replace('PAGE_NAME', (item.entityInfo.name.display || ''))\r\n    if (!item.entityInfo.item?.writers?.length) title = title?.replace('מאת BY_WRITERS', '')\r\n    title = title?.replace('BY_WRITERS', (getFormattedList(item.entityInfo.item?.writers || [])))\r\n\r\n\r\n    return (\r\n        <MainTitle text={title || ''} Icon={cmp.Icon} isSticky />\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: BasicEntityDetailsStructureCmp\r\n}","import { Duration } from \"../../models/interfaces/common/duration\"\r\n\r\nimport { getFormattedDate } from \"./get-formatted-date\"\r\n\r\n\r\nconst formatter = new Intl.ListFormat('he')\r\n\r\nexport const getFormattedDurations = (dates: Duration[]) => {\r\n    const datesList = dates.map((date) => {\r\n        let formatedText = ''\r\n\r\n        if (date.start?.day || date.start?.month || date.start?.year) {\r\n            formatedText += `החל מ-${getFormattedDate(date.start, false, false)}`\r\n\r\n            if (date.end?.day || date.end?.month || date.end?.year) {\r\n                formatedText += ` ועד ל-${getFormattedDate(date.end, false, false)}`\r\n            }\r\n        } else if (date.end?.day || date.end?.month || date.end?.year) {\r\n            formatedText += ` עד ל-${getFormattedDate(date.end, false, false)}`\r\n        }\r\n\r\n        return formatedText\r\n    })\r\n    return formatter.format(datesList)\r\n}","import { SimpleListEntityDetailsCmpInfo } from \"../../../../../../models/types/entities/entity-details-structure-cmp/simple-list-entity-details-cmp-info\"\r\nimport { EntityItem } from \"../../../../../../types/entity/entities/entity-item\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\nimport { getFormattedList } from \"../../../../../../services/util/get-formatted-list\"\r\nimport { shouldDisplayValue } from \"../../../../../../services/util/should-display-value\"\r\nimport { getFormattedDate } from \"../../../../../../services/util/get-formatted-date\"\r\nimport { getFormattedDurations } from \"../../../../../../services/util/get-formatted-durations\"\r\n\r\n\r\nexport const SimpleInfoListPreview = ({ info, item }: Props) => {\r\n    let value = getValueByDynamicKey(info.value, item)\r\n    if (!shouldDisplayValue(value) || !value) return <></>\r\n\r\n    const getFormattedText = () => {\r\n        switch (info.type) {\r\n            case 'number':\r\n                return value\r\n\r\n            case 'list':\r\n                if (value.length) return getFormattedList(value)\r\n                break\r\n\r\n            case 'date':\r\n                return getFormattedDate(value, false, false)\r\n\r\n            case 'dates-list':\r\n                return getFormattedDurations(value)\r\n        }\r\n    }\r\n\r\n    if (info.type === 'boolean' && value) return (\r\n        <div className=\"entity-details--simple-info-list-preview__container\">\r\n            <span className=\"value-driven\">{info.title}</span>\r\n        </div>\r\n    )\r\n\r\n    if (info.type === 'boolean-profile-related-combiner' && value) {\r\n        const text = info.title.replace('PROFILE_NAME', item.relatedInfo?.miniProfile?.displayName || '')\r\n        return (\r\n            <div className=\"entity-details--simple-info-list-preview__container\">\r\n                <span className=\"value-driven\">{text}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-info-list-preview__container\">\r\n            <span className=\"title\">{info.title}</span>\r\n            <span className=\"value\">{getFormattedText()}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    info: SimpleListEntityDetailsCmpInfo\r\n    item: EntityItem\r\n}","export const shouldDisplayValue = (value: any) => {\r\n    switch (typeof value) {\r\n        case 'function':\r\n        case 'undefined':\r\n            return false\r\n\r\n        case 'boolean':\r\n        case 'number':\r\n        case 'string':\r\n            return true\r\n\r\n        case 'object':\r\n            if (!value) return false\r\n            if (Array.isArray(value)) {\r\n                if (value.length) return true\r\n                return false\r\n            } else if (Object.keys(value).length) return true\r\n            return false\r\n\r\n        default:\r\n            return true\r\n\r\n    }\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { SimpleListEntityDetailsCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/simple-list-entity-details-cmp\"\r\n\r\nimport { SimpleInfoListPreview } from \"./simple-info-list-preview\"\r\n\r\n\r\nexport const SimpleInfoListList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    if (!cmp.infos?.length) return <></>\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-info-list-list__container\">\r\n            {cmp.infos.map(info => <SimpleInfoListPreview key={info.value} info={info} item={item} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: SimpleListEntityDetailsCmp\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { SimpleProfileEntityDetailsCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/simpe-profile-entity-details-cmp\"\r\nimport { Entity } from \"../../../../../../models/interfaces/entities/entity\"\r\n\r\nimport { RenderByDeviceWidth } from \"../../../../../common/render-by/render-by-device-width\"\r\nimport { ItemTitle } from \"../item-title\"\r\nimport { SimpleInfoListList } from \"../simple-info-list/simple-info-list-list\"\r\n\r\n\r\nexport const SimpleProfile = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const entity: Entity = useSelector((state: RootState) => state.displayEntityModule.entity)\r\n\r\n    const simpleListCmp = { type: '', title: '', infos: cmp.infos }\r\n    const imageName = item.miniImages[0]?.name || entity.entityInfo.image.thumbnail.title\r\n    const imageUrl = item.miniImages[0]?.imageUrl || entity.entityInfo.image.thumbnail.path\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--simple-profile__container\">\r\n            {cmp.title && <ItemTitle cmp={cmp} />}\r\n\r\n            <div className=\"image\" title={imageName} style={{ backgroundImage: `url(${imageUrl})` }}>\r\n                <RenderByDeviceWidth maxDeviceWide=\"mobile\">\r\n                    <img src={imageUrl} alt={imageName} title={imageName} />\r\n                </RenderByDeviceWidth>\r\n            </div>\r\n\r\n            <SimpleInfoListList cmp={simpleListCmp} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: SimpleProfileEntityDetailsCmp\r\n}","import { Link } from \"react-router-dom\"\r\nimport { ENTITIES_LIST } from \"../../../../../../constans/entities-list\"\r\n\r\nimport { PageCategoryRelatedItem } from \"../../../../../../models/types/entities/page-category-related-item\"\r\n\r\nimport { convertCamelCaseToKebabCase } from \"../../../../../../services/util/convert-camel-case-to-kebab-case\"\r\n\r\n\r\nexport const CategoriesEntityItemsPreview = ({ name, items }: Props) => {\r\n    const kebabCaseName = convertCamelCaseToKebabCase(name)\r\n    const entityName = ENTITIES_LIST[kebabCaseName].entityInfo.name.display\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{entityName}</h3>\r\n            <ul>\r\n                {items.map(item => <li key={item.id}>\r\n                    <Link to={`/${item.entityName}/${item.id}`}>{item.displayName}</Link>\r\n                </li>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    name: string\r\n    items: PageCategoryRelatedItem[]\r\n}","import classNames from \"classnames\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\nimport { PageCategoryRelatedItem } from \"../../../../../../models/types/entities/page-category-related-item\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\nimport { CategoriesEntityItemsPreview } from \"./categories-entity-items-preview\"\r\n\r\n\r\nexport const CategoriesEntityItemsList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const entityItems = getValueByDynamicKey(cmp.key, item) as PageCategoryRelatedItem[]\r\n\r\n    let title = cmp.title || ''\r\n    title = title.replace('PAGE_NAME', (item.name.display || ''))\r\n\r\n    const entitiesMap = entityItems.reduce((acc: SimpleObj, value: PageCategoryRelatedItem) => {\r\n        const currKey = value.entityName\r\n        if (acc[currKey]) acc[currKey].push(value)\r\n        if (!acc[currKey]) acc[currKey] = [value]\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div className=\"entity-details--categories-entity-list__container\">\r\n            {title && <MainTitle text={title} Icon={cmp.Icon} />}\r\n\r\n            {Object.keys(entitiesMap) &&\r\n                <div className={classNames('pages-list-container', { 'small-list': (entityItems.length < 9) })}>\r\n                    {Object.keys(entitiesMap).map(catName => <CategoriesEntityItemsPreview\r\n                        key={catName}\r\n                        name={catName}\r\n                        items={entitiesMap[catName]}\r\n                    />\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n\r\ntype SimpleObj = {\r\n    [key: string]: PageCategoryRelatedItem[]\r\n}","import { EntityDetailsStructureCmp } from \"../../../../../models/combiners/entities/entity-details-structure-cmp\"\r\nimport { SimpleProfileEntityDetailsCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/simpe-profile-entity-details-cmp\"\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { ItemTitle } from \"./item-title\"\r\nimport { SimpleProfile } from \"./simple-profile/simple-profile\"\r\nimport { CategoriesEntityItemsList } from \"./categories-entity-items/categories-entity-items-list\"\r\n\r\n\r\nexport const DynamicHeadCmp = ({ cmp }: Props) => {\r\n    switch (cmp.type) {\r\n        case 'page-title':\r\n            return <ItemTitle cmp={cmp} />\r\n\r\n        case 'simple-profile':\r\n            return <SimpleProfile cmp={cmp as SimpleProfileEntityDetailsCmp} />\r\n\r\n        case 'categories-entity-items':\r\n            return <CategoriesEntityItemsList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        default:\r\n            return <></>\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: EntityDetailsStructureCmp\r\n}","import { makeId } from \"../../../../services/util/make-id\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../models/combiners/entities/entity-details-structure-cmp\"\r\n\r\nimport { DynamicHeadCmp } from \"./dynamic-head-cmp/dynamic-head-cmp\"\r\n\r\n\r\nexport const PageHeadCmpList = ({ cmps }: Props) => {\r\n    if (!cmps?.length) return null\r\n\r\n    return (\r\n        <>\r\n            {cmps.map(cmp => <DynamicHeadCmp key={makeId()} cmp={cmp} />)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmps?: EntityDetailsStructureCmp[]\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { MiniPageCategory } from \"../../../../../../types/page-category\"\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\n\r\n\r\nexport const CategoryList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const miniCategories = getValueByDynamicKey(cmp.key || '', item) as MiniPageCategory[]\r\n\r\n\r\n    if (!miniCategories?.length) return null\r\n\r\n    return (\r\n        <section className=\"entity-details--category-list-cmp__container\">\r\n            <MainTitle text={cmp.title || 'קטגוריות'} Icon={cmp.Icon} />\r\n\r\n            <div className=\"list-container\">\r\n                {miniCategories.map(({ id, displayName }) => <Link\r\n                    to={`/page-category/${id}`}\r\n                    key={id}\r\n                    className=\"category-preview\"\r\n                >\r\n                    {displayName}\r\n                </Link>)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n","export const ImageGalleryPreview = ({ miniImage }: Props) => {\r\n    const { name, imageUrl } = miniImage\r\n\r\n    return (\r\n        <div className=\"entity-details--image-gallery-cmp__preview-container\" title={name}>\r\n            <div className=\"spacer\"></div>\r\n            <img src={imageUrl} alt={name} />\r\n            <div className=\"spacer\"></div>\r\n\r\n            <div className=\"name\">{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    miniImage: {\r\n        name: string\r\n        imageUrl: string\r\n    }\r\n}","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../../../store/store\"\r\n\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { MainTitle } from \"../../../../../common/main-title/main-title\"\r\nimport { ImageGalleryPreview } from \"./image-gallery-preview\"\r\nimport { getValueByDynamicKey } from \"../../../../../../services/util/get-value-by-dynamic-key\"\r\n\r\n\r\nexport const ImageGalleryList = ({ cmp }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const miniImages = getValueByDynamicKey(cmp.key || '', item)\r\n\r\n    let { relatedInfo, entityInfo } = useSelector((state: RootState) => state.displayEntityItemModule.item)\r\n    if (!miniImages?.length) return null\r\n\r\n\r\n    let title = cmp.title\r\n    title = title?.replace('RELATED_PROFILE_NAME', (relatedInfo?.miniProfile?.displayName || ''))\r\n    title = title?.replace('PAGE_NAME', (entityInfo?.name?.display || item.name?.display || ''))\r\n\r\n\r\n    return (\r\n        <section className=\"entity-details--image-gallery-cmp__gallery-container\">\r\n            <MainTitle text={title || ''} Icon={cmp.Icon} />\r\n\r\n            <div className=\"gallery-container\">\r\n                {(miniImages as MiniImages).map(miniImage => <ImageGalleryPreview\r\n                    key={miniImage.id}\r\n                    miniImage={miniImage}\r\n                />)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: KeySpecifyBasicEntityDetailsStructureCmp\r\n}\r\n\r\n\r\ntype MiniImages = {\r\n    id: string\r\n    name: string\r\n    imageUrl: string\r\n}[]","import { ICON_TYPE_MAP } from \"../../../../../constans/icon-type-map\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../../models/combiners/entities/entity-details-structure-cmp\"\r\nimport { KeySpecifyBasicEntityDetailsStructureCmp } from \"../../../../../models/interfaces/entities/entity-details-structure-cmp/key-specify-basic-entity-details-structure-cmp\"\r\n\r\nimport { CategoryList } from \"./category-list/category-list\"\r\nimport { ImageGalleryList } from \"./image-gallery/image-gallery-list\"\r\n\r\n\r\nexport const DynamicAdditionalContentCmp = ({ cmp }: Props) => {\r\n    const iconMap = ICON_TYPE_MAP.entityItemDefault\r\n\r\n    switch (cmp.type) {\r\n        case 'image-gallery':\r\n            cmp.Icon = iconMap.imageGallery\r\n            return <ImageGalleryList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        case 'category-list':\r\n            cmp.Icon = iconMap.categoryList\r\n            return <CategoryList cmp={cmp as KeySpecifyBasicEntityDetailsStructureCmp} />\r\n\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmp: EntityDetailsStructureCmp\r\n}","import { makeId } from \"../../../../services/util/make-id\"\r\n\r\nimport { EntityDetailsStructureCmp } from \"../../../../models/combiners/entities/entity-details-structure-cmp\"\r\n\r\nimport { DynamicAdditionalContentCmp } from \"./dynamic-additional-content-cmp/dynamic-additional-content-cmp\"\r\n\r\n\r\nexport const ArticleAdditionalContentCmpList = ({ cmps }: Props) => {\r\n    if (!cmps?.length) return null\r\n\r\n    return (\r\n        <>\r\n            {cmps.map(cmp => <DynamicAdditionalContentCmp key={makeId()} cmp={cmp} />)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    cmps?: EntityDetailsStructureCmp[]\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { makeId } from \"../../../services/util/make-id\"\r\n\r\nimport { BiChevronLeft } from \"react-icons/bi\"\r\nimport { AiFillHome } from \"react-icons/ai\"\r\n\r\n\r\nexport const BreadCrumbs = ({ path }: Props) => {\r\n    return (\r\n        <div className=\"common-cmp--bread-crumbs__container\">\r\n            <Link to=\"/\" title=\"עמוד ראשי\"><AiFillHome size={14} /></Link>\r\n            {path.map(({ text, link }, idx) => <span className=\"wrapper\" key={makeId()}>\r\n                {link && <span title={text}><Link to={'/' + link}>{text}</Link></span>}\r\n                {!link && <span title={text}>{text}</span>}\r\n                {(idx + 1 !== path.length) && <span><BiChevronLeft /></span>}\r\n            </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    path: {\r\n        text: string,\r\n        link?: string\r\n    }[]\r\n}","import uuid from 'react-uuid'\r\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\"\r\n\r\n\r\nexport const RateStarPreview = ({ filledStar }: Props) => {\r\n    const filledStars = new Array(filledStar).fill(true)\r\n    const unfilledStars = new Array(5 - filledStar).fill(true)\r\n\r\n    return (\r\n        <div className=\"entity-details--rate-star-preview__container\">\r\n            {filledStars.map(_ => <span key={uuid()} className=\"filled\">\r\n                <AiFillStar />\r\n            </span>)}\r\n            {unfilledStars.map(_ => <span key={uuid()}><AiOutlineStar /></span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    filledStar: number\r\n}","import uuid from 'react-uuid'\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../store/store\"\r\nimport { insertAppMessage } from '../../../../store/action/app-state-action'\r\nimport { updateDisplayEntityItem } from '../../../../store/action/display-entity-item-action'\r\n\r\nimport { entityItemService } from '../../../../services/entities/entity-item-service'\r\nimport { getFormattedNumber } from \"../../../../services/util/get-formatted-number\"\r\nimport { eventBus } from '../../../../services/event-bus-service'\r\n\r\nimport { EntityItem } from '../../../../models/types/entities/item/entity-item'\r\n\r\nimport { RateStarPreview } from \"./rate-star-preview\"\r\n\r\n\r\nexport const Rater = () => {\r\n    const { user } = useSelector((state: RootState) => state.userStateModule)\r\n    const { entity } = useSelector((state: RootState) => state.displayEntityModule)\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n\r\n\r\n    const onRatePage = async (idx: number) => {\r\n        eventBus.emit('closeDropdown')\r\n\r\n        const rate = 5 - idx\r\n        try {\r\n            const newRateData = await entityItemService.setEntityItemRate(entity.name, item._id, rate)\r\n            const updatedItem = structuredClone(item) as EntityItem\r\n            updatedItem.itemInfo.rate = newRateData\r\n            updateDisplayEntityItem(updatedItem)\r\n            insertAppMessage({ text: `דירוג הדף \"${item?.entityInfo.name.display}\" בוצע בהצלחה`, title: 'דירוג הצליח', type: 'success' })\r\n        } catch (err) {\r\n            insertAppMessage({ text: `דירוג הדף \"${item?.entityInfo.name.display}\" נכשל`, title: 'דירוג נכשל', type: 'fail' })\r\n        } \r\n    }\r\n\r\n\r\n    const isUserActualRate = (rate: number) => {\r\n        if (item.itemInfo.rate.rateMap[user._id] === 5 - rate) return true\r\n        return false\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--rater__container\">\r\n            <div className=\"stars-list\">\r\n                {[5, 4, 3, 2, 1].map((starNum, idx) => <div\r\n                    key={uuid()}\r\n                    onClick={() => onRatePage(idx)}\r\n                >\r\n                    <RateStarPreview filledStar={starNum} />\r\n                    {isUserActualRate(idx) && <span className=\"actual-rate-indicator\">(הבחירה שלי)</span>}\r\n                </div>\r\n                )}\r\n            </div>\r\n\r\n            <span className=\"divider\"></span>\r\n\r\n            <div className=\"avg-indicator\">{getFormattedNumber(item.itemInfo.rate.raterCount)} מדרגים</div>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\"\r\nimport { AiFillStar } from \"react-icons/ai\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../../store/store\"\r\n\r\nimport { Dropdown } from \"../../../common/dropdown/dropdown\"\r\nimport { Rater } from \"./rater\"\r\n\r\n\r\nexport const RatePage = () => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const { user } = useSelector((state: RootState) => state.userStateModule)\r\n\r\n\r\n    const isRatedBefore = !!item.itemInfo.rate.avg\r\n\r\n\r\n    return (\r\n        <div className=\"entity-details--rate-page__container\">\r\n            {user?._id\r\n                ? <Dropdown\r\n                    controllerText={isRatedBefore ? item.itemInfo.rate.avg : 'דרג עכשיו!'}\r\n                    controllerIcon={isRatedBefore ? AiFillStar : undefined}\r\n                    title={`דרג עמוד`}\r\n                    children={<Rater />}\r\n                />\r\n                : <Link to=\"/login-signup\">התחבר כדי לדרג</Link>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nimport { useLocation, useParams } from \"react-router-dom\"\r\nimport { usePageDataCmp } from \"../../../hooks/pages/use-page-data-cmp\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store/store\"\r\nimport { updateDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\n\r\nimport { entityItemService } from \"../../../services/entities/entity-item-service\"\r\nimport { errorHandler } from \"../../../services/util/error-handler\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../models/types/entities/item/entity-item\"\r\n\r\nimport { PageHeadCmpList } from \"../../../components/entities/details/article-head-cmp/page-head-cmp-list\"\r\nimport { ArticleAdditionalContentCmpList } from \"../../../components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list\"\r\nimport { SeoImplement } from \"../../../components/common/seo-implement/seo-implement\"\r\nimport { BreadCrumbs } from \"../../../components/common/bread-crumbs/bread-crumbs\"\r\nimport { RatePage } from \"../../../components/entities/details/reate-page/rate-page\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\nimport { Loader } from \"../../../components/common/loader/loader\"\r\n\r\n\r\nexport const ArticleEntityDetails = ({ entity }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n\r\n    const { id: entityItemId } = useParams()\r\n\r\n    usePageDataCmp('entity-item-toc')\r\n\r\n    const path = useLocation().pathname.split('/')[1] || ''\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoading || !entityItemId) return\r\n\r\n        const loadItem = async () => {\r\n            try {\r\n                const shouldUpdatePageView = !(entity.detailsPageInfo.type === 'article')\r\n                const item = await entityItemService.getById(entity.name, entityItemId, shouldUpdatePageView) as EntityItem\r\n                updateDisplayEntityItem(item)\r\n            } catch ({ message }) {\r\n                const errorMessage = errorHandler(message, false)\r\n                setErrorMessage(errorMessage)\r\n            }\r\n            finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        loadItem()\r\n    }, [isLoading, entity, entityItemId])\r\n\r\n\r\n    if (isLoading || !entityItemId || !item) return <Loader />\r\n    if (errorMessage) return <ErrorMessage message={errorMessage} />\r\n\r\n    const { detailsPageInfo: { structure }, entityInfo: { name: { display: entityName } } } = entity\r\n    const { display: itemName } = item.entityInfo.name\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--article-entity-details__container\">\r\n                <div className=\"head-info-container\">\r\n                    <BreadCrumbs path={[{ text: entityName, link: path }, { text: itemName }]} />\r\n                    <RatePage />\r\n                </div>\r\n\r\n                {!!structure?.head?.length &&\r\n                    <div className=\"primary-content\">\r\n                        <PageHeadCmpList cmps={structure?.head} />\r\n                    </div>\r\n                }\r\n\r\n                {!!structure?.additional?.length &&\r\n                    <div className=\"additional-content\">\r\n                        <ArticleAdditionalContentCmpList cmps={structure?.additional} />\r\n                    </div>\r\n                }\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={`${itemName} (${entity.entityInfo.name.display})`}\r\n                openGraphTitle={itemName}\r\n                openGraphDescription=\"כל מה שאוהד מכבי צריך לדעת\"\r\n                // openGraphImage={item?.miniImages?.[0]?.imageUrl || ''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store/store\"\r\nimport { updateDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\n\r\nimport { entityItemService } from \"../../../services/entities/entity-item-service\"\r\nimport { errorHandler } from \"../../../services/util/error-handler\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\nimport { EntityItem } from \"../../../models/types/entities/item/entity-item\"\r\n\r\nimport { Loader } from \"../../../components/common/loader/loader\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\nimport { PageHeadCmpList } from \"../../../components/entities/details/article-head-cmp/page-head-cmp-list\"\r\nimport { ArticleAdditionalContentCmpList } from \"../../../components/entities/details/article-additional-content-cmp/page-additional-content-cmp-list\"\r\nimport { SeoImplement } from \"../../../components/common/seo-implement/seo-implement\"\r\n\r\n\r\nexport const PageCategoryEntityDetails = ({ entity }: Props) => {\r\n    const { item } = useSelector((state: RootState) => state.displayEntityItemModule)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState<string>()\r\n\r\n    const { id: entityItemId } = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoading || !entityItemId) return\r\n\r\n        const loadItem = async () => {\r\n            try {\r\n                const shouldUpdatePageView = !(entity.detailsPageInfo.type === 'article')\r\n                const item = await entityItemService.getById(entity.name, entityItemId, shouldUpdatePageView) as EntityItem\r\n                updateDisplayEntityItem(item)\r\n            } catch ({ message }) {\r\n                const errorMessage = errorHandler(message, false)\r\n                setErrorMessage(errorMessage)\r\n            }\r\n            finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        loadItem()\r\n    }, [isLoading, entity, entityItemId])\r\n\r\n\r\n    if (isLoading || !entityItemId || !item) return <Loader />\r\n    if (errorMessage) return <ErrorMessage message={errorMessage} />\r\n\r\n    const { detailsPageInfo: { structure } } = entity\r\n    const { display: itemName } = item.name\r\n\r\n    return (\r\n        <>\r\n            <section className=\"entities-pages--page-category-entity-details__container\">\r\n                {!!structure?.head?.length &&\r\n                    <div className=\"primary-content\">\r\n                        <PageHeadCmpList cmps={structure?.head} />\r\n                    </div>\r\n                }\r\n\r\n                {!!structure?.additional?.length &&\r\n                    <div className=\"additional-content\">\r\n                        <ArticleAdditionalContentCmpList cmps={structure?.additional} />\r\n                    </div>\r\n                }\r\n            </section>\r\n\r\n            <SeoImplement\r\n                appTitle={`${itemName} (${entity.entityInfo.name.display})`}\r\n                openGraphTitle={itemName}\r\n                openGraphDescription={`כל מה שקשור ב-${itemName} באתר מכביפדיה`}\r\n                openGraphImage={item?.miniImages?.[0]?.imageUrl || ''}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","import { useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nimport { clearDisplayEntityItem } from \"../../../store/action/display-entity-item-action\"\r\nimport { clearDisplayEntity, updateDisplayEntity } from \"../../../store/action/display-entity-action\"\r\n\r\nimport { usePageType } from \"../../../hooks/pages/use-page-type\"\r\n\r\nimport { ENTITIES_LIST } from \"../../../constans/entities-list\"\r\n\r\nimport { Entity } from \"../../../models/interfaces/entities/entity\"\r\n\r\nimport { ArticleEntityDetails } from \"./article-entity-details\"\r\nimport { PageCategoryEntityDetails } from \"./page-category-entity-details\"\r\nimport { ErrorMessage } from \"../../../components/common/error-message/error-message\"\r\n\r\n\r\nconst EntityDetailsWrapper = () => {\r\n    let { pathname } = useLocation()\r\n    pathname = pathname.split('/')[1]\r\n    const entity = ENTITIES_LIST[pathname]\r\n\r\n    return (\r\n        <DynamicEntityDetails entity={entity} />\r\n    )\r\n}\r\n\r\n\r\nconst DynamicEntityDetails = ({ entity }: Props) => {\r\n    usePageType('entity-item-details')\r\n\r\n    useEffect(() => {\r\n        updateDisplayEntity(entity)\r\n\r\n        return () => {\r\n            clearDisplayEntity()\r\n            clearDisplayEntityItem()\r\n        }\r\n    }, []) // eslint-disable-line\r\n\r\n\r\n\r\n    const basicProps = { entity }\r\n    switch (entity.detailsPageInfo.type) {\r\n        case 'article':\r\n            return <ArticleEntityDetails {...basicProps} />\r\n\r\n        case 'page-category':\r\n            return <PageCategoryEntityDetails {...basicProps} />\r\n\r\n        default:\r\n            return <ErrorMessage message=\"שגיאת מערכת, אנא נסה שנית מאוחר יותר\" />\r\n    }\r\n}\r\n\r\nexport default EntityDetailsWrapper\r\n\r\n\r\ntype Props = {\r\n    entity: Entity\r\n}","const readFromStorage = (key: string) => {\r\n    const value = localStorage.getItem(key)\r\n    if (!value) return\r\n    return JSON.parse(value)\r\n}\r\n\r\nconst saveToStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\n\r\nexport const localStorageService = {\r\n    readFromStorage,\r\n    saveToStorage,\r\n}","import { httpService } from \"../http-service\"\r\nimport { localStorageService } from \"../local-storage-service\"\r\n\r\nimport { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { EntityItemViewDetails } from \"../../models/types/entities/entity-item-view-details\"\r\n\r\n\r\nconst STORAGE_KEY = 'ViewedPages'\r\n\r\n\r\nconst query = async (dbName: string, params: URLSearchParams, archiveState?: string) => {\r\n    if (archiveState) params.set('fArchived', archiveState + '')\r\n\r\n    try {\r\n        return await httpService.get(dbName, params) as EntityItem[]\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst getById = async (dbName: string, id: string, isPageAction = false) => {\r\n    try {\r\n        const res = await httpService.get(`${dbName}/${id}`) as EntityItem\r\n\r\n        if (!isPageAction) _handleEntityItemView(dbName, id)\r\n        return res\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst remove = async (dbName: string, id: string) => {\r\n    try {\r\n        await httpService.delete(`${dbName}/${id}`)\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst save = async (dbName: string, item: EntityItem) => {\r\n    try {\r\n        const savedItem = item._id ? await httpService.put(`${dbName}/${item._id}`, item) : await httpService.post(`${dbName}`, item)\r\n        return savedItem\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst getMiniProfilesByPharse = async (pharse: string = '') => {\r\n    try {\r\n        return await httpService.get('profile/getMiniProfilesByPharse', { pharse })\r\n    } catch (err) {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst setEntityItemRate = async (entityName: string, id: string, rate: number) => {\r\n    try {\r\n        const ratePayload = { id, entityName, rate }\r\n        return await httpService.put('entity-item-info-update/rate', { ratePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst setEntityItemLikeState = async (entityName: string, id: string, isLike: boolean) => {\r\n    try {\r\n        const likeStatePayload = { id, entityName, isLike }\r\n        return await httpService.put('entity-item-info-update/like', { likeStatePayload })\r\n    }\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\nconst _handleEntityItemView = async (entityName: string, id: string) => {\r\n    let viewList = localStorageService.readFromStorage(STORAGE_KEY) as EntityItemViewDetails[]\r\n    if (!Array.isArray(viewList)) {\r\n        localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        viewList = []\r\n    }\r\n\r\n    viewList.push({ entityName, entityItemId: id })\r\n\r\n    if (viewList.length >= 3) {\r\n        try {\r\n            await httpService.put('entity-item-info-update/view', viewList)\r\n            localStorageService.saveToStorage(STORAGE_KEY, [])\r\n        } catch {\r\n            localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n        }\r\n    }\r\n    else localStorageService.saveToStorage(STORAGE_KEY, viewList)\r\n}\r\n\r\n\r\nexport const entityItemService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getMiniProfilesByPharse,\r\n    setEntityItemRate,\r\n    setEntityItemLikeState\r\n}","const createEventEmitter = () => {\r\n    const listenersMap: ListenersMap = {}\r\n\r\n    return {\r\n        on(evName: string, listener: Listener) {\r\n            listenersMap[evName] = (listenersMap[evName]) ? [...listenersMap[evName], listener] : [listener]\r\n            return () => {\r\n                listenersMap[evName] = listenersMap[evName].filter(func => func !== listener)\r\n            }\r\n        },\r\n        emit(evName: string, data?: unknown) {\r\n            if (!listenersMap[evName]) return\r\n            listenersMap[evName].forEach(listener => listener(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventBus = createEventEmitter()\r\n\r\n\r\ntype ListenersMap = { [key: string]: Listener[] }\r\ntype Listener = (data: unknown) => void\r\n\r\n\r\n\r\nexport const activeClearFilter = (param: string) => {\r\n    eventBus.emit('clear-filter', param)\r\n}\r\n\r\nexport const closeDropdown = () =>{\r\n    eventBus.emit('closeDropdown')\r\n}","export const getMonthName = (month: number, isZeroIndex: boolean = true) => {\r\n    const names = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר']\r\n\r\n    return names[isZeroIndex ? month : month - 1]\r\n}","import { getMonthName } from \"./get-month-name\"\r\n\r\nexport const getFormattedDate = (\r\n    date: { day?: number, month?: number, year?: number, timestamp?: number },\r\n    isZeroIndex: boolean = true,\r\n    isLinkAble: boolean = false) => {\r\n\r\n    if (!date) return\r\n\r\n    const { day, month, year } = date\r\n    let value = ''\r\n\r\n    if (isLinkAble) return value\r\n\r\n    if (day) {\r\n        value += day\r\n        if (typeof month === 'number') {\r\n            value += ' ב' + getMonthName(month, isZeroIndex)\r\n            value += ' ' + (getYear(year) || 'בשנה לא ידועה')\r\n        } else {\r\n            value += ' (חודש לא ידוע) ב-' + (getYear(year) || 'בשנה לא ידועה')\r\n        }\r\n        return value\r\n    }\r\n\r\n    if (typeof month === 'number') {\r\n        value += getMonthName(month, isZeroIndex)\r\n\r\n        value += ' ' + getYear(year)\r\n        return value\r\n    }\r\n\r\n    else return getYear(year)\r\n}\r\n\r\n\r\nconst getYear = (year: number | undefined) => {\r\n    return (year) ? year : 'בשנה לא ידועה'\r\n}","export const getFormattedNumber = (number: number) => {\r\n    return new Intl.NumberFormat('he').format(number)\r\n}","export const getValueByDynamicKey = (key: string, item: Object) => {\r\n    const keyPath = key.split('.')\r\n    let actualValue: any = item\r\n\r\n    for (let key of keyPath) {\r\n        if (!actualValue) return undefined\r\n        actualValue = actualValue[key as any]\r\n    }\r\n\r\n\r\n    return actualValue\r\n}","import { Entity } from \"../../models/interfaces/entities/entity\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntity = (entity: Entity) => {\r\n    store.dispatch({ type: 'updateDisplayEntity', entity })\r\n}\r\n\r\n\r\nexport const clearDisplayEntity = () => {\r\n    store.dispatch({ type: 'clearDisplayEntity' })\r\n}","import { EntityItem } from \"../../models/types/entities/item/entity-item\"\r\nimport { store } from \"../store\"\r\n\r\n\r\nexport const updateDisplayEntityItem = (editedItem: EntityItem) => {\r\n    store.dispatch({ type: 'updateDisplayEntityItem', editedItem })\r\n}\r\n\r\n\r\nexport const clearDisplayEntityItem = () => {\r\n    store.dispatch({ type: 'clearDisplayEntityItem' })\r\n}"],"names":["Dropdown","_ref","controllerText","Icon","controllerIcon","title","children","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","elDropdown","useRef","useOnClickOutside","useEffect","unsubscribeCloseDropdown","eventBus","_jsxs","className","ref","onClick","_jsx","ErrorMessage","_ref$message","message","RiEmotionSadFill","usePageDataCmp","type","setPageDataCmpType","usePageType","setPageType","getFormattedList","list","isDisjunction","arguments","length","undefined","Intl","ListFormat","format","ItemTitle","_title","_item$relatedInfo","_item$relatedInfo$min","_title2","_item$entityInfo$item","_item$entityInfo$item2","_title3","_title4","_item$entityInfo$item3","cmp","item","useSelector","state","displayEntityItemModule","replace","relatedInfo","miniProfile","displayName","entityInfo","name","display","writers","MainTitle","text","isSticky","formatter","SimpleInfoListPreview","info","value","getValueByDynamicKey","Array","isArray","Object","keys","shouldDisplayValue","_Fragment","getFormattedDate","dates","datesList","map","date","_date$start","_date$start2","_date$start3","_date$end4","_date$end5","_date$end6","_date$end","_date$end2","_date$end3","formatedText","start","day","month","year","concat","end","getFormattedDurations","getFormattedText","SimpleInfoListList","_cmp$infos","infos","SimpleProfile","_item$miniImages$","_item$miniImages$2","entity","displayEntityModule","simpleListCmp","imageName","miniImages","image","thumbnail","imageUrl","path","style","backgroundImage","RenderByDeviceWidth","maxDeviceWide","src","alt","CategoriesEntityItemsPreview","items","kebabCaseName","convertCamelCaseToKebabCase","entityName","ENTITIES_LIST","Link","to","id","CategoriesEntityItemsList","entityItems","key","entitiesMap","reduce","acc","currKey","push","classNames","catName","DynamicHeadCmp","PageHeadCmpList","cmps","makeId","CategoryList","miniCategories","_ref2","ImageGalleryPreview","miniImage","ImageGalleryList","_relatedInfo$miniProf","_entityInfo$name","_item$name","_useSelector2","DynamicAdditionalContentCmp","iconMap","ICON_TYPE_MAP","imageGallery","categoryList","ArticleAdditionalContentCmpList","BreadCrumbs","AiFillHome","size","idx","link","BiChevronLeft","RateStarPreview","filledStar","filledStars","fill","unfilledStars","_","AiFillStar","uuid","AiOutlineStar","Rater","user","userStateModule","onRatePage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rate","newRateData","updatedItem","wrap","_context","prev","next","entityItemService","_id","sent","structuredClone","itemInfo","updateDisplayEntityItem","insertAppMessage","t0","stop","_x","apply","starNum","rateMap","getFormattedNumber","raterCount","RatePage","isRatedBefore","avg","ArticleEntityDetails","_structure$head","_structure$additional","isLoading","setIsLoading","_useState3","_useState4","errorMessage","setErrorMessage","entityItemId","useParams","useLocation","pathname","split","loadItem","shouldUpdatePageView","_item","_errorMessage","detailsPageInfo","errorHandler","finish","Loader","structure","itemName","head","additional","SeoImplement","appTitle","openGraphTitle","openGraphDescription","PageCategoryEntityDetails","_item$miniImages","openGraphImage","DynamicEntityDetails","updateDisplayEntity","clearDisplayEntity","clearDisplayEntityItem","basicProps","_objectSpread","localStorageService","localStorage","getItem","JSON","parse","setItem","stringify","STORAGE_KEY","query","dbName","params","archiveState","set","httpService","abrupt","_x2","_x3","getById","_callee2","isPageAction","res","_args2","_context2","_handleEntityItemView","_x4","_x5","remove","_ref3","_callee3","_context3","_x6","_x7","save","_ref4","_callee4","savedItem","_context4","t1","_x8","_x9","getMiniProfilesByPharse","_ref5","_callee5","pharse","_args5","_context5","setEntityItemRate","_ref6","_callee6","ratePayload","_context6","_x10","_x11","_x12","setEntityItemLikeState","_ref7","_callee7","isLike","likeStatePayload","_context7","_x13","_x14","_x15","_ref8","_callee8","viewList","_context8","_x16","_x17","listenersMap","on","evName","listener","_toConsumableArray","filter","func","emit","data","forEach","createEventEmitter","activeClearFilter","param","getMonthName","isZeroIndex","isLinkAble","getYear","number","NumberFormat","_step","keyPath","actualValue","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","store","editedItem"],"sourceRoot":""}